{"version":3,"sources":["controller-likedme.js","controller-relationship.js","controller-share.js","controller-video.js","admin/about-jab.js","admin/apply-badge.js","admin/banned-users.js","admin/clinics-question.js","admin/email-search.js","admin/graph.js","admin/name-search.js","admin/photo-review.js","admin/reported-users.js","admin/user-admin.js","admin/vote-report.js","admin/where-u-heard.js","search/search-profile-view.js","profile/profile-edit.js","profile/profile-view-current-user.js","util/social-auth.js","util/util-app.js","util/util-geo.js","util/util-image.js","controller-likedme.ts","app.ts.js","controller-relationship.ts","controller-share.ts","controller-video.ts","mocks_test.ts","admin/about-jab.ts","admin/apply-badge.ts","admin/banned-users.ts","admin/clinics-question.ts","admin/email-search.ts","admin/graph.ts","admin/name-search.ts","admin/photo-review.ts","admin/reported-users.ts","admin/user-admin.ts","admin/vote-report.ts","admin/where-u-heard.ts","chat/chat-profile-image.ts","chat/unread-chats-badge.ts","facebook/facebook-details.ts","search/search-profile-view.ts","profile/profile-age.filter.ts","profile/profile-details.ts","profile/profile-edit.ts","profile/profile-image.filter.ts","profile/profile-view-current-user.ts","util/file-url.filter.ts","util/filters-app.ts","util/log-submitter.ts","util/social-auth.ts","util/util-app.ts","util/util-geo.ts","util/util-image.ts"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","app","LikedMe","$log","$rootScope","$scope","$state","$ionicModal","$ionicPopup","AppService","AppUtil","_this","this","info","fromTemplateUrl","scope","animation","then","modal","profileModal","$on","remove","refresh","$inject","value","_this2","getProfilesWhoLikeMe","profiles","log","error","JSON","stringify","toastSimple","$broadcast","index","debug","profile","profileIndex","show","process","liked","_this3","blockingCall","processMatch","splice","close","hide","alert","title","templateUrl","buttons","text","type","angular","module","controller","RelationshipCtrl","getProfilesWhoWantsToHaveARelationshipWithMe","profilePendingRequest","profilePendingInvite","profileMutual","profileList","relationship","processPregnancy","ShareController","$cordovaSocialSharing","socialShareMessage","socialShareSubject","playStoreUrl","itunesUrl","webStoreUrl","shareStoreUrl","ionic","Platform","isAndroid","isIOS","share","analytics","trackView","TwilioVideoChat","ParseService","hasWebRTC","navigator","Inviting","InCall","Incoming","twilioAccessToken","init","event","token","conversationsClient","isListening","accessManager","Twilio","AccessManager","on","warn","getTwilioToken","updateToken","closeModal","toastSimpleTranslate","Conversations","Client","listen","onClientConnected","state","activeConversation","localMedia","stop","disconnect","e","incomingInvite","userId","getProfileByUserId","openModal","inviteToConversation","conversation","conversationStarted","_this4","status","accept","reject","_this5","identity","from","_this6","$apply","attach","participant","media","detach","mock$state","$provide","mock$ionicHistory","ionicHistory","mock$localStorage","localStorage","mock$analytics","eventTrack","mock$translate","translate","instant","mockAppService","mockParseService","$q","_$q_","when","getUserId","sendChatMessage","msg","match","id","rebuildMatches","mockLocalDB","LocalDB","getUnreadChats","setChatRead","chatId","read","saveChatMessage","mockAppUtil","promise","success","errorKey","msgKey","AboutJAB","refreshAbout","getAboutJab","about","addAboutJab","ApplyBadges","options","pagination","onlyExternal","data","slider","getApplyBadgeUsers","personCategory","personType","personSperm","personEgg","personWomb","personEmbryo","personHelpLevel","profileUpdate","hasSelfId","thingsIHave","saveProfileForApplyBadge","BannedUsers","$ionicActionSheet","$translate","reportModal","getBannedUsers","reports","report","getReportedUserDetails","details","reportDetails","recentMessagesToReporter","_","filter","recentMessages","userIds","indexOf","reportedBy","slice","photo","url","_url","photoUrl","deletePhoto","photos","fileUrl","destructiveText","titleText","cancelText","buttonClicked","closeReport","destructiveButtonClicked","banUserAction","action","_this7","banUser","reportedUser","ClinicsQuestion","modalText","submitted","clinicsModal","getClinicsQuestion","questions","clinicQuestions","form","$valid","addClinicsQuestion","clinicQuestion","setTimeout","resetForm","question","toJSON","confirm","template","res","deleteQ","delClinicsQuestion","$setPristine","$setUntouched","AdminEmailSearch","email","search","subTitle","onTap","preventDefault","result","searchUsersByEmail","users","GraphReport","labels","voterReport","series","numDays","matchData","chatsData","datasetOverride","yAxisID","scales","yAxes","display","position","getReport","curDate","Date","dateCovered","setDate","getDate","push","toDateString","getMatchesReport","items","forEach","a","matchedDate","getChatMessageReport","groupByDateObj","groupBy","n","createdAt","item","arrayOfNames","senderName","console","AdminNameSearch","name","searchUsersByName","PhotoReview","$ionicHistory","$stateParams","profilePhotos","getProfilesWithPhotosToReview","photosInReview","file","approved","reviewPhoto","findIndex","pf","ReportedUsers","getReportedUsers","UserAdmin","loadUser","user","matches","getMutualMatches","find","uid1","uid2","isMatch","myThis","okText","deleteUser","goBack","reportProfile","processMatchFromAdmin","VoteReport","voteReports","getFindUsReport","WhereUFindUsAdmin","findUsModal","getFindUs","findUsGroup","addFindUs","findUs","delFindUs","directive","restrict","chat","replace","unreadCount","getUnreadChatsCount","$cordovaFacebook","facebookConnected","likes","getItem","parse","friends","api","setItem","SearchProfileView","translationsResult","translations","ionViewWillEnter","getProfileOfSelectedUser","objectId","profilePointer","getProfileSearchResults","pop","REPORT","INAPPROPRIATE_CONTENT","CANCEL","cancel","age","birthdate","getFullYear","currentUserProfile","getProfile","myLocation","location","_latitude","_longitude","geocodingAPI","num","fetch","json","out","address","formatted_address","country","err","distance","GeoUtils","getDistanceFromLatLonInKm","latitude","longitude","distanceType","distanceString","toFixed","isCurrentUser","ProfilePhoto","selected","ProfileEdit","$cordovaCamera","MAX_PHOTOS","NO_IMAGE","speed","expandText","map","onRedirectToEditProfile","remainingPhotos","remainingInReviewPhotos","saveProfile","first","last","findLastIndex","swapArrayElements","go","isWebView","sourceType","Camera","PictureSourceType","CAMERA","PHOTOLIBRARY","quality","destinationType","DestinationType","DATA_URL","allowEdit","encodingType","EncodingType","PNG","targetWidth","targetHeight","saveToPhotoAlbum","getPicture","imageData","dataUrl","cropPhoto","element","document","querySelector","style","height","scrollHeight","array","b","temp","nextViewOptions","historyRoot","disableBack","forceShow","cssClass","isFunction","isString","ProfileViewCurrentUser","lat1","lon1","lat2","lon2","R","dLat","deg2rad","dLon","Math","sin","cos","c","atan2","sqrt","d","deg","PI","isNumber","userProfile","to","output","config","serverUrl","parseAppId","staticData","decorator","$delegate","$injector","updateRecent","args","recent","unshift","MAX_RECENT","appService","debugFn","infoFn","logFn","warnFn","errorFn","MIN_TIME_DELAY","lastError","lastSubmitTime","call","arguments","apply","get","appVersion","encodeURIComponent","platform","version","errorMessage","now","xmlHttp","XMLHttpRequest","open","setRequestHeader","send","SocialAuth","$http","clientId","clientSecret","appScope","deferred","defer","window","cordova","cordovaMetadata","require","metadata","hasOwnProperty","browserRef","join","addEventListener","requestToken","split","defaults","headers","post","method","resolve","$tanslate","socialAuthFactory","factory","$ionicLoading","ionicToast","message","translateKey","translation","successFunction","errorTranslateKey","ionicLoading","delay","customError","resolveErrorMessage","code","appUtilFactory","degreesToRadians","degrees","ImagesUtil","outputFormat","q","canvas","createElement","ctx","getContext","img","Image","crossOrigin","onload","dataURL","width","drawImage","toDataURL","onerror","src","imgId","getElementById","convertImgToBase64","imgElement","clientWidth","clientHeight","imagesUtilFactory"],"mappings":"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","file":"../app.ts.js","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Controller viewing the profiles who have liked the user\n     */\n    var LikedMe = function () {\n        function LikedMe($log, $rootScope, $scope, $state, $ionicModal, $ionicPopup, AppService, AppUtil) {\n            var _this = this;\n\n            _classCallCheck(this, LikedMe);\n\n            $log.info('LikedMe constructor');\n            this.$log = $log;\n            this.$rootScope = $rootScope;\n            this.$scope = $scope;\n            this.$state = $state;\n            this.$ionicModal = $ionicModal;\n            this.$ionicPopup = $ionicPopup;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            $ionicModal.fromTemplateUrl('profileModal.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function (modal) {\n                return _this.profileModal = modal;\n            });\n            // Cleanup the modal when we're done with it\n            $scope.$on('$destroy', function () {\n                return _this.profileModal.remove();\n            });\n            this.refresh();\n        }\n\n        _createClass(LikedMe, [{\n            key: 'refresh',\n            value: function refresh() {\n                var _this2 = this;\n\n                this.AppService.getProfilesWhoLikeMe().then(function (profiles) {\n                    _this2.profiles = profiles;\n                    _this2.$log.log('getProfilesWhoLikeMe returned ' + profiles.length + ' profiles');\n                }, function (error) {\n                    _this2.$log.error('Error loading profiles who liked me ' + JSON.stringify(error));\n                    _this2.AppUtil.toastSimple('Unable to load profiles');\n                }).finally(function () {\n                    return _this2.$scope.$broadcast('scroll.refreshComplete');\n                });\n            }\n        }, {\n            key: 'view',\n            value: function view(index) {\n                this.$log.debug('viewing profile who liked me at index ' + index);\n                this.profile = this.profiles[index];\n                this.profileIndex = index;\n                this.profileModal.show();\n            }\n        }, {\n            key: 'like',\n            value: function like() {\n                this.$log.debug('liking profile at index ' + this.profileIndex);\n                this.process(true);\n            }\n        }, {\n            key: 'pass',\n            value: function pass() {\n                this.$log.debug('passing profile at index ' + this.profileIndex);\n                this.process(false);\n            }\n        }, {\n            key: 'process',\n            value: function process(liked) {\n                var _this3 = this;\n\n                this.AppUtil.blockingCall(this.AppService.processMatch(this.profile, liked), function () {\n                    _this3.profiles.splice(_this3.profileIndex, 1);\n                    _this3.close();\n                });\n            }\n        }, {\n            key: 'close',\n            value: function close() {\n                this.profileModal.hide();\n                this.profileIndex = null;\n                this.profile = null;\n            }\n        }, {\n            key: 'onClickBadgeInfo',\n            value: function onClickBadgeInfo() {\n                var alertPopup = this.$ionicPopup.alert({\n                    title: 'Self Identification Badges',\n                    templateUrl: 'badgeInfo.html',\n                    buttons: [{\n                        text: 'Ok',\n                        type: 'button-assertive'\n                    }]\n                });\n            }\n        }]);\n\n        return LikedMe;\n    }();\n\n    app.LikedMe = LikedMe;\n    LikedMe.$inject = ['$log', '$rootScope', '$scope', '$state', '$ionicModal', '$ionicPopup', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('LikedMe', LikedMe);\n})(app || (app = {}));","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Controller viewing the profiles who have relationships with the user\n     */\n    var RelationshipCtrl = function () {\n        function RelationshipCtrl($log, $rootScope, $scope, $state, $ionicModal, AppService, AppUtil) {\n            var _this = this;\n\n            _classCallCheck(this, RelationshipCtrl);\n\n            $log.info('RelationshipCtrl constructor');\n            this.$log = $log;\n            this.$rootScope = $rootScope;\n            this.$scope = $scope;\n            this.$state = $state;\n            this.$ionicModal = $ionicModal;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            $ionicModal.fromTemplateUrl('profileModal.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function (modal) {\n                return _this.profileModal = modal;\n            });\n            // Cleanup the modal when we're done with it\n            $scope.$on('$destroy', function () {\n                return _this.profileModal.remove();\n            });\n            this.refresh();\n        }\n\n        _createClass(RelationshipCtrl, [{\n            key: 'refresh',\n            value: function refresh() {\n                var _this2 = this;\n\n                this.AppService.getProfilesWhoWantsToHaveARelationshipWithMe().then(function (profiles) {\n                    _this2.profilePendingRequest = profiles[\"pendingUserRequest\"];\n                    _this2.profilePendingInvite = profiles[\"pendingUserInvite\"];\n                    _this2.profileMutual = profiles[\"mutualUsers\"];\n                    _this2.$log.log('getProfilesWhoWantsToHaveARelationshipWithMe pending request returned ' + _this2.profilePendingRequest.length + ' profiles');\n                    _this2.$log.log('getProfilesWhoWantsToHaveARelationshipWithMe pending invitereturned ' + _this2.profilePendingInvite.length + ' profiles');\n                    _this2.$log.log('getProfilesWhoWantsToHaveARelationshipWithMe mutual returned ' + _this2.profileMutual.length + ' profiles');\n                }, function (error) {\n                    _this2.$log.error('Error loading profiles who wants to have a relationship with current user ' + JSON.stringify(error));\n                    _this2.AppUtil.toastSimple('Unable to load profiles');\n                }).finally(function () {\n                    return _this2.$scope.$broadcast('scroll.refreshComplete');\n                });\n            }\n        }, {\n            key: 'view',\n            value: function view(index, profileList) {\n                this.$log.debug('viewing profile who wants to have a relationship with me at index ' + index);\n                this.profiles = profileList;\n                this.profile = this.profiles[index];\n                this.profileIndex = index;\n                this.profileModal.show();\n            }\n        }, {\n            key: 'like',\n            value: function like() {\n                this.$log.debug('approving relationship invite at index ' + this.profileIndex);\n                this.process(true);\n            }\n        }, {\n            key: 'pass',\n            value: function pass() {\n                this.$log.debug('declining relationship invite at index ' + this.profileIndex);\n                this.process(false);\n            }\n        }, {\n            key: 'process',\n            value: function process(relationship) {\n                var _this3 = this;\n\n                this.AppUtil.blockingCall(this.AppService.processPregnancy(this.profile, relationship), function () {\n                    _this3.profiles.splice(_this3.profileIndex, 1);\n                    _this3.close();\n                });\n            }\n        }, {\n            key: 'close',\n            value: function close() {\n                this.profileModal.hide();\n                this.profileIndex = null;\n                this.profile = null;\n            }\n        }]);\n\n        return RelationshipCtrl;\n    }();\n\n    app.RelationshipCtrl = RelationshipCtrl;\n    RelationshipCtrl.$inject = ['$log', '$rootScope', '$scope', '$state', '$ionicModal', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('RelationshipCtrl', RelationshipCtrl);\n})(app || (app = {}));","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Controller for the social sharing action\n     */\n    var ShareController = function () {\n        function ShareController($log, $cordovaSocialSharing, socialShareMessage, socialShareSubject, playStoreUrl, itunesUrl, webStoreUrl) {\n            _classCallCheck(this, ShareController);\n\n            this.$log = $log;\n            this.$cordovaSocialSharing = $cordovaSocialSharing;\n            this.socialShareMessage = socialShareMessage;\n            this.socialShareSubject = socialShareSubject;\n            this.playStoreUrl = playStoreUrl;\n            this.itunesUrl = itunesUrl;\n            this.webStoreUrl = webStoreUrl;\n        }\n\n        _createClass(ShareController, [{\n            key: 'share',\n            value: function share() {\n                var _this = this;\n\n                this.shareStoreUrl = ionic.Platform.isAndroid() ? this.playStoreUrl : ionic.Platform.isIOS() ? this.itunesUrl : this.webStoreUrl;\n                this.$cordovaSocialSharing.share(this.socialShareSubject, this.socialShareMessage, null, this.shareStoreUrl) // Share via native share sheet \n                .then(function () {\n                    if (typeof analytics !== 'undefined') {\n                        analytics.trackView(\"Invite My Friends Controller\");\n                    }\n                    _this.$log.debug('Social share action complete');\n                }, function (error) {\n                    _this.$log.error('Social share action error ' + JSON.stringify(error));\n                });\n            }\n        }]);\n\n        return ShareController;\n    }();\n\n    app.ShareController = ShareController;\n    ShareController.$inject = ['$log', '$cordovaSocialSharing', 'socialShareMessage', 'socialShareSubject', 'playStoreUrl', 'itunesUrl', 'webStoreUrl'];\n    angular.module('controllers.share', ['constants', 'ngCordova.plugins.socialSharing', 'ionic']).controller('ShareController', ShareController);\n})(app || (app = {}));","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Controller for the Twilio WebRTC video calling.\n     * The controller-as is defined in the index.html to ensure there is one accessible instance.\n     * On Android this required the android.permission.CAMERA permission.\n     * This can be added with the cordova plugin at https://github.com/campers/android-camera-permission/\n     */\n    var TwilioVideoChat = function () {\n        // Generate an AccessToken in the Twilio Account Portal - https://www.twilio.com/user/account/video/testing-tools\n        function TwilioVideoChat($log, $rootScope, $scope, $ionicModal, $ionicPopup, AppService, AppUtil, ParseService) {\n            var _this = this;\n\n            _classCallCheck(this, TwilioVideoChat);\n\n            this.$log = $log;\n            this.$rootScope = $rootScope;\n            this.$scope = $scope;\n            this.$ionicModal = $ionicModal;\n            this.$ionicPopup = $ionicPopup;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.ParseService = ParseService;\n            this.hasWebRTC = navigator['webkitGetUserMedia'] || navigator['mozGetUserMedia'];\n            // state may be one of these three states\n            this.Inviting = 'inviting';\n            this.InCall = 'inCall';\n            this.Incoming = 'incoming';\n            $scope['video'] = this;\n            this.$ionicModal.fromTemplateUrl('video.html', {\n                scope: this.$scope,\n                animation: 'slide-in-up'\n            }).then(function (modal) {\n                return _this.modal = modal;\n            });\n            if (AppService.twilioAccessToken) {\n                this.init(AppService.twilioAccessToken);\n            } else {\n                $rootScope.$on('twilioAccessToken', function (event, token) {\n                    return _this.init(token);\n                });\n            }\n        }\n\n        _createClass(TwilioVideoChat, [{\n            key: 'isSupported',\n            value: function isSupported() {\n                return this.hasWebRTC && this.conversationsClient && this.conversationsClient.isListening;\n            }\n        }, {\n            key: 'init',\n            value: function init(twilioAccessToken) {\n                var _this2 = this;\n\n                this.$log.log('Initialising Twilio');\n                if (!this.hasWebRTC) {\n                    this.$log.log('WebRTC not supported');\n                    return;\n                }\n                var accessManager = new Twilio.AccessManager(twilioAccessToken);\n                accessManager.on('tokenExpired', function () {\n                    _this2.$log.warn('Twilio token expired');\n                    _this2.ParseService.getTwilioToken().then(function (token) {\n                        accessManager.updateToken(token);\n                    }, function (error) {\n                        return _this2.$log.error('Error getting an updated Twilio token', error);\n                    });\n                });\n                accessManager.on('error', function (error) {\n                    _this2.closeModal();\n                    _this2.AppUtil.toastSimpleTranslate('VIDEO_SERVICE_ERROR');\n                    _this2.$log.error('Twilio access manager error', error);\n                });\n                this.conversationsClient = new Twilio.Conversations.Client(accessManager);\n                this.conversationsClient.listen().then(function () {\n                    return _this2.onClientConnected();\n                }, function (error) {\n                    _this2.$log.error('Twilio Conversations.Client.listen() error', error);\n                    _this2.AppUtil.toastSimpleTranslate('VIDEO_SERVICE_ERROR');\n                });\n                this.conversationsClient.on('error', function (error) {\n                    _this2.closeModal();\n                    _this2.AppUtil.toastSimpleTranslate('VIDEO_SERVICE_ERROR');\n                    _this2.$log.error('Twilio conversation client error', error);\n                    // TODO handle error here. Only show popup if there was an active conversation or invite?\n                });\n            }\n        }, {\n            key: 'openModal',\n            value: function openModal(state) {\n                this.state = state;\n                this.modal.show();\n            }\n        }, {\n            key: 'closeModal',\n            value: function closeModal() {\n                this.modal.hide();\n                if (this.activeConversation) {\n                    try {\n                        this.activeConversation.localMedia.stop();\n                        this.activeConversation.disconnect();\n                    } catch (e) {}\n                    this.activeConversation = null;\n                }\n                this.profile = null;\n                this.state = null;\n                this.incomingInvite = null;\n            }\n            /**\n             * Invite a user to video chat\n             * @param userId the user to invite\n             */\n\n        }, {\n            key: 'invite',\n            value: function invite(userId) {\n                var _this3 = this;\n\n                this.$log.log('Inviting user id:' + userId);\n                this.profile = this.AppService.getProfileByUserId(userId);\n                this.openModal(this.Inviting);\n                this.conversationsClient.inviteToConversation(userId).then(function (conversation) {\n                    return _this3.conversationStarted(conversation);\n                }, function (error) {\n                    _this3.closeModal();\n                    _this3.AppUtil.toastSimpleTranslate('VIDEO_START_ERROR');\n                    _this3.$log.error('Twilio conversationStarted error ' + error + ' ' + JSON.stringify(error));\n                });\n            }\n            // Button actions\n            /** Accepting an incoming video invite */\n\n        }, {\n            key: 'accept',\n            value: function accept() {\n                var _this4 = this;\n\n                if (this.incomingInvite && this.incomingInvite.status === 'pending') {\n                    this.incomingInvite.accept().then(function (conversation) {\n                        return _this4.conversationStarted(conversation);\n                    }, function (error) {\n                        _this4.closeModal();\n                        _this4.AppUtil.toastSimpleTranslate('VIDEO_START_ERROR');\n                        _this4.$log.error('Twilio incomingInvite.accept() error', error);\n                    });\n                } else {\n                    this.closeModal();\n                    this.AppUtil.toastSimpleTranslate('VIDEO_START_ERROR');\n                    this.$log.info('Did not accept incomingInvite ' + (this.incomingInvite ? this.incomingInvite.status : 'null'));\n                }\n            }\n            /** Reject an incoming video invite */\n\n        }, {\n            key: 'reject',\n            value: function reject() {\n                if (this.incomingInvite) {\n                    try {\n                        this.incomingInvite.reject();\n                    } catch (e) {\n                        this.$log.warn('Error rejecting video invite', e);\n                    }\n                }\n                this.closeModal();\n            }\n            /** Cancel an outgoing invite in progress */\n\n        }, {\n            key: 'cancelInvite',\n            value: function cancelInvite() {\n                // TODO cancel the successful creation of the conversation\n                this.closeModal();\n            }\n            /** Disconnect from a video call currently in progress */\n\n        }, {\n            key: 'disconnect',\n            value: function disconnect() {\n                this.closeModal();\n                if (this.activeConversation) this.activeConversation.disconnect();\n            }\n        }, {\n            key: 'onClientConnected',\n            value: function onClientConnected() {\n                var _this5 = this;\n\n                this.$log.log('Connected to Twilio. Listening for incoming Invites as ' + this.conversationsClient.identity);\n                this.conversationsClient.on('invite', function (incomingInvite) {\n                    _this5.$log.log('Incoming video invite from: ' + incomingInvite.from);\n                    _this5.profile = _this5.AppService.getProfileByUserId(incomingInvite.from);\n                    if (_this5.activeConversation) {\n                        _this5.AppUtil.toastSimpleTranslate('Conversation already active. Rejecting invite');\n                        incomingInvite.reject();\n                    } else {\n                        _this5.incomingInvite = incomingInvite;\n                        _this5.openModal(_this5.Incoming);\n                    }\n                });\n            }\n            /** conversation is live */\n\n        }, {\n            key: 'conversationStarted',\n            value: function conversationStarted(conversation) {\n                var _this6 = this;\n\n                this.$log.log('In an active Conversation');\n                this.activeConversation = conversation;\n                this.state = this.InCall;\n                this.$scope.$apply(); // this comes in outside of the angular lifecycle so notify this.state has updated\n                // Draw local video\n                conversation.localMedia.attach('#video-local');\n                this.$log.log('Attached local media');\n                // When a participant joins, draw their video on screen\n                conversation.on('participantConnected', function (participant) {\n                    _this6.$log.log('Participant ' + participant.identity + ' connected');\n                    participant.media.attach('#video-remote');\n                    _this6.$log.log('Attached remote video');\n                });\n                // When a participant disconnects, note in log\n                conversation.on('participantDisconnected', function (participant) {\n                    _this6.$log.log('Participant ' + participant.identity + ' disconnected');\n                    participant.media.detach('#video-remote');\n                    _this6.closeModal();\n                });\n                // When the conversation ends, stop capturing local video\n                conversation.on('ended', function (conversation) {\n                    _this6.$log.log('Twilio conversation ended');\n                    conversation.localMedia.stop();\n                    conversation.disconnect();\n                    _this6.activeConversation = null;\n                    _this6.closeModal();\n                });\n            }\n        }]);\n\n        return TwilioVideoChat;\n    }();\n\n    app.TwilioVideoChat = TwilioVideoChat;\n    TwilioVideoChat.$inject = ['$log', '$rootScope', '$scope', '$ionicModal', '$ionicPopup', 'AppService', 'AppUtil', 'ParseService'];\n    var module = angular.module('controllers');\n    module.controller('TwilioVideoChat', TwilioVideoChat);\n})(app || (app = {}));","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    var AboutJAB = function () {\n        function AboutJAB($ionicPopup, $log, $scope, AppService, AppUtil) {\n            var _this = this;\n\n            _classCallCheck(this, AboutJAB);\n\n            this.$ionicPopup = $ionicPopup;\n            this.$log = $log;\n            this.$scope = $scope;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            $scope.$on('$ionicView.beforeEnter', function () {\n                return _this.refreshAbout();\n            });\n        }\n\n        _createClass(AboutJAB, [{\n            key: 'refreshAbout',\n            value: function refreshAbout() {\n                var _this2 = this;\n\n                this.AppUtil.blockingCall(this.AppService.getAboutJab(), function (about) {\n                    _this2.about = about;\n                });\n            }\n        }, {\n            key: 'saveAbout',\n            value: function saveAbout() {\n                var _this3 = this;\n\n                this.AppUtil.blockingCall(this.AppService.addAboutJab(this.about), function () {\n                    _this3.AppUtil.toastSimple(\"Saved Successfully\");\n                    _this3.refreshAbout();\n                });\n            }\n        }]);\n\n        return AboutJAB;\n    }();\n\n    app.AboutJAB = AboutJAB;\n    AboutJAB.$inject = ['$ionicPopup', '$log', '$scope', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('AboutJAB', AboutJAB);\n})(app || (app = {}));","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Controller\n     */\n    var ApplyBadges = function () {\n        function ApplyBadges($log, $rootScope, $scope, $q, $state, $ionicModal, AppService, AppUtil) {\n            var _this = this;\n\n            _classCallCheck(this, ApplyBadges);\n\n            this.$log = $log;\n            this.$rootScope = $rootScope;\n            this.$scope = $scope;\n            this.$q = $q;\n            this.$state = $state;\n            this.$ionicModal = $ionicModal;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.$scope.options = {\n                pagination: false,\n                onlyExternal: true\n            };\n            $ionicModal.fromTemplateUrl('applybadges.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function (modal) {\n                return _this.profileModal = modal;\n            });\n            // Cleanup the modal when we're done with it\n            $scope.$on('$destroy', function () {\n                return _this.profileModal.remove();\n            });\n            this.$scope.$on(\"$ionicSlides.sliderInitialized\", function (event, data) {\n                // data.slider is the instance of Swiper\n                $scope.slider = data.slider;\n            });\n            this.refresh();\n        }\n\n        _createClass(ApplyBadges, [{\n            key: 'refresh',\n            value: function refresh() {\n                var _this2 = this;\n\n                this.AppUtil.blockingCall(this.AppService.getApplyBadgeUsers(), function (profiles) {\n                    _this2.$log.log('Loaded ' + profiles.length + ' items');\n                    _this2.profiles = profiles;\n                });\n            }\n        }, {\n            key: 'viewDetails',\n            value: function viewDetails(profile) {\n                this.profile = profile;\n                this.personCategory = this.profile.personCategory;\n                this.personType = this.profile.personType;\n                this.personSperm = this.profile.personSperm;\n                this.personEgg = this.profile.personEgg;\n                this.personWomb = this.profile.personWomb;\n                this.personEmbryo = this.profile.personEmbryo;\n                this.personHelpLevel = this.profile.personHelpLevel;\n                this.profileModal.show();\n            }\n        }, {\n            key: 'closeModal',\n            value: function closeModal() {\n                this.refresh();\n                this.profile = null;\n                this.profileModal.hide();\n            }\n        }, {\n            key: 'applyBadge',\n            value: function applyBadge() {\n                var _this3 = this;\n\n                var profileUpdate = {};\n                profileUpdate.personCategory = this.personCategory ? this.personCategory : '0';\n                profileUpdate.hasSelfId = true;\n                if (this.personCategory === '3') {\n                    profileUpdate.personType = '0';\n                    profileUpdate.personSperm = false;\n                    profileUpdate.personEgg = false;\n                    profileUpdate.personWomb = false;\n                    profileUpdate.personEmbryo = false;\n                    profileUpdate.personHelpLevel = '0';\n                } else {\n                    profileUpdate.personType = this.personType ? this.personType : '0';\n                    profileUpdate.personSperm = this.personSperm ? this.personSperm : false;\n                    profileUpdate.personEgg = this.personEgg ? this.personEgg : false;\n                    profileUpdate.personWomb = this.personWomb ? this.personWomb : false;\n                    profileUpdate.personEmbryo = this.personEmbryo ? this.personEmbryo : false;\n                    profileUpdate.personHelpLevel = this.personHelpLevel ? this.personHelpLevel : '0';\n                }\n                var thingsIHave = \"\";\n                if (profileUpdate.personSperm) thingsIHave += \"S\";\n                if (profileUpdate.personEgg) thingsIHave += \"E\";\n                if (profileUpdate.personWomb) thingsIHave += \"W\";\n                if (profileUpdate.personEmbryo) thingsIHave += \"Y\";\n                if (this.personCategory !== '3' && !profileUpdate.personSperm && !profileUpdate.personEgg && !profileUpdate.personWomb && !profileUpdate.personEmbryo) thingsIHave += \"X\";\n                profileUpdate.thingsIHave = thingsIHave;\n                this.AppUtil.blockingCall(this.AppService.saveProfileForApplyBadge(this.profile, profileUpdate), function () {\n                    _this3.closeModal();\n                    _this3.AppUtil.toastSimple(\"Badge Applied Successfully\");\n                });\n            }\n        }]);\n\n        return ApplyBadges;\n    }();\n\n    app.ApplyBadges = ApplyBadges;\n    ApplyBadges.$inject = ['$log', '$rootScope', '$scope', '$q', '$state', '$ionicModal', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('ApplyBadges', ApplyBadges);\n})(app || (app = {}));","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Controller\n     */\n    var BannedUsers = function () {\n        function BannedUsers($log, $rootScope, $scope, $q, $state, $ionicModal, $ionicActionSheet, AppService, AppUtil, $translate) {\n            var _this = this;\n\n            _classCallCheck(this, BannedUsers);\n\n            this.$log = $log;\n            this.$rootScope = $rootScope;\n            this.$scope = $scope;\n            this.$q = $q;\n            this.$state = $state;\n            this.$ionicModal = $ionicModal;\n            this.$ionicActionSheet = $ionicActionSheet;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.$translate = $translate;\n            $ionicModal.fromTemplateUrl('admin/reportDetails.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function (modal) {\n                return _this.reportModal = modal;\n            });\n            // Cleanup the modal when we're done with it\n            $scope.$on('$destroy', function () {\n                return _this.reportModal.remove();\n            });\n            this.refresh();\n        }\n\n        _createClass(BannedUsers, [{\n            key: 'refresh',\n            value: function refresh() {\n                var _this2 = this;\n\n                this.AppUtil.blockingCall(this.AppService.getBannedUsers(), function (reports) {\n                    return _this2.reports = reports;\n                });\n            }\n        }, {\n            key: 'viewDetails',\n            value: function viewDetails(report) {\n                var _this3 = this;\n\n                this.AppUtil.blockingCall(this.AppService.getReportedUserDetails(report), function (details) {\n                    _this3.report = report;\n                    _this3.reportDetails = details;\n                    // Extract the messages that were sent to the user who raised the report\n                    _this3.reportDetails.recentMessagesToReporter = _.filter(details.recentMessages, function (msg) {\n                        return msg.userIds.indexOf(report.reportedBy.id) > -1;\n                    });\n                    if (_this3.reportDetails.recentMessagesToReporter.length > 6) _this3.reportDetails.recentMessagesToReporter.slice(0, 5);\n                    _this3.reportModal.show();\n                });\n            }\n        }, {\n            key: 'fileUrl',\n            value: function fileUrl(photo) {\n                if (photo.url) return photo.url();\n                return photo._url;\n            }\n        }, {\n            key: 'deletePhoto',\n            value: function deletePhoto(photoUrl) {\n                var _this4 = this;\n\n                this.$log.log('deleting photo at ' + photoUrl);\n                this.AppUtil.blockingCall(this.AppService.deletePhoto(this.report.id, photoUrl),\n                // On success remove the photo locally\n                function () {\n                    return _.remove(_this4.report.profile.photos, function (photo) {\n                        return _this4.fileUrl(photo) === photoUrl;\n                    });\n                });\n            }\n        }, {\n            key: 'actionReport',\n            value: function actionReport() {\n                var _this5 = this;\n\n                this.$ionicActionSheet.show({\n                    buttons: [{ text: 'Deleted Photo' }, { text: 'None' }],\n                    destructiveText: 'Ban User',\n                    titleText: 'Select Report Action',\n                    cancelText: this.$translate.instant('CANCEL'),\n                    // cancel: function () {},\n                    buttonClicked: function buttonClicked(index) {\n                        switch (index) {\n                            case 0:\n                                _this5.closeReport('deleted photo');\n                                break;\n                            case 1:\n                                _this5.closeReport('none');\n                                break;\n                        }\n                        return true;\n                    },\n                    destructiveButtonClicked: function destructiveButtonClicked(index) {\n                        _this5.banUserAction();\n                        return true;\n                    }\n                });\n            }\n        }, {\n            key: 'closeReport',\n            value: function closeReport(action) {\n                var _this6 = this;\n\n                this.$log.log('Closing report ' + this.report.id + ' with action ' + action);\n                this.AppUtil.blockingCall(this.AppService.closeReport(this.report.id, action), function () {\n                    _this6.closeModal();\n                    _.remove(_this6.reports, 'id', _this6.report.id);\n                    _this6.report = null;\n                    _this6.reportDetails = null;\n                });\n            }\n            /**\n             * Closes the report, and all other associated with the reported user, and bans the user.\n             */\n\n        }, {\n            key: 'banUserAction',\n            value: function banUserAction() {\n                var _this7 = this;\n\n                this.AppUtil.blockingCall(this.AppService.banUser(this.report.reportedUser), function () {\n                    _this7.closeModal();\n                    _this7.report = null;\n                    _this7.reportDetails = null;\n                    _this7.refresh(); // could be multiple reports for the user which are now closed, so just refresh\n                });\n            }\n        }, {\n            key: 'closeModal',\n            value: function closeModal() {\n                this.reportModal.hide();\n            }\n        }]);\n\n        return BannedUsers;\n    }();\n\n    app.BannedUsers = BannedUsers;\n    BannedUsers.$inject = ['$log', '$rootScope', '$scope', '$q', '$state', '$ionicModal', '$ionicActionSheet', 'AppService', 'AppUtil', '$translate'];\n    angular.module('controllers').controller('BannedUsers', BannedUsers);\n})(app || (app = {}));","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    var ClinicsQuestion = function () {\n        function ClinicsQuestion($ionicPopup, $log, $scope, $state, $ionicModal, AppService, AppUtil) {\n            var _this2 = this;\n\n            _classCallCheck(this, ClinicsQuestion);\n\n            this.$ionicPopup = $ionicPopup;\n            this.$log = $log;\n            this.$scope = $scope;\n            this.$state = $state;\n            this.$ionicModal = $ionicModal;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.modalText = \"New \";\n            this.submitted = false;\n            $scope.$on('$ionicView.beforeEnter', function () {\n                return _this2.refresh();\n            });\n            // $ionicModal.fromTemplateUrl('clinicsModal.html', {\n            // // Cleanup the modal when we're done with it\n            $scope.$on('$destroy', function () {\n                return _this2.clinicsModal.remove();\n            });\n            $ionicModal.fromTemplateUrl('templates/modal.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function (modal) {\n                return _this2.clinicsModal = modal;\n            });\n        }\n\n        _createClass(ClinicsQuestion, [{\n            key: 'refresh',\n            value: function refresh() {\n                var _this3 = this;\n\n                this.AppUtil.blockingCall(this.AppService.getClinicsQuestion(), function (questions) {\n                    _this3.$log.log('loaded ' + questions.length + ' questions');\n                    _this3.clinicQuestions = questions;\n                });\n            }\n        }, {\n            key: 'addClinicsQuestion',\n            value: function addClinicsQuestion(form) {\n                var _this4 = this;\n\n                this.submitted = true;\n                if (form.$valid) {\n                    this.AppUtil.blockingCall(this.AppService.addClinicsQuestion(this.clinicQuestion), function () {\n                        _this4.modalText = \"New \";\n                        _this4.clinicQuestion = null;\n                        _this4.AppUtil.toastSimple(\"Saved Successfully\");\n                        _this4.refresh();\n                    });\n                    setTimeout(this.resetForm(form), 1000);\n                }\n            }\n        }, {\n            key: 'editClinicsQuestion',\n            value: function editClinicsQuestion(question) {\n                this.modalText = \"Update \";\n                this.clinicQuestion = question.toJSON();\n                this.clinicsModal.show();\n            }\n        }, {\n            key: 'deleteClinicsQuestion',\n            value: function deleteClinicsQuestion(id) {\n                this.$log.log('Delete question ' + id);\n                var _this = this;\n                this.$ionicPopup.confirm({\n                    title: 'Delete Question',\n                    template: 'Are you sure you want to delete this question?'\n                }).then(function (res) {\n                    if (res) _this.deleteQ(id);\n                });\n            }\n        }, {\n            key: 'deleteQ',\n            value: function deleteQ(id) {\n                var _this5 = this;\n\n                this.AppUtil.blockingCall(this.AppService.delClinicsQuestion(id), function () {\n                    _this5.AppUtil.toastSimple(\"Deleted Successfully\");\n                    _this5.refresh();\n                });\n            }\n        }, {\n            key: 'close',\n            value: function close() {\n                this.modalText = \"New \";\n                this.clinicQuestion = null;\n                this.clinicsModal.hide();\n            }\n        }, {\n            key: 'resetForm',\n            value: function resetForm(form) {\n                this.clinicQuestion = null;\n                this.clinicsModal.hide();\n                form.$setPristine();\n                form.$setUntouched();\n            }\n        }]);\n\n        return ClinicsQuestion;\n    }();\n\n    app.ClinicsQuestion = ClinicsQuestion;\n    ClinicsQuestion.$inject = ['$ionicPopup', '$log', '$scope', '$state', '$ionicModal', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('ClinicsQuestion', ClinicsQuestion);\n})(app || (app = {}));","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Controller\n     */\n    var AdminEmailSearch = function () {\n        function AdminEmailSearch($ionicPopup, $log, $scope, $state, $ionicModal, AppService, AppUtil) {\n            var _this = this;\n\n            _classCallCheck(this, AdminEmailSearch);\n\n            this.$ionicPopup = $ionicPopup;\n            this.$log = $log;\n            this.$scope = $scope;\n            this.$state = $state;\n            this.$ionicModal = $ionicModal;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.email = ''; // search term\n            $scope.$on('$ionicView.enter', function () {\n                _this.$log.debug('AdminEmailSearch $ionicView.enter');\n                _this.search();\n            });\n        }\n\n        _createClass(AdminEmailSearch, [{\n            key: 'search',\n            value: function search() {\n                var _this2 = this;\n\n                this.$scope['search'] = { email: this.email };\n                this.$ionicPopup.show({\n                    template: '<input type=\"text\" ng-model=\"search.email\">',\n                    title: 'Enter email to search',\n                    subTitle: 'Minimum 4 characters. Searches starting with',\n                    scope: this.$scope,\n                    buttons: [{\n                        text: '<b>Search</b>',\n                        type: 'button-positive',\n                        onTap: function onTap(e) {\n                            if (_this2.$scope['search'].email.length < 4) {\n                                _this2.AppUtil.toastSimple('Enter at least 4 characters');\n                                e.preventDefault();\n                                return;\n                            }\n                            return _this2.$scope['search'].email;\n                        }\n                    }]\n                }).then(function (result) {\n                    _this2.$log.log('email search ', result);\n                    _this2.email = result;\n                    _this2.AppUtil.blockingCall(_this2.AppService.searchUsersByEmail(result), function (users) {\n                        _this2.users = users;\n                        _this2.$log.info('Found ' + users.length + ' users with email starting with ' + result);\n                    });\n                });\n            }\n        }]);\n\n        return AdminEmailSearch;\n    }();\n\n    app.AdminEmailSearch = AdminEmailSearch;\n    AdminEmailSearch.$inject = ['$ionicPopup', '$log', '$scope', '$state', '$ionicModal', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('AdminEmailSearch', AdminEmailSearch);\n})(app || (app = {}));","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    var GraphReport = function () {\n        function GraphReport($log, $scope, AppService, AppUtil) {\n            var _this = this;\n\n            _classCallCheck(this, GraphReport);\n\n            this.$log = $log;\n            this.$scope = $scope;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.labels = [];\n            this.voterReport = null;\n            this.series = ['Matches Per Day', 'Series B'];\n            this.numDays = 7;\n            this.matchData = [];\n            this.chatsData = [28, 48, 40, 19, 86, 27, 90];\n            this.data = [[]];\n            // public onClick = function (points, evt) {\n            //     console.log(points, evt);\n            // };\n            this.datasetOverride = [{ yAxisID: 'y-axis-1' }, { yAxisID: 'y-axis-2' }];\n            this.options = {\n                scales: {\n                    yAxes: [{\n                        id: 'y-axis-1',\n                        type: 'linear',\n                        display: true,\n                        position: 'left'\n                    }, {\n                        id: 'y-axis-2',\n                        type: 'linear',\n                        display: true,\n                        position: 'right'\n                    }]\n                }\n            };\n            $scope.$on('$ionicView.beforeEnter', function () {\n                return _this.getReport();\n            });\n        }\n\n        _createClass(GraphReport, [{\n            key: 'getReport',\n            value: function getReport() {\n                var _this2 = this;\n\n                var curDate = new Date();\n                var dateCovered = new Date();\n                dateCovered.setDate(dateCovered.getDate() - this.numDays + 1);\n                this.labels = [];\n                this.matchData = [];\n                this.voterReport = null;\n                this.data = [[]];\n                while (dateCovered <= curDate) {\n                    this.labels.push(dateCovered.toDateString());\n                    dateCovered.setDate(dateCovered.getDate() + 1);\n                }\n                this.AppUtil.blockingCall(this.AppService.getMatchesReport(this.numDays), function (items) {\n                    _this2.voterReport = {};\n                    _this2.$log.log('LOADED ' + items.length + ' items');\n                    items.forEach(function (a) {\n                        if (a.matchedDate.toDateString() in _this2.voterReport) _this2.voterReport[a.matchedDate.toDateString()]++;else _this2.voterReport[a.matchedDate.toDateString()] = 1;\n                    });\n                    _this2.labels.forEach(function (a) {\n                        if (a in _this2.voterReport) _this2.matchData.push(_this2.voterReport[a]);else _this2.matchData.push(0);\n                    });\n                    _this2.data[0] = _this2.matchData;\n                    _this2.AppService.getChatMessageReport(_this2.numDays).then(function (items) {\n                        _this2.$log.log('loaded ' + items.length + ' chats');\n                        var groupByDateObj = _.groupBy(items, function (n) {\n                            return n.createdAt.toDateString();\n                        });\n                        for (var item in groupByDateObj) {\n                            var arrayOfNames = _.groupBy(item, function (n) {\n                                return n.senderName;\n                            });\n                            console.log(\"Names length: \" + arrayOfNames.length);\n                        }\n                    });\n                });\n            }\n        }]);\n\n        return GraphReport;\n    }();\n\n    app.GraphReport = GraphReport;\n    GraphReport.$inject = ['$log', '$scope', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('GraphReport', GraphReport);\n})(app || (app = {}));","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Controller\n     */\n    var AdminNameSearch = function () {\n        function AdminNameSearch($ionicPopup, $log, $scope, $state, $ionicModal, AppService, AppUtil) {\n            var _this = this;\n\n            _classCallCheck(this, AdminNameSearch);\n\n            this.$ionicPopup = $ionicPopup;\n            this.$log = $log;\n            this.$scope = $scope;\n            this.$state = $state;\n            this.$ionicModal = $ionicModal;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.name = ''; // search term\n            $scope.$on('$ionicView.enter', function () {\n                _this.search();\n            });\n        }\n\n        _createClass(AdminNameSearch, [{\n            key: 'search',\n            value: function search() {\n                var _this2 = this;\n\n                // An elaborate, custom popup\n                this.$scope['search'] = { name: this.name };\n                this.$ionicPopup.show({\n                    template: '<input type=\"text\" ng-model=\"search.name\">',\n                    title: 'Enter name to search',\n                    subTitle: 'Minimum 4 characters. Searches starting with',\n                    scope: this.$scope,\n                    buttons: [{\n                        text: '<b>Search</b>',\n                        type: 'button-positive',\n                        onTap: function onTap(e) {\n                            if (_this2.$scope['search'].name.length < 2) {\n                                _this2.AppUtil.toastSimple('Enter at least 2 characters');\n                                e.preventDefault();\n                                return;\n                            }\n                            return _this2.$scope['search'].name;\n                        }\n                    }]\n                }).then(function (result) {\n                    _this2.$log.log('name search ', result);\n                    _this2.name = result;\n                    _this2.AppUtil.blockingCall(_this2.AppService.searchUsersByName(result), function (profiles) {\n                        _this2.profiles = profiles;\n                        _this2.$log.info('Found ' + profiles.length + ' profiles with name starting with ' + result);\n                    });\n                });\n            }\n        }]);\n\n        return AdminNameSearch;\n    }();\n\n    app.AdminNameSearch = AdminNameSearch;\n    AdminNameSearch.$inject = ['$ionicPopup', '$log', '$scope', '$state', '$ionicModal', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('AdminNameSearch', AdminNameSearch);\n})(app || (app = {}));","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    var PhotoReview = function () {\n        function PhotoReview($ionicPopup, $log, $scope, $ionicHistory, $state, $stateParams, AppService, AppUtil) {\n            var _this = this;\n\n            _classCallCheck(this, PhotoReview);\n\n            this.$ionicPopup = $ionicPopup;\n            this.$log = $log;\n            this.$scope = $scope;\n            this.$ionicHistory = $ionicHistory;\n            this.$state = $state;\n            this.$stateParams = $stateParams;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.profilePhotos = [];\n            $scope.$on('$ionicView.beforeEnter', function () {\n                return _this.refresh();\n            });\n        }\n\n        _createClass(PhotoReview, [{\n            key: 'refresh',\n            value: function refresh() {\n                var _this2 = this;\n\n                this.AppUtil.blockingCall(this.AppService.getProfilesWithPhotosToReview(), function (profiles) {\n                    _this2.$log.log('loaded ' + profiles.length + ' profiles with photos to review');\n                    profiles.forEach(function (profile) {\n                        return profile.photosInReview.forEach(function (file) {\n                            return _this2.profilePhotos.push({ profile: profile, file: file });\n                        });\n                    });\n                });\n            }\n        }, {\n            key: 'reviewPhoto',\n            value: function reviewPhoto(profile, file, approved) {\n                var _this3 = this;\n\n                console.log('controller reviewPhoto ', profile, file, approved);\n                this.AppUtil.blockingCall(this.AppService.reviewPhoto(profile.id, file.url(), approved), function () {\n                    _this3.$log.log('photo review success');\n                    // Remove the one we just reviewed\n                    _this3.profilePhotos.splice(_.findIndex(_this3.profilePhotos, function (pf) {\n                        return pf.file.url() === file.url();\n                    }), 1);\n                });\n            }\n        }]);\n\n        return PhotoReview;\n    }();\n\n    app.PhotoReview = PhotoReview;\n    PhotoReview.$inject = ['$ionicPopup', '$log', '$scope', '$ionicHistory', '$state', '$stateParams', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('PhotoReview', PhotoReview);\n})(app || (app = {}));","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Controller\n     */\n    var ReportedUsers = function () {\n        function ReportedUsers($log, $rootScope, $scope, $q, $state, $ionicModal, $ionicActionSheet, AppService, AppUtil, $translate) {\n            var _this = this;\n\n            _classCallCheck(this, ReportedUsers);\n\n            this.$log = $log;\n            this.$rootScope = $rootScope;\n            this.$scope = $scope;\n            this.$q = $q;\n            this.$state = $state;\n            this.$ionicModal = $ionicModal;\n            this.$ionicActionSheet = $ionicActionSheet;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.$translate = $translate;\n            $ionicModal.fromTemplateUrl('admin/reportDetails.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function (modal) {\n                return _this.reportModal = modal;\n            });\n            // Cleanup the modal when we're done with it\n            $scope.$on('$destroy', function () {\n                return _this.reportModal.remove();\n            });\n            this.refresh();\n        }\n\n        _createClass(ReportedUsers, [{\n            key: 'refresh',\n            value: function refresh() {\n                var _this2 = this;\n\n                this.AppUtil.blockingCall(this.AppService.getReportedUsers(), function (reports) {\n                    return _this2.reports = reports;\n                });\n            }\n        }, {\n            key: 'viewDetails',\n            value: function viewDetails(report) {\n                var _this3 = this;\n\n                this.AppUtil.blockingCall(this.AppService.getReportedUserDetails(report), function (details) {\n                    _this3.report = report;\n                    _this3.reportDetails = details;\n                    // Extract the messages that were sent to the user who raised the report\n                    _this3.reportDetails.recentMessagesToReporter = _.filter(details.recentMessages, function (msg) {\n                        return msg.userIds.indexOf(report.reportedBy.id) > -1;\n                    });\n                    if (_this3.reportDetails.recentMessagesToReporter.length > 6) _this3.reportDetails.recentMessagesToReporter.slice(0, 5);\n                    _this3.reportModal.show();\n                });\n            }\n        }, {\n            key: 'fileUrl',\n            value: function fileUrl(photo) {\n                if (photo.url) return photo.url();\n                return photo._url;\n            }\n        }, {\n            key: 'deletePhoto',\n            value: function deletePhoto(photoUrl) {\n                var _this4 = this;\n\n                this.$log.log('deleting photo at ' + photoUrl);\n                this.AppUtil.blockingCall(this.AppService.deletePhoto(this.report.id, photoUrl),\n                // On success remove the photo locally\n                function () {\n                    return _.remove(_this4.report.profile.photos, function (photo) {\n                        return _this4.fileUrl(photo) === photoUrl;\n                    });\n                });\n            }\n        }, {\n            key: 'actionReport',\n            value: function actionReport() {\n                var _this5 = this;\n\n                this.$ionicActionSheet.show({\n                    buttons: [{ text: 'Deleted Photo' }, { text: 'None' }],\n                    destructiveText: 'Ban User',\n                    titleText: 'Select Report Action',\n                    cancelText: this.$translate.instant('CANCEL'),\n                    // cancel: function () {},\n                    buttonClicked: function buttonClicked(index) {\n                        switch (index) {\n                            case 0:\n                                _this5.closeReport('deleted photo');\n                                break;\n                            case 1:\n                                _this5.closeReport('none');\n                                break;\n                        }\n                        return true;\n                    },\n                    destructiveButtonClicked: function destructiveButtonClicked(index) {\n                        _this5.banUserAction();\n                        return true;\n                    }\n                });\n            }\n        }, {\n            key: 'closeReport',\n            value: function closeReport(action) {\n                var _this6 = this;\n\n                this.$log.log('Closing report ' + this.report.id + ' with action ' + action);\n                this.AppUtil.blockingCall(this.AppService.closeReport(this.report.id, action), function () {\n                    _this6.closeModal();\n                    _.remove(_this6.reports, 'id', _this6.report.id);\n                    _this6.report = null;\n                    _this6.reportDetails = null;\n                });\n            }\n            /**\n             * Closes the report, and all other associated with the reported user, and bans the user.\n             */\n\n        }, {\n            key: 'banUserAction',\n            value: function banUserAction() {\n                var _this7 = this;\n\n                this.AppUtil.blockingCall(this.AppService.banUser(this.report.reportedUser), function () {\n                    _this7.closeModal();\n                    _this7.report = null;\n                    _this7.reportDetails = null;\n                    _this7.refresh(); // could be multiple reports for the user which are now closed, so just refresh\n                });\n            }\n        }, {\n            key: 'closeModal',\n            value: function closeModal() {\n                this.reportModal.hide();\n            }\n        }]);\n\n        return ReportedUsers;\n    }();\n\n    app.ReportedUsers = ReportedUsers;\n    ReportedUsers.$inject = ['$log', '$rootScope', '$scope', '$q', '$state', '$ionicModal', '$ionicActionSheet', 'AppService', 'AppUtil', '$translate'];\n    angular.module('controllers').controller('ReportedUsers', ReportedUsers);\n})(app || (app = {}));","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Controller\n     */\n    var UserAdmin = function () {\n        function UserAdmin($ionicPopup, $log, $scope, $ionicHistory, $state, $stateParams, AppService, AppUtil) {\n            var _this = this;\n\n            _classCallCheck(this, UserAdmin);\n\n            this.$ionicPopup = $ionicPopup;\n            this.$log = $log;\n            this.$scope = $scope;\n            this.$ionicHistory = $ionicHistory;\n            this.$state = $state;\n            this.$stateParams = $stateParams;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            $scope.$on('$ionicView.beforeEnter', function () {\n                var userId = _this.$stateParams.userId;\n                _this.$log.log('UserAdmin ' + userId);\n                _this.AppUtil.blockingCall(_this.AppService.loadUser(userId), function (user) {\n                    _this.user = user;\n                    _this.$log.log('loaded user ' + JSON.stringify(user));\n                    var matches = _this.AppService.getMutualMatches();\n                    var match = _.find(matches, function (match) {\n                        return match.uid1 === userId || match.uid2 === userId;\n                    });\n                    _this.isMatch = match ? true : false;\n                });\n            });\n        }\n\n        _createClass(UserAdmin, [{\n            key: 'deleteUser',\n            value: function deleteUser() {\n                var myThis = this;\n                this.$ionicPopup.confirm({\n                    title: 'Confirm delete',\n                    okText: 'Delete',\n                    cancelText: 'Cancel'\n                }).then(function (res) {\n                    if (res) myThis.AppUtil.blockingCall(myThis.AppService.deleteUser(myThis.user.id), function () {\n                        myThis.AppUtil.toastSimple('User deleted');\n                        myThis.$log.info('Deleted user ' + myThis.user.id);\n                        myThis.$ionicHistory.goBack();\n                    });\n                });\n            }\n        }, {\n            key: 'banUser',\n            value: function banUser() {\n                var myThis = this;\n                this.$ionicPopup.confirm({\n                    title: 'Confirm ban',\n                    okText: 'Ban',\n                    cancelText: 'Cancel'\n                }).then(function (res) {\n                    if (res) myThis.AppUtil.blockingCall(myThis.AppService.reportProfile('admin reporting reasons', myThis.user.profile, null), function () {\n                        myThis.AppService.banUser(myThis.user.id).then(function () {\n                            myThis.AppUtil.toastSimple('User banned');\n                            myThis.$log.info('Banned user ' + myThis.user.id);\n                            myThis.$ionicHistory.goBack();\n                        });\n                    });\n                });\n            }\n        }, {\n            key: 'connectUser',\n            value: function connectUser() {\n                var myThis = this;\n                this.$ionicPopup.confirm({\n                    title: 'Connect to user',\n                    okText: 'Connect',\n                    cancelText: 'Cancel'\n                }).then(function (res) {\n                    if (res) myThis.AppUtil.blockingCall(myThis.AppService.processMatchFromAdmin(myThis.user.profile, true, true), function () {\n                        myThis.AppUtil.toastSimple('User connected');\n                        myThis.$log.info('Established connection on user' + myThis.user.id);\n                        myThis.$ionicHistory.goBack();\n                    });\n                });\n            }\n        }]);\n\n        return UserAdmin;\n    }();\n\n    app.UserAdmin = UserAdmin;\n    UserAdmin.$inject = ['$ionicPopup', '$log', '$scope', '$ionicHistory', '$state', '$stateParams', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('UserAdmin', UserAdmin);\n})(app || (app = {}));","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    var VoteReport = function () {\n        function VoteReport($log, $scope, AppService, AppUtil) {\n            var _this = this;\n\n            _classCallCheck(this, VoteReport);\n\n            this.$log = $log;\n            this.$scope = $scope;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.voteReports = null;\n            this.voterReport = null;\n            $scope.$on('$ionicView.beforeEnter', function () {\n                return _this.refresh();\n            });\n        }\n\n        _createClass(VoteReport, [{\n            key: 'refresh',\n            value: function refresh() {\n                var _this2 = this;\n\n                this.voteReports = null;\n                this.voterReport = null;\n                this.AppUtil.blockingCall(this.AppService.getFindUsReport(), function (items) {\n                    _this2.voterReport = {};\n                    _this2.$log.log('loaded ' + items.length + ' items');\n                    _this2.voteReports = items;\n                    _this2.voteReports.forEach(function (a) {\n                        if (a.name in _this2.voterReport) _this2.voterReport[a.name]++;else _this2.voterReport[a.name] = 1;\n                    });\n                });\n            }\n        }]);\n\n        return VoteReport;\n    }();\n\n    app.VoteReport = VoteReport;\n    VoteReport.$inject = ['$log', '$scope', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('VoteReport', VoteReport);\n})(app || (app = {}));","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    var WhereUFindUsAdmin = function () {\n        function WhereUFindUsAdmin($ionicPopup, $log, $scope, $state, $ionicModal, AppService, AppUtil) {\n            var _this2 = this;\n\n            _classCallCheck(this, WhereUFindUsAdmin);\n\n            this.$ionicPopup = $ionicPopup;\n            this.$log = $log;\n            this.$scope = $scope;\n            this.$state = $state;\n            this.$ionicModal = $ionicModal;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.modalText = \"New \";\n            this.submitted = false;\n            $scope.$on('$ionicView.beforeEnter', function () {\n                return _this2.refresh();\n            });\n            // // Cleanup the modal when we're done with it\n            $scope.$on('$destroy', function () {\n                return _this2.findUsModal.remove();\n            });\n            $ionicModal.fromTemplateUrl('templates/modal.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function (modal) {\n                return _this2.findUsModal = modal;\n            });\n        }\n\n        _createClass(WhereUFindUsAdmin, [{\n            key: 'refresh',\n            value: function refresh() {\n                var _this3 = this;\n\n                this.AppUtil.blockingCall(this.AppService.getFindUs(), function (items) {\n                    _this3.$log.log('loaded ' + items.length + ' items');\n                    _this3.findUsGroup = items;\n                });\n            }\n        }, {\n            key: 'addFindUs',\n            value: function addFindUs(form) {\n                var _this4 = this;\n\n                this.submitted = true;\n                if (form.$valid) {\n                    this.AppUtil.blockingCall(this.AppService.addFindUs(this.findUs), function () {\n                        _this4.modalText = \"New \";\n                        _this4.findUs = null;\n                        _this4.AppUtil.toastSimple(\"Saved Successfully\");\n                        _this4.refresh();\n                    });\n                    setTimeout(this.resetForm(form), 1000);\n                }\n            }\n        }, {\n            key: 'editFindUs',\n            value: function editFindUs(question) {\n                this.modalText = \"Update \";\n                this.findUs = question.toJSON();\n                this.findUsModal.show();\n            }\n        }, {\n            key: 'deleteFindUs',\n            value: function deleteFindUs(id) {\n                this.$log.log('Delete find us name ' + id);\n                var _this = this;\n                this.$ionicPopup.confirm({\n                    title: 'Delete',\n                    template: 'Are you sure you want to delete this item?'\n                }).then(function (res) {\n                    if (res) _this.deleteQ(id);\n                });\n            }\n        }, {\n            key: 'deleteQ',\n            value: function deleteQ(id) {\n                var _this5 = this;\n\n                this.AppUtil.blockingCall(this.AppService.delFindUs(id), function () {\n                    _this5.AppUtil.toastSimple(\"Deleted Successfully\");\n                    _this5.refresh();\n                });\n            }\n        }, {\n            key: 'close',\n            value: function close() {\n                this.modalText = \"New \";\n                this.findUs = null;\n                this.findUsModal.hide();\n            }\n        }, {\n            key: 'resetForm',\n            value: function resetForm(form) {\n                this.findUs = null;\n                this.findUsModal.hide();\n                form.$setPristine();\n                form.$setUntouched();\n            }\n        }]);\n\n        return WhereUFindUsAdmin;\n    }();\n\n    app.WhereUFindUsAdmin = WhereUFindUsAdmin;\n    WhereUFindUsAdmin.$inject = ['$ionicPopup', '$log', '$scope', '$state', '$ionicModal', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('WhereUFindUsAdmin', WhereUFindUsAdmin);\n})(app || (app = {}));","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    var SearchProfileView = function () {\n        function SearchProfileView($log, $scope, $stateParams, $ionicHistory, $ionicActionSheet, AppUtil, AppService, $translate) {\n            var _this = this;\n\n            _classCallCheck(this, SearchProfileView);\n\n            this.$log = $log;\n            this.$scope = $scope;\n            this.$stateParams = $stateParams;\n            this.$ionicHistory = $ionicHistory;\n            this.$ionicActionSheet = $ionicActionSheet;\n            this.AppUtil = AppUtil;\n            this.AppService = AppService;\n            this.$translate = $translate;\n            $translate(['REQUEST_FAILED', 'REPORT', 'INAPPROPRIATE_CONTENT', 'CANCEL']).then(function (translationsResult) {\n                _this.translations = translationsResult;\n            });\n            $scope.$on('$ionicView.beforeEnter', function (event, data) {\n                return _this.ionViewWillEnter();\n            });\n        }\n\n        _createClass(SearchProfileView, [{\n            key: 'ionViewWillEnter',\n            value: function ionViewWillEnter() {\n                var _this2 = this;\n\n                this.profile = this.$stateParams['profile'];\n                this.$scope['profile'] = this.profile;\n                this.AppService.getProfileOfSelectedUser(this.profile.objectId).then(function (profilePointer) {\n                    _this2.profilePointer = profilePointer;\n                });\n            }\n        }, {\n            key: 'like',\n            value: function like() {\n                var match = this.AppService.getProfileSearchResults().pop();\n                this.AppService.processMatch(match, true);\n                this.$ionicHistory.goBack();\n            }\n        }, {\n            key: 'reject',\n            value: function reject() {\n                var match = this.AppService.getProfileSearchResults().pop();\n                this.AppService.processMatch(match, false);\n                this.$ionicHistory.goBack();\n            }\n        }, {\n            key: 'profileOptions',\n            value: function profileOptions() {\n                var _this3 = this;\n\n                this.$ionicActionSheet.show({\n                    destructiveText: this.translations.REPORT,\n                    titleText: this.translations.INAPPROPRIATE_CONTENT,\n                    cancelText: this.translations.CANCEL,\n                    cancel: function cancel() {},\n                    destructiveButtonClicked: function destructiveButtonClicked(index) {\n                        _this3.report();\n                        return true;\n                    }\n                });\n            }\n        }, {\n            key: 'report',\n            value: function report() {\n                var _this4 = this;\n\n                var profile = this.AppService.getProfileSearchResults().pop();\n                this.AppUtil.blockingCall(this.AppService.reportProfile('inappropriate profile content', this.profilePointer, null), function () {\n                    _this4.AppService.processMatch(profile, false);\n                    _this4.$ionicHistory.goBack();\n                });\n            }\n        }]);\n\n        return SearchProfileView;\n    }();\n\n    SearchProfileView.$inject = ['$log', '$scope', '$stateParams', '$ionicHistory', '$ionicActionSheet', 'AppUtil', 'AppService', '$translate'];\n    app.SearchProfileView = SearchProfileView;\n    angular.module('ionicApp').controller('SearchProfileView', SearchProfileView);\n})(app || (app = {}));","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    var ProfilePhoto = function ProfilePhoto(file) {\n        _classCallCheck(this, ProfilePhoto);\n\n        this.file = file;\n        this.selected = false;\n    };\n    /**\n     * Controller for editing the users profile\n     */\n\n\n    var ProfileEdit = function () {\n        function ProfileEdit($log, $rootScope, $scope, $q, $state, $ionicActionSheet, $cordovaCamera, AppService, AppUtil, $translate, $ionicHistory, $ionicPopup) {\n            var _this = this;\n\n            _classCallCheck(this, ProfileEdit);\n\n            // If you increase MAX_PHOTOS you will need to update LocalDB to have more photoN columns in the local SQL db\n            this.MAX_PHOTOS = 3;\n            this.NO_IMAGE = 'img/add.png';\n            this.photos = [];\n            this.photosInReview = [];\n            this.$log = $log;\n            this.$rootScope = $rootScope;\n            this.$scope = $scope;\n            this.$q = $q;\n            this.$state = $state;\n            this.$ionicActionSheet = $ionicActionSheet;\n            this.$cordovaCamera = $cordovaCamera;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.$translate = $translate;\n            this.$ionicHistory = $ionicHistory;\n            this.$ionicPopup = $ionicPopup;\n            this.$scope.options = {\n                onlyExternal: true,\n                speed: 700\n            };\n            this.$scope.$on('$ionicView.beforeEnter', function () {\n                return _this.refresh();\n            });\n            this.$scope.$on('$ionicView.enter', function () {\n                return _this.expandText();\n            });\n            this.$scope.$on(\"$ionicSlides.sliderInitialized\", function (event, data) {\n                // data.slider is the instance of Swiper\n                $scope.slider = data.slider;\n            });\n            this.$scope.$on(\"$ionicSlides.slideChangeStart\", function (event, data) {\n                console.log('Slide change is beginning');\n            });\n        }\n\n        _createClass(ProfileEdit, [{\n            key: 'refresh',\n            value: function refresh() {\n                this.profile = this.AppService.getProfile();\n                this.about = this.profile.about;\n                this.personCategory = this.profile.personCategory;\n                this.personType = this.profile.personType;\n                this.personSperm = this.profile.personSperm;\n                this.personEgg = this.profile.personEgg;\n                this.personWomb = this.profile.personWomb;\n                this.personEmbryo = this.profile.personEmbryo;\n                this.personHelpLevel = this.profile.personHelpLevel;\n                this.photos = _.map(this.profile.photos, function (photo) {\n                    return new ProfilePhoto(photo);\n                });\n                this.photosInReview = this.profile.photosInReview ? _.map(this.profile.photosInReview, function (photo) {\n                    return new ProfilePhoto(photo);\n                }) : [];\n                this.onRedirectToEditProfile(false);\n            }\n        }, {\n            key: 'selectedCount',\n            value: function selectedCount() {\n                return _.filter(this.photos, function (photo) {\n                    return photo.selected;\n                }).length;\n            }\n        }, {\n            key: 'canAddPhoto',\n            value: function canAddPhoto() {\n                return this.photos.length + this.photosInReview.length < this.MAX_PHOTOS;\n            }\n            /**\n             * @returns {boolean} if any of the photos or photos in review are selected\n             */\n\n        }, {\n            key: 'canDeletePhotos',\n            value: function canDeletePhotos() {\n                return _.filter(this.photos, function (photo) {\n                    return photo.selected;\n                }).length + _.filter(this.photosInReview, function (photo) {\n                    return photo.selected;\n                }).length > 0;\n            }\n            /**\n             * Deletes the selected photos from the profile\n             */\n\n        }, {\n            key: 'deletePhotos',\n            value: function deletePhotos() {\n                var _this2 = this;\n\n                var profileUpdate = {};\n                // Extract the unselected photos and update the profile with those\n                var remainingPhotos = _.filter(this.photos, function (photo) {\n                    return !photo.selected;\n                });\n                profileUpdate.photos = _.map(remainingPhotos, function (photo) {\n                    return photo.file;\n                });\n                var remainingInReviewPhotos = _.filter(this.photosInReview, function (photo) {\n                    return !photo.selected;\n                });\n                profileUpdate.photosInReview = _.map(remainingInReviewPhotos, function (photo) {\n                    return photo.file;\n                });\n                this.AppUtil.blockingCall(this.AppService.saveProfile(profileUpdate), function () {\n                    return _this2.refresh();\n                });\n            }\n            /**\n             * Swaps the position of the selected photos. This should only be called when there is two selected.\n             */\n\n        }, {\n            key: 'swapPhotos',\n            value: function swapPhotos() {\n                var _this3 = this;\n\n                // Find the indexes of the two selected photos\n                var first = _.findIndex(this.photos, function (photo) {\n                    return photo.selected;\n                });\n                var last = _.findLastIndex(this.photos, function (photo) {\n                    return photo.selected;\n                });\n                var profileUpdate = {};\n                this.swapArrayElements(this.photos, first, last);\n                profileUpdate.photos = _.map(this.photos, function (photo) {\n                    return photo.file;\n                });\n                this.AppUtil.blockingCall(this.AppService.saveProfile(profileUpdate), function () {\n                    return _this3.refresh();\n                });\n            }\n            /**\n             * Toggle the selected state of a photo\n             * @param index the photos array index\n             */\n\n        }, {\n            key: 'toggleSelected',\n            value: function toggleSelected(photo) {\n                photo.selected = !photo.selected;\n            }\n            /**\n             * Add a profile photo\n             */\n\n        }, {\n            key: 'addPhoto',\n            value: function addPhoto() {\n                var _this4 = this;\n\n                var buttons = [{ text: this.$translate.instant('TAKE_PHOTO') }, { text: this.$translate.instant('GALLERY') }];\n                if (this.$rootScope.facebookConnected) buttons.push({ text: 'Facebook' });\n                this.$ionicActionSheet.show({\n                    buttons: buttons,\n                    titleText: this.$translate.instant('SELECT_PHOTO_SOURCE'),\n                    cancelText: this.$translate.instant('CANCEL'),\n                    buttonClicked: function buttonClicked(index) {\n                        if (index === 2) {\n                            _this4.$state.go('^.fb-albums');\n                        } else {\n                            if (!ionic.Platform.isWebView()) {\n                                // TODO implement file upload for normal browsers\n                                return true;\n                            }\n                            var sourceType = index === 0 ? Camera.PictureSourceType.CAMERA : Camera.PictureSourceType.PHOTOLIBRARY;\n                            var options = {\n                                quality: 70,\n                                destinationType: Camera.DestinationType.DATA_URL,\n                                sourceType: sourceType,\n                                allowEdit: false,\n                                // support it, so just use JavaScript cropping for now\n                                encodingType: Camera.EncodingType.PNG,\n                                targetWidth: 800,\n                                targetHeight: 800,\n                                // popoverOptions: new CameraPopoverOptions(300, 300, 200, 200, Camera.PopoverArrowDirection.ARROW_ANY),\n                                saveToPhotoAlbum: false\n                            };\n                            _this4.$cordovaCamera.getPicture(options).then(function (imageData) {\n                                // TODO don't use root scope - pass as param\n                                var dataUrl = 'data:image/jpeg;base64,' + imageData;\n                                _this4.$rootScope.cropPhoto = dataUrl;\n                                _this4.$state.go('^.crop'); // , {imageData: 'data:image/jpeg;base64,' + imageData}\n                            }, function (error) {\n                                if (error === 'has no access to assets') {\n                                    _this4.AppUtil.toastSimple('Access to photo gallery denied');\n                                    _this4.$log.error('$cordovaCamera.getPicture error ' + JSON.stringify(error));\n                                } else {\n                                    _this4.AppUtil.toastSimpleTranslate('PHOTO_ERROR');\n                                    _this4.$log.error('$cordovaCamera.getPicture error ' + JSON.stringify(error));\n                                }\n                            });\n                        }\n                        return true;\n                    }\n                });\n            }\n        }, {\n            key: 'expandText',\n            value: function expandText() {\n                var element = document.querySelector('#aboutYou');\n                element.style.height = element.scrollHeight + 'px';\n            }\n            /**\n             * Swap the elements in an array at indexes x and y.\n             *\n             * @param (array) The array.\n             * @param (a) The index of the first element to swap.\n             * @param (b) The index of the second element to swap.\n             */\n\n        }, {\n            key: 'swapArrayElements',\n            value: function swapArrayElements(array, a, b) {\n                var temp = array[a];\n                array[a] = array[b];\n                array[b] = temp;\n            }\n        }, {\n            key: 'saveProfile',\n            value: function saveProfile() {\n                var _this5 = this;\n\n                var profileUpdate = {};\n                profileUpdate.about = this.about;\n                profileUpdate.personCategory = this.personCategory ? this.personCategory : '0';\n                profileUpdate.hasSelfId = true;\n                if (this.personCategory === '3') {\n                    profileUpdate.personType = '0';\n                    profileUpdate.personSperm = false;\n                    profileUpdate.personEgg = false;\n                    profileUpdate.personWomb = false;\n                    profileUpdate.personEmbryo = false;\n                    profileUpdate.personHelpLevel = '0';\n                } else {\n                    profileUpdate.personType = this.personType ? this.personType : '0';\n                    profileUpdate.personSperm = this.personSperm ? this.personSperm : false;\n                    profileUpdate.personEgg = this.personEgg ? this.personEgg : false;\n                    profileUpdate.personWomb = this.personWomb ? this.personWomb : false;\n                    profileUpdate.personEmbryo = this.personEmbryo ? this.personEmbryo : false;\n                    profileUpdate.personHelpLevel = this.personHelpLevel ? this.personHelpLevel : '0';\n                }\n                var thingsIHave = \"\";\n                if (profileUpdate.personSperm) thingsIHave += \"S\";\n                if (profileUpdate.personEgg) thingsIHave += \"E\";\n                if (profileUpdate.personWomb) thingsIHave += \"W\";\n                if (profileUpdate.personEmbryo) thingsIHave += \"Y\";\n                if (this.personCategory !== '3' && !profileUpdate.personSperm && !profileUpdate.personEgg && !profileUpdate.personWomb && !profileUpdate.personEmbryo) thingsIHave += \"X\";\n                profileUpdate.thingsIHave = thingsIHave;\n                // if (this.about)\n                this.AppUtil.blockingCall(this.AppService.saveProfile(profileUpdate), function () {\n                    _this5.refresh();\n                    _this5.$ionicHistory.nextViewOptions({\n                        historyRoot: false,\n                        disableBack: true\n                    });\n                    if (_this5.profile.about) {\n                        _this5.$state.go('menu.profile');\n                    }\n                });\n                // else\n                // \tthis.onRedirectToEditProfile(true);\n            }\n            /**\n             * Custom go back\n             */\n\n        }, {\n            key: 'myGoBack',\n            value: function myGoBack() {\n                // if (this.profile.about)\n                this.$ionicHistory.goBack();\n                // else\n                // \tthis.onRedirectToEditProfile(false);\n            }\n        }, {\n            key: 'onRedirectToEditProfile',\n            value: function onRedirectToEditProfile(forceShow) {\n                if (!this.profile.about || forceShow) {\n                    var alertPopup = this.$ionicPopup.alert({\n                        title: 'We need more information',\n                        cssClass: 'center',\n                        template: 'Your \"About Me\" section is empty.</br> Everyone is looking for someone with a compatible vision. A deep description adds value to the community, tell us about you.'\n                    });\n                }\n            }\n        }, {\n            key: 'onClickBadgeInfo',\n            value: function onClickBadgeInfo() {\n                var alertPopup = this.$ionicPopup.alert({\n                    title: 'Self Identification Badges',\n                    templateUrl: 'badgeInfo.html',\n                    buttons: [{\n                        text: 'Ok',\n                        type: 'button-assertive'\n                    }]\n                });\n            }\n        }]);\n\n        return ProfileEdit;\n    }();\n\n    app.ProfileEdit = ProfileEdit;\n    ProfileEdit.$inject = ['$log', '$rootScope', '$scope', '$q', '$state', '$ionicActionSheet', '$cordovaCamera', 'AppService', 'AppUtil', '$translate', '$ionicHistory', '$ionicPopup'];\n    angular.module('controllers').controller('ProfileEdit', ProfileEdit);\n})(app || (app = {}));","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Controller for viewing the current users profile\n     */\n    var ProfileViewCurrentUser = function () {\n        function ProfileViewCurrentUser($rootScope, $scope, $state, AppService) {\n            var _this = this;\n\n            _classCallCheck(this, ProfileViewCurrentUser);\n\n            this.$rootScope = $rootScope;\n            this.$scope = $scope;\n            this.$state = $state;\n            this.AppService = AppService;\n            $scope.$on('$ionicView.beforeEnter', function () {\n                return _this.ionViewWillEnter();\n            });\n        }\n\n        _createClass(ProfileViewCurrentUser, [{\n            key: 'ionViewWillEnter',\n            value: function ionViewWillEnter() {\n                this.profile = this.AppService.getProfile();\n                this.$scope['profile'] = this.profile;\n            }\n        }]);\n\n        return ProfileViewCurrentUser;\n    }();\n\n    app.ProfileViewCurrentUser = ProfileViewCurrentUser;\n    ProfileViewCurrentUser.$inject = ['$rootScope', '$scope', '$state', 'AppService'];\n    angular.module('ionicApp').controller('ProfileViewCurrentUser', ProfileViewCurrentUser);\n})(app || (app = {}));","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Methods for authentication with social sites\n     */\n    var SocialAuth = function () {\n        function SocialAuth($q, $log, $http, $translate) {\n            _classCallCheck(this, SocialAuth);\n\n            this.$q = $q;\n            this.$log = $log;\n            this.$http = $http;\n            this.$translate = $translate;\n            // $translate(['REQUEST_FAILED']).then(translationsResult => this.translations = translationsResult)\n        }\n        /*\n         * Modified from https://github.com/driftyco/ng-cordova/blob/master/src/plugins/oauth.js\n         *\n         * Sign into the LinkedIn service\n         * https://developer.linkedin.com/docs/oauth2\n         *\n         * @param    string clientId\n         * @param    string clientSecret\n         * @param    array appScope - the permission scope to authorise. For example r_basicprofile, r_emailaddress\n         * @param    string state - A random string to test again CSRS attacks\n         * @return   promise - Resolves to the authentication data\n         */\n\n\n        _createClass(SocialAuth, [{\n            key: 'linkedIn',\n            value: function linkedIn(clientId, clientSecret, appScope, state) {\n                var _this = this;\n\n                var deferred = this.$q.defer();\n                if (window.cordova) {\n                    var cordovaMetadata = cordova.require('cordova/plugin_list').metadata;\n                    if (cordovaMetadata.hasOwnProperty('cordova-plugin-inappbrowser') === true || cordovaMetadata.hasOwnProperty('org.apache.cordova.inappbrowser') === true) {\n                        var browserRef = window.open('https://www.linkedin.com/uas/oauth2/authorization?client_id=' + clientId + '&redirect_uri=http://localhost/callback&scope=' + appScope.join(' ') + '&response_type=code&state=' + state, '_blank', 'location=no,clearsessioncache=yes,clearcache=yes');\n                        browserRef.addEventListener('loadstart', function (event) {\n                            if (event.url.indexOf('http://localhost/callback') === 0) {\n                                var requestToken = event.url.split('code=')[1];\n                                _this.$http.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n                                _this.$http({ method: 'post', url: 'https://www.linkedin.com/uas/oauth2/accessToken',\n                                    data: 'client_id=' + clientId + '&client_secret=' + clientSecret + '&redirect_uri=http://localhost/callback' + '&grant_type=authorization_code' + '&code=' + requestToken }).success(function (data) {\n                                    deferred.resolve(data);\n                                }).error(function (data, status) {\n                                    deferred.reject('Problem authenticating LinkedIn ' + JSON.stringify(data) + ' ' + JSON.stringify(status));\n                                }).finally(function () {\n                                    setTimeout(function () {\n                                        browserRef.close();\n                                    }, 10);\n                                });\n                            }\n                        });\n                        browserRef.addEventListener('exit', function (event) {\n                            deferred.reject('The LinkedIn sign in flow was canceled');\n                        });\n                    } else {\n                        deferred.reject('LinkedIn auth: Could not find InAppBrowser plugin');\n                    }\n                } else {\n                    deferred.reject('Cannot authenticate LinkedIn via a web browser');\n                }\n                return deferred.promise;\n            }\n        }], [{\n            key: 'socialAuthFactory',\n            value: function socialAuthFactory($q, $log, $http, $tanslate) {\n                return new SocialAuth($q, $log, $http, $tanslate);\n            }\n        }]);\n\n        return SocialAuth;\n    }();\n\n    app.SocialAuth = SocialAuth;\n    SocialAuth.socialAuthFactory.$inject = ['$q', '$log', '$http', '$translate'];\n    angular.module('SocialAuth', ['pascalprecht.translate']).factory('SocialAuth', SocialAuth.socialAuthFactory);\n})(app || (app = {}));","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Utilities which simplify common actions and abstracts the implementation so it easier to make application wide\n     * changes to blocking calls, toasts etc\n     */\n    var AppUtil = function () {\n        function AppUtil($q, $ionicLoading, ionicToast, $translate, $log) {\n            var _this = this;\n\n            _classCallCheck(this, AppUtil);\n\n            this.$q = $q;\n            this.$ionicLoading = $ionicLoading;\n            this.ionicToast = ionicToast;\n            this.$log = $log;\n            this.$translate = $translate;\n            $translate(['REQUEST_FAILED']).then(function (translationsResult) {\n                return _this.translations = translationsResult;\n            });\n        }\n        /**\n         * Shows a toast message\n         * @param message\n         */\n\n\n        _createClass(AppUtil, [{\n            key: 'toastSimple',\n            value: function toastSimple(message) {\n                this.ionicToast.show(message, 'bottom', false, 3000);\n            }\n            /**\n             * Shows a toast message\n             * @param translateKey the key used to lookup the translated message\n             */\n\n        }, {\n            key: 'toastSimpleTranslate',\n            value: function toastSimpleTranslate(translateKey) {\n                var _this2 = this;\n\n                this.$translate([translateKey]).then(function (result) {\n                    var translation = result[translateKey];\n                    if (translation === translateKey) _this2.$log.warn('Invalid translation key ' + translateKey);\n                    _this2.toastSimple(translation);\n                }, function (error) {\n                    return _this2.$log.warn('toast translation error ' + JSON.stringify(error));\n                });\n            }\n            /**\n             * A utility to simplify the common case of making a server call which blocks the user interface, and provides\n             * translation of errors.\n             *\n             * This is an example of how you might use it:\n             * function setLocation = () => AppUtil.blockingCall(\n             *        AppService.saveLocation(newLocation),\n             *        (result) => {marker.setLocation(result); AppUtil.toastSimple('LOCATION_UPDATED')}\n             *        )\n             *\n             * @param promise the promise to resolve\n             * @param successFunction the function to call on resolution of the promise\n             * @param errorTranslateKey the translation key to display an error message for on error\n             * @param errorMessage if no translation key is provided, then displays this error message on an error\n             * @returns {ng.IPromise<any>} the promise passed in as the first argument\n             */\n\n        }, {\n            key: 'blockingCall',\n            value: function blockingCall(promise, successFunction, errorTranslateKey, errorMessage) {\n                var _this3 = this;\n\n                var ionicLoading = this.$ionicLoading;\n                // Delay showing the loading spinner for 0.4s\n                // See http://yuiblog.com/blog/2010/11/11/improving-perceived-site-performance-with-spinners/\n                ionicLoading.show({ templateUrl: 'loading.html', delay: 400 });\n                promise.then(function (result) {\n                    ionicLoading.hide();\n                    if (successFunction) successFunction(result);\n                }, function (error) {\n                    ionicLoading.hide();\n                    var customError = _this3.resolveErrorMessage(error);\n                    if (customError) {\n                        _this3.toastSimple(customError);\n                    } else if (errorTranslateKey) {\n                        _this3.toastSimpleTranslate(errorMessage);\n                    } else if (errorMessage) {\n                        _this3.toastSimple(errorMessage);\n                    } else {\n                        _this3.toastSimple(_this3.translations['REQUEST_FAILED']);\n                    }\n                    _this3.$log.error('Error in blocking call ' + JSON.stringify(error));\n                });\n                return promise;\n            }\n            /**\n             * Converts an error into a human friendly message for particular error messages\n             * @param error\n             * @returns {string} if there is a custom error message, else null\n             */\n\n        }, {\n            key: 'resolveErrorMessage',\n            value: function resolveErrorMessage(error) {\n                this.$log.error(JSON.stringify(error));\n                if (error.code) {\n                    // https://parse.com/docs/js/api/symbols/Parse.Error.html\n                    switch (error.code) {\n                        case 100:\n                            return 'Request failed, try again';\n                        case 155:\n                            return 'Server busy, try again later';\n                        case 209:\n                            // TODO force logout/login\n                            return 'Invalid session. Log in again';\n                        default:\n                            return null;\n                    }\n                }\n                return null;\n            }\n        }], [{\n            key: 'appUtilFactory',\n            value: function appUtilFactory($q, $ionicLoading, ionicToast, $translate, $log) {\n                return new AppUtil($q, $ionicLoading, ionicToast, $translate, $log);\n            }\n        }]);\n\n        return AppUtil;\n    }();\n\n    app.AppUtil = AppUtil;\n    AppUtil.appUtilFactory.$inject = ['$q', '$ionicLoading', 'ionicToast', '$translate', '$log'];\n    angular.module('AppUtil', ['ionic', 'pascalprecht.translate', 'ionic-toast']).factory('AppUtil', AppUtil.appUtilFactory);\n})(app || (app = {}));","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar GeoUtils = function () {\n    function GeoUtils() {\n        _classCallCheck(this, GeoUtils);\n    }\n\n    _createClass(GeoUtils, null, [{\n        key: 'getDistanceFromLatLonInKm',\n\n        // Credit to http://stackoverflow.com/questions/27928/how-do-i-calculate-distance-between-two-latitude-longitude-points\n        value: function getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {\n            if (!lat1 || !lon1 || !lat2 || !lon2) {\n                console.log('Not all params supplied for getDistanceFromLatLonInKm');\n                return null;\n            }\n            var R = 6371; // Radius of the earth in km\n            var dLat = this.degreesToRadians(lat2 - lat1);\n            var dLon = this.degreesToRadians(lon2 - lon1);\n            var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(this.degreesToRadians(lat1)) * Math.cos(this.degreesToRadians(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n            var d = R * c; // Distance in km\n            return d;\n        }\n    }, {\n        key: 'degreesToRadians',\n        value: function degreesToRadians(degrees) {\n            return degrees * (Math.PI / 180);\n        }\n    }]);\n\n    return GeoUtils;\n}();","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    var ImagesUtil = function () {\n        function ImagesUtil($q) {\n            _classCallCheck(this, ImagesUtil);\n\n            this.$q = $q;\n        }\n\n        _createClass(ImagesUtil, [{\n            key: 'convertImgUrlToBase64',\n            value: function convertImgUrlToBase64(url, outputFormat) {\n                var q = this.$q.defer();\n                var canvas = document.createElement('CANVAS'),\n                    ctx = canvas.getContext('2d'),\n                    img = new Image();\n                img.crossOrigin = 'Anonymous';\n                img.onload = function () {\n                    var dataURL = void 0;\n                    canvas.height = img.height;\n                    canvas.width = img.width;\n                    ctx.drawImage(img, 0, 0);\n                    dataURL = canvas.toDataURL(outputFormat);\n                    canvas = null;\n                    q.resolve(dataURL);\n                };\n                img.onerror = function () {\n                    return q.reject('Failed to load image ' + url);\n                };\n                img.src = url;\n                return q.promise;\n            }\n        }, {\n            key: 'convertImgIdToBase64',\n            value: function convertImgIdToBase64(imgId) {\n                if (!imgId) throw 'convertImgIdToBase64 requires imgId';\n                var img = document.getElementById(imgId);\n                if (!img) throw 'Could not find element with id ' + imgId;\n                return this.convertImgToBase64(img);\n            }\n        }, {\n            key: 'convertImgToBase64',\n            value: function convertImgToBase64(imgElement) {\n                // imgElem must be on the same server or,\n                // the img element must have the crossorigin=\"anonymous\" attribute and the server set the otherwise CORS header\n                // otherwise a cross-origin error will be thrown \"SECURITY_ERR: DOM Exception 18\"\n                var canvas = document.createElement('canvas');\n                canvas.width = imgElement.clientWidth;\n                canvas.height = imgElement.clientHeight;\n                var ctx = canvas.getContext('2d');\n                ctx.drawImage(imgElement, 0, 0);\n                var dataURL = canvas.toDataURL('image/png');\n                return dataURL.replace(/^data:image\\/(png|jpg);base64,/, '');\n            }\n        }], [{\n            key: 'imagesUtilFactory',\n            value: function imagesUtilFactory($q) {\n                return new ImagesUtil($q);\n            }\n        }]);\n\n        return ImagesUtil;\n    }();\n\n    app.ImagesUtil = ImagesUtil;\n    ImagesUtil.imagesUtilFactory.$inject = ['$q'];\n    angular.module('ImagesUtil', []).factory('ImagesUtil', ImagesUtil.imagesUtilFactory);\n})(app || (app = {}));","module app {\n\n\t/**\n\t * Controller viewing the profiles who have liked the user\n\t */\n\texport class LikedMe {\n\n\t\tprivate $log: ng.ILogService\n\t\tprivate $rootScope: app.IAppRootScope\n\t\tprivate $scope: ng.IScope\n\t\tprivate $state\n\t\tprivate $ionicModal\n\t\tprivate $ionicPopup\n\t\tprivate AppService: IAppService\n\t\tprivate AppUtil: AppUtil\n\n\t\tpublic profiles: IProfile[]\n\n\t\tprivate profileModal\n\t\tpublic profile // The profile being viewed\n\t\tpublic profileIndex // The index in profiles of the profile viewed\n\n\t\tconstructor($log: ng.ILogService, $rootScope: app.IAppRootScope, $scope: ng.IScope,\n\t\t\t$state, $ionicModal, $ionicPopup, AppService: IAppService, AppUtil) {\n\t\t\t$log.info('LikedMe constructor')\n\t\t\tthis.$log = $log\n\t\t\tthis.$rootScope = $rootScope\n\t\t\tthis.$scope = $scope\n\t\t\tthis.$state = $state\n\t\t\tthis.$ionicModal = $ionicModal\n\t\t\tthis.$ionicPopup = $ionicPopup\n\t\t\tthis.AppService = AppService\n\t\t\tthis.AppUtil = AppUtil\n\n\t\t\t$ionicModal.fromTemplateUrl('profileModal.html', {\n\t\t\t\tscope: $scope,\n\t\t\t\tanimation: 'slide-in-up'\n\t\t\t}).then(modal => this.profileModal = modal)\n\t\t\t// Cleanup the modal when we're done with it\n\t\t\t$scope.$on('$destroy', () => this.profileModal.remove())\n\n\t\t\tthis.refresh()\n\t\t}\n\n\t\tpublic refresh() {\n\n\t\t\tthis.AppService.getProfilesWhoLikeMe()\n\t\t\t\t.then(profiles => {\n\t\t\t\t\tthis.profiles = profiles\n\t\t\t\t\tthis.$log.log('getProfilesWhoLikeMe returned ' + profiles.length + ' profiles')\n\n\t\t\t\t}, error => {\n\t\t\t\t\tthis.$log.error('Error loading profiles who liked me ' + JSON.stringify(error))\n\t\t\t\t\tthis.AppUtil.toastSimple('Unable to load profiles')\n\t\t\t\t})\n\t\t\t\t.finally(() => this.$scope.$broadcast('scroll.refreshComplete'))\n\t\t}\n\n\t\tpublic view(index: number) {\n\t\t\tthis.$log.debug('viewing profile who liked me at index ' + index)\n\t\t\tthis.profile = this.profiles[index]\n\t\t\tthis.profileIndex = index\n\t\t\tthis.profileModal.show()\n\t\t}\n\n\t\tpublic like() {\n\t\t\tthis.$log.debug('liking profile at index ' + this.profileIndex)\n\t\t\tthis.process(true)\n\t\t}\n\n\t\tpublic pass() {\n\t\t\tthis.$log.debug('passing profile at index ' + this.profileIndex)\n\t\t\tthis.process(false)\n\t\t}\n\n\t\tprivate process(liked: boolean) {\n\t\t\tthis.AppUtil.blockingCall(\n\t\t\t\tthis.AppService.processMatch(this.profile, liked),\n\t\t\t\t() => {\n\t\t\t\t\tthis.profiles.splice(this.profileIndex, 1)\n\t\t\t\t\tthis.close()\n\t\t\t\t})\n\t\t}\n\n\t\tpublic close() {\n\t\t\tthis.profileModal.hide()\n\t\t\tthis.profileIndex = null\n\t\t\tthis.profile = null\n\t\t}\n\n\t\tpublic onClickBadgeInfo() {\n\t\t\tvar alertPopup = this.$ionicPopup.alert({\n\t\t\t\ttitle: 'Self Identification Badges',\n\t\t\t\ttemplateUrl: 'badgeInfo.html',\n\t\t\t\tbuttons: [{\n\t\t\t\t\ttext: 'Ok',\n\t\t\t\t\ttype: 'button-assertive',\n\n\t\t\t\t}]\n\t\t\t})\n\t\t}\n\n\t}\n\n\tLikedMe.$inject = ['$log', '$rootScope', '$scope', '$state', '$ionicModal','$ionicPopup', 'AppService', 'AppUtil']\n\tangular.module('controllers').controller('LikedMe', LikedMe)\n}\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Controller viewing the profiles who have liked the user\n     */\n    var LikedMe = function () {\n        LikedMe.$inject = [\"$log\", \"$rootScope\", \"$scope\", \"$state\", \"$ionicModal\", \"$ionicPopup\", \"AppService\", \"AppUtil\"];\n        function LikedMe($log, $rootScope, $scope, $state, $ionicModal, $ionicPopup, AppService, AppUtil) {\n            var _this = this;\n\n            _classCallCheck(this, LikedMe);\n\n            $log.info('LikedMe constructor');\n            this.$log = $log;\n            this.$rootScope = $rootScope;\n            this.$scope = $scope;\n            this.$state = $state;\n            this.$ionicModal = $ionicModal;\n            this.$ionicPopup = $ionicPopup;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            $ionicModal.fromTemplateUrl('profileModal.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function (modal) {\n                return _this.profileModal = modal;\n            });\n            // Cleanup the modal when we're done with it\n            $scope.$on('$destroy', function () {\n                return _this.profileModal.remove();\n            });\n            this.refresh();\n        }\n\n        _createClass(LikedMe, [{\n            key: 'refresh',\n            value: function refresh() {\n                var _this2 = this;\n\n                this.AppService.getProfilesWhoLikeMe().then(function (profiles) {\n                    _this2.profiles = profiles;\n                    _this2.$log.log('getProfilesWhoLikeMe returned ' + profiles.length + ' profiles');\n                }, function (error) {\n                    _this2.$log.error('Error loading profiles who liked me ' + JSON.stringify(error));\n                    _this2.AppUtil.toastSimple('Unable to load profiles');\n                }).finally(function () {\n                    return _this2.$scope.$broadcast('scroll.refreshComplete');\n                });\n            }\n        }, {\n            key: 'view',\n            value: function view(index) {\n                this.$log.debug('viewing profile who liked me at index ' + index);\n                this.profile = this.profiles[index];\n                this.profileIndex = index;\n                this.profileModal.show();\n            }\n        }, {\n            key: 'like',\n            value: function like() {\n                this.$log.debug('liking profile at index ' + this.profileIndex);\n                this.process(true);\n            }\n        }, {\n            key: 'pass',\n            value: function pass() {\n                this.$log.debug('passing profile at index ' + this.profileIndex);\n                this.process(false);\n            }\n        }, {\n            key: 'process',\n            value: function process(liked) {\n                var _this3 = this;\n\n                this.AppUtil.blockingCall(this.AppService.processMatch(this.profile, liked), function () {\n                    _this3.profiles.splice(_this3.profileIndex, 1);\n                    _this3.close();\n                });\n            }\n        }, {\n            key: 'close',\n            value: function close() {\n                this.profileModal.hide();\n                this.profileIndex = null;\n                this.profile = null;\n            }\n        }, {\n            key: 'onClickBadgeInfo',\n            value: function onClickBadgeInfo() {\n                var alertPopup = this.$ionicPopup.alert({\n                    title: 'Self Identification Badges',\n                    templateUrl: 'badgeInfo.html',\n                    buttons: [{\n                        text: 'Ok',\n                        type: 'button-assertive'\n                    }]\n                });\n            }\n        }]);\n\n        return LikedMe;\n    }();\n\n    app.LikedMe = LikedMe;\n    LikedMe.$inject = ['$log', '$rootScope', '$scope', '$state', '$ionicModal', '$ionicPopup', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('LikedMe', LikedMe);\n})(app || (app = {}));\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Controller viewing the profiles who have relationships with the user\n     */\n    var RelationshipCtrl = function () {\n        RelationshipCtrl.$inject = [\"$log\", \"$rootScope\", \"$scope\", \"$state\", \"$ionicModal\", \"AppService\", \"AppUtil\"];\n        function RelationshipCtrl($log, $rootScope, $scope, $state, $ionicModal, AppService, AppUtil) {\n            var _this = this;\n\n            _classCallCheck(this, RelationshipCtrl);\n\n            $log.info('RelationshipCtrl constructor');\n            this.$log = $log;\n            this.$rootScope = $rootScope;\n            this.$scope = $scope;\n            this.$state = $state;\n            this.$ionicModal = $ionicModal;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            $ionicModal.fromTemplateUrl('profileModal.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function (modal) {\n                return _this.profileModal = modal;\n            });\n            // Cleanup the modal when we're done with it\n            $scope.$on('$destroy', function () {\n                return _this.profileModal.remove();\n            });\n            this.refresh();\n        }\n\n        _createClass(RelationshipCtrl, [{\n            key: 'refresh',\n            value: function refresh() {\n                var _this2 = this;\n\n                this.AppService.getProfilesWhoWantsToHaveARelationshipWithMe().then(function (profiles) {\n                    _this2.profilePendingRequest = profiles[\"pendingUserRequest\"];\n                    _this2.profilePendingInvite = profiles[\"pendingUserInvite\"];\n                    _this2.profileMutual = profiles[\"mutualUsers\"];\n                    _this2.$log.log('getProfilesWhoWantsToHaveARelationshipWithMe pending request returned ' + _this2.profilePendingRequest.length + ' profiles');\n                    _this2.$log.log('getProfilesWhoWantsToHaveARelationshipWithMe pending invitereturned ' + _this2.profilePendingInvite.length + ' profiles');\n                    _this2.$log.log('getProfilesWhoWantsToHaveARelationshipWithMe mutual returned ' + _this2.profileMutual.length + ' profiles');\n                }, function (error) {\n                    _this2.$log.error('Error loading profiles who wants to have a relationship with current user ' + JSON.stringify(error));\n                    _this2.AppUtil.toastSimple('Unable to load profiles');\n                }).finally(function () {\n                    return _this2.$scope.$broadcast('scroll.refreshComplete');\n                });\n            }\n        }, {\n            key: 'view',\n            value: function view(index, profileList) {\n                this.$log.debug('viewing profile who wants to have a relationship with me at index ' + index);\n                this.profiles = profileList;\n                this.profile = this.profiles[index];\n                this.profileIndex = index;\n                this.profileModal.show();\n            }\n        }, {\n            key: 'like',\n            value: function like() {\n                this.$log.debug('approving relationship invite at index ' + this.profileIndex);\n                this.process(true);\n            }\n        }, {\n            key: 'pass',\n            value: function pass() {\n                this.$log.debug('declining relationship invite at index ' + this.profileIndex);\n                this.process(false);\n            }\n        }, {\n            key: 'process',\n            value: function process(relationship) {\n                var _this3 = this;\n\n                this.AppUtil.blockingCall(this.AppService.processPregnancy(this.profile, relationship), function () {\n                    _this3.profiles.splice(_this3.profileIndex, 1);\n                    _this3.close();\n                });\n            }\n        }, {\n            key: 'close',\n            value: function close() {\n                this.profileModal.hide();\n                this.profileIndex = null;\n                this.profile = null;\n            }\n        }]);\n\n        return RelationshipCtrl;\n    }();\n\n    app.RelationshipCtrl = RelationshipCtrl;\n    RelationshipCtrl.$inject = ['$log', '$rootScope', '$scope', '$state', '$ionicModal', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('RelationshipCtrl', RelationshipCtrl);\n})(app || (app = {}));\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Controller for the social sharing action\n     */\n    var ShareController = function () {\n        ShareController.$inject = [\"$log\", \"$cordovaSocialSharing\", \"socialShareMessage\", \"socialShareSubject\", \"playStoreUrl\", \"itunesUrl\", \"webStoreUrl\"];\n        function ShareController($log, $cordovaSocialSharing, socialShareMessage, socialShareSubject, playStoreUrl, itunesUrl, webStoreUrl) {\n            _classCallCheck(this, ShareController);\n\n            this.$log = $log;\n            this.$cordovaSocialSharing = $cordovaSocialSharing;\n            this.socialShareMessage = socialShareMessage;\n            this.socialShareSubject = socialShareSubject;\n            this.playStoreUrl = playStoreUrl;\n            this.itunesUrl = itunesUrl;\n            this.webStoreUrl = webStoreUrl;\n        }\n\n        _createClass(ShareController, [{\n            key: 'share',\n            value: function share() {\n                var _this = this;\n\n                this.shareStoreUrl = ionic.Platform.isAndroid() ? this.playStoreUrl : ionic.Platform.isIOS() ? this.itunesUrl : this.webStoreUrl;\n                this.$cordovaSocialSharing.share(this.socialShareSubject, this.socialShareMessage, null, this.shareStoreUrl) // Share via native share sheet \n                .then(function () {\n                    if (typeof analytics !== 'undefined') {\n                        analytics.trackView(\"Invite My Friends Controller\");\n                    }\n                    _this.$log.debug('Social share action complete');\n                }, function (error) {\n                    _this.$log.error('Social share action error ' + JSON.stringify(error));\n                });\n            }\n        }]);\n\n        return ShareController;\n    }();\n\n    app.ShareController = ShareController;\n    ShareController.$inject = ['$log', '$cordovaSocialSharing', 'socialShareMessage', 'socialShareSubject', 'playStoreUrl', 'itunesUrl', 'webStoreUrl'];\n    angular.module('controllers.share', ['constants', 'ngCordova.plugins.socialSharing', 'ionic']).controller('ShareController', ShareController);\n})(app || (app = {}));\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Controller for the Twilio WebRTC video calling.\n     * The controller-as is defined in the index.html to ensure there is one accessible instance.\n     * On Android this required the android.permission.CAMERA permission.\n     * This can be added with the cordova plugin at https://github.com/campers/android-camera-permission/\n     */\n    var TwilioVideoChat = function () {\n        // Generate an AccessToken in the Twilio Account Portal - https://www.twilio.com/user/account/video/testing-tools\n        TwilioVideoChat.$inject = [\"$log\", \"$rootScope\", \"$scope\", \"$ionicModal\", \"$ionicPopup\", \"AppService\", \"AppUtil\", \"ParseService\"];\n        function TwilioVideoChat($log, $rootScope, $scope, $ionicModal, $ionicPopup, AppService, AppUtil, ParseService) {\n            var _this = this;\n\n            _classCallCheck(this, TwilioVideoChat);\n\n            this.$log = $log;\n            this.$rootScope = $rootScope;\n            this.$scope = $scope;\n            this.$ionicModal = $ionicModal;\n            this.$ionicPopup = $ionicPopup;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.ParseService = ParseService;\n            this.hasWebRTC = navigator['webkitGetUserMedia'] || navigator['mozGetUserMedia'];\n            // state may be one of these three states\n            this.Inviting = 'inviting';\n            this.InCall = 'inCall';\n            this.Incoming = 'incoming';\n            $scope['video'] = this;\n            this.$ionicModal.fromTemplateUrl('video.html', {\n                scope: this.$scope,\n                animation: 'slide-in-up'\n            }).then(function (modal) {\n                return _this.modal = modal;\n            });\n            if (AppService.twilioAccessToken) {\n                this.init(AppService.twilioAccessToken);\n            } else {\n                $rootScope.$on('twilioAccessToken', function (event, token) {\n                    return _this.init(token);\n                });\n            }\n        }\n\n        _createClass(TwilioVideoChat, [{\n            key: 'isSupported',\n            value: function isSupported() {\n                return this.hasWebRTC && this.conversationsClient && this.conversationsClient.isListening;\n            }\n        }, {\n            key: 'init',\n            value: function init(twilioAccessToken) {\n                var _this2 = this;\n\n                this.$log.log('Initialising Twilio');\n                if (!this.hasWebRTC) {\n                    this.$log.log('WebRTC not supported');\n                    return;\n                }\n                var accessManager = new Twilio.AccessManager(twilioAccessToken);\n                accessManager.on('tokenExpired', function () {\n                    _this2.$log.warn('Twilio token expired');\n                    _this2.ParseService.getTwilioToken().then(function (token) {\n                        accessManager.updateToken(token);\n                    }, function (error) {\n                        return _this2.$log.error('Error getting an updated Twilio token', error);\n                    });\n                });\n                accessManager.on('error', function (error) {\n                    _this2.closeModal();\n                    _this2.AppUtil.toastSimpleTranslate('VIDEO_SERVICE_ERROR');\n                    _this2.$log.error('Twilio access manager error', error);\n                });\n                this.conversationsClient = new Twilio.Conversations.Client(accessManager);\n                this.conversationsClient.listen().then(function () {\n                    return _this2.onClientConnected();\n                }, function (error) {\n                    _this2.$log.error('Twilio Conversations.Client.listen() error', error);\n                    _this2.AppUtil.toastSimpleTranslate('VIDEO_SERVICE_ERROR');\n                });\n                this.conversationsClient.on('error', function (error) {\n                    _this2.closeModal();\n                    _this2.AppUtil.toastSimpleTranslate('VIDEO_SERVICE_ERROR');\n                    _this2.$log.error('Twilio conversation client error', error);\n                    // TODO handle error here. Only show popup if there was an active conversation or invite?\n                });\n            }\n        }, {\n            key: 'openModal',\n            value: function openModal(state) {\n                this.state = state;\n                this.modal.show();\n            }\n        }, {\n            key: 'closeModal',\n            value: function closeModal() {\n                this.modal.hide();\n                if (this.activeConversation) {\n                    try {\n                        this.activeConversation.localMedia.stop();\n                        this.activeConversation.disconnect();\n                    } catch (e) {}\n                    this.activeConversation = null;\n                }\n                this.profile = null;\n                this.state = null;\n                this.incomingInvite = null;\n            }\n            /**\n             * Invite a user to video chat\n             * @param userId the user to invite\n             */\n\n        }, {\n            key: 'invite',\n            value: function invite(userId) {\n                var _this3 = this;\n\n                this.$log.log('Inviting user id:' + userId);\n                this.profile = this.AppService.getProfileByUserId(userId);\n                this.openModal(this.Inviting);\n                this.conversationsClient.inviteToConversation(userId).then(function (conversation) {\n                    return _this3.conversationStarted(conversation);\n                }, function (error) {\n                    _this3.closeModal();\n                    _this3.AppUtil.toastSimpleTranslate('VIDEO_START_ERROR');\n                    _this3.$log.error('Twilio conversationStarted error ' + error + ' ' + JSON.stringify(error));\n                });\n            }\n            // Button actions\n            /** Accepting an incoming video invite */\n\n        }, {\n            key: 'accept',\n            value: function accept() {\n                var _this4 = this;\n\n                if (this.incomingInvite && this.incomingInvite.status === 'pending') {\n                    this.incomingInvite.accept().then(function (conversation) {\n                        return _this4.conversationStarted(conversation);\n                    }, function (error) {\n                        _this4.closeModal();\n                        _this4.AppUtil.toastSimpleTranslate('VIDEO_START_ERROR');\n                        _this4.$log.error('Twilio incomingInvite.accept() error', error);\n                    });\n                } else {\n                    this.closeModal();\n                    this.AppUtil.toastSimpleTranslate('VIDEO_START_ERROR');\n                    this.$log.info('Did not accept incomingInvite ' + (this.incomingInvite ? this.incomingInvite.status : 'null'));\n                }\n            }\n            /** Reject an incoming video invite */\n\n        }, {\n            key: 'reject',\n            value: function reject() {\n                if (this.incomingInvite) {\n                    try {\n                        this.incomingInvite.reject();\n                    } catch (e) {\n                        this.$log.warn('Error rejecting video invite', e);\n                    }\n                }\n                this.closeModal();\n            }\n            /** Cancel an outgoing invite in progress */\n\n        }, {\n            key: 'cancelInvite',\n            value: function cancelInvite() {\n                // TODO cancel the successful creation of the conversation\n                this.closeModal();\n            }\n            /** Disconnect from a video call currently in progress */\n\n        }, {\n            key: 'disconnect',\n            value: function disconnect() {\n                this.closeModal();\n                if (this.activeConversation) this.activeConversation.disconnect();\n            }\n        }, {\n            key: 'onClientConnected',\n            value: function onClientConnected() {\n                var _this5 = this;\n\n                this.$log.log('Connected to Twilio. Listening for incoming Invites as ' + this.conversationsClient.identity);\n                this.conversationsClient.on('invite', function (incomingInvite) {\n                    _this5.$log.log('Incoming video invite from: ' + incomingInvite.from);\n                    _this5.profile = _this5.AppService.getProfileByUserId(incomingInvite.from);\n                    if (_this5.activeConversation) {\n                        _this5.AppUtil.toastSimpleTranslate('Conversation already active. Rejecting invite');\n                        incomingInvite.reject();\n                    } else {\n                        _this5.incomingInvite = incomingInvite;\n                        _this5.openModal(_this5.Incoming);\n                    }\n                });\n            }\n            /** conversation is live */\n\n        }, {\n            key: 'conversationStarted',\n            value: function conversationStarted(conversation) {\n                var _this6 = this;\n\n                this.$log.log('In an active Conversation');\n                this.activeConversation = conversation;\n                this.state = this.InCall;\n                this.$scope.$apply(); // this comes in outside of the angular lifecycle so notify this.state has updated\n                // Draw local video\n                conversation.localMedia.attach('#video-local');\n                this.$log.log('Attached local media');\n                // When a participant joins, draw their video on screen\n                conversation.on('participantConnected', function (participant) {\n                    _this6.$log.log('Participant ' + participant.identity + ' connected');\n                    participant.media.attach('#video-remote');\n                    _this6.$log.log('Attached remote video');\n                });\n                // When a participant disconnects, note in log\n                conversation.on('participantDisconnected', function (participant) {\n                    _this6.$log.log('Participant ' + participant.identity + ' disconnected');\n                    participant.media.detach('#video-remote');\n                    _this6.closeModal();\n                });\n                // When the conversation ends, stop capturing local video\n                conversation.on('ended', function (conversation) {\n                    _this6.$log.log('Twilio conversation ended');\n                    conversation.localMedia.stop();\n                    conversation.disconnect();\n                    _this6.activeConversation = null;\n                    _this6.closeModal();\n                });\n            }\n        }]);\n\n        return TwilioVideoChat;\n    }();\n\n    app.TwilioVideoChat = TwilioVideoChat;\n    TwilioVideoChat.$inject = ['$log', '$rootScope', '$scope', '$ionicModal', '$ionicPopup', 'AppService', 'AppUtil', 'ParseService'];\n    var module = angular.module('controllers');\n    module.controller('TwilioVideoChat', TwilioVideoChat);\n})(app || (app = {}));\n\"use strict\";\n'use strict';\n\nvar mock$state = function mock$state($provide) {\n    var state = {};\n    state['go'] = function () {};\n    $provide.value('$state', state);\n    return state;\n};\nvar mock$ionicHistory = function mock$ionicHistory($provide) {\n    var ionicHistory = {};\n    $provide.value('$ionicHistory', ionicHistory);\n    return ionicHistory;\n};\nvar mock$localStorage = function mock$localStorage($provide) {\n    var localStorage = {};\n    $provide.value('$localStorage', localStorage);\n    return localStorage;\n};\nvar mock$analytics = function mock$analytics($provide) {\n    var analytics = { eventTrack: function eventTrack() {} };\n    $provide.value('$analytics', analytics);\n    return analytics;\n};\nvar mock$translate = function mock$translate($provide) {\n    var translate = { instant: function instant(key) {\n            return key;\n        } };\n    $provide.value('$translate', translate);\n    return translate;\n};\nvar mockAppService = function mockAppService($provide) {\n    var AppService = {};\n    $provide.value('AppService', AppService);\n    return AppService;\n};\nvar mockParseService = function mockParseService($provide) {\n    var ParseService = {};\n    var $q;\n    ParseService['inject'] = function (_$q_) {\n        return $q = _$q_;\n    };\n    ParseService.init = function () {\n        return $q.when();\n    };\n    ParseService.getUserId = function () {\n        return 'uid';\n    };\n    ParseService.sendChatMessage = function (msg, match) {\n        msg.id = ' ';\n        msg.match = match;\n        return $q.when(msg);\n    };\n    ParseService.rebuildMatches = function () {\n        return $q.when();\n    };\n    $provide.value('ParseService', ParseService);\n    return ParseService;\n};\nvar mockLocalDB = function mockLocalDB($provide) {\n    var LocalDB = {};\n    var $q;\n    LocalDB['inject'] = function (_$q_) {\n        return $q = _$q_;\n    };\n    LocalDB.init = function () {\n        return $q.when();\n    };\n    LocalDB.getUnreadChats = function () {\n        return $q.when({});\n    };\n    LocalDB.setChatRead = function (chatId, read) {\n        return $q.when();\n    };\n    LocalDB.saveChatMessage = function () {\n        return $q.when(true);\n    };\n    $provide.value('LocalDB', LocalDB);\n    return LocalDB;\n};\nvar mockAppUtil = function mockAppUtil($provide) {\n    var AppUtil = {};\n    AppUtil.blockingCall = function (promise, success, errorKey) {\n        return success(promise);\n    };\n    AppUtil.toastSimpleTranslate = function (msgKey) {};\n    AppUtil.toastSimple = function (msg) {};\n    $provide.value('AppUtil', AppUtil);\n    return AppUtil;\n};\n\"use strict\";\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    var AboutJAB = function () {\n        AboutJAB.$inject = [\"$ionicPopup\", \"$log\", \"$scope\", \"AppService\", \"AppUtil\"];\n        function AboutJAB($ionicPopup, $log, $scope, AppService, AppUtil) {\n            var _this = this;\n\n            _classCallCheck(this, AboutJAB);\n\n            this.$ionicPopup = $ionicPopup;\n            this.$log = $log;\n            this.$scope = $scope;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            $scope.$on('$ionicView.beforeEnter', function () {\n                return _this.refreshAbout();\n            });\n        }\n\n        _createClass(AboutJAB, [{\n            key: 'refreshAbout',\n            value: function refreshAbout() {\n                var _this2 = this;\n\n                this.AppUtil.blockingCall(this.AppService.getAboutJab(), function (about) {\n                    _this2.about = about;\n                });\n            }\n        }, {\n            key: 'saveAbout',\n            value: function saveAbout() {\n                var _this3 = this;\n\n                this.AppUtil.blockingCall(this.AppService.addAboutJab(this.about), function () {\n                    _this3.AppUtil.toastSimple(\"Saved Successfully\");\n                    _this3.refreshAbout();\n                });\n            }\n        }]);\n\n        return AboutJAB;\n    }();\n\n    app.AboutJAB = AboutJAB;\n    AboutJAB.$inject = ['$ionicPopup', '$log', '$scope', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('AboutJAB', AboutJAB);\n})(app || (app = {}));\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Controller\n     */\n    var ApplyBadges = function () {\n        ApplyBadges.$inject = [\"$log\", \"$rootScope\", \"$scope\", \"$q\", \"$state\", \"$ionicModal\", \"AppService\", \"AppUtil\"];\n        function ApplyBadges($log, $rootScope, $scope, $q, $state, $ionicModal, AppService, AppUtil) {\n            var _this = this;\n\n            _classCallCheck(this, ApplyBadges);\n\n            this.$log = $log;\n            this.$rootScope = $rootScope;\n            this.$scope = $scope;\n            this.$q = $q;\n            this.$state = $state;\n            this.$ionicModal = $ionicModal;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.$scope.options = {\n                pagination: false,\n                onlyExternal: true\n            };\n            $ionicModal.fromTemplateUrl('applybadges.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function (modal) {\n                return _this.profileModal = modal;\n            });\n            // Cleanup the modal when we're done with it\n            $scope.$on('$destroy', function () {\n                return _this.profileModal.remove();\n            });\n            this.$scope.$on(\"$ionicSlides.sliderInitialized\", function (event, data) {\n                // data.slider is the instance of Swiper\n                $scope.slider = data.slider;\n            });\n            this.refresh();\n        }\n\n        _createClass(ApplyBadges, [{\n            key: 'refresh',\n            value: function refresh() {\n                var _this2 = this;\n\n                this.AppUtil.blockingCall(this.AppService.getApplyBadgeUsers(), function (profiles) {\n                    _this2.$log.log('Loaded ' + profiles.length + ' items');\n                    _this2.profiles = profiles;\n                });\n            }\n        }, {\n            key: 'viewDetails',\n            value: function viewDetails(profile) {\n                this.profile = profile;\n                this.personCategory = this.profile.personCategory;\n                this.personType = this.profile.personType;\n                this.personSperm = this.profile.personSperm;\n                this.personEgg = this.profile.personEgg;\n                this.personWomb = this.profile.personWomb;\n                this.personEmbryo = this.profile.personEmbryo;\n                this.personHelpLevel = this.profile.personHelpLevel;\n                this.profileModal.show();\n            }\n        }, {\n            key: 'closeModal',\n            value: function closeModal() {\n                this.refresh();\n                this.profile = null;\n                this.profileModal.hide();\n            }\n        }, {\n            key: 'applyBadge',\n            value: function applyBadge() {\n                var _this3 = this;\n\n                var profileUpdate = {};\n                profileUpdate.personCategory = this.personCategory ? this.personCategory : '0';\n                profileUpdate.hasSelfId = true;\n                if (this.personCategory === '3') {\n                    profileUpdate.personType = '0';\n                    profileUpdate.personSperm = false;\n                    profileUpdate.personEgg = false;\n                    profileUpdate.personWomb = false;\n                    profileUpdate.personEmbryo = false;\n                    profileUpdate.personHelpLevel = '0';\n                } else {\n                    profileUpdate.personType = this.personType ? this.personType : '0';\n                    profileUpdate.personSperm = this.personSperm ? this.personSperm : false;\n                    profileUpdate.personEgg = this.personEgg ? this.personEgg : false;\n                    profileUpdate.personWomb = this.personWomb ? this.personWomb : false;\n                    profileUpdate.personEmbryo = this.personEmbryo ? this.personEmbryo : false;\n                    profileUpdate.personHelpLevel = this.personHelpLevel ? this.personHelpLevel : '0';\n                }\n                var thingsIHave = \"\";\n                if (profileUpdate.personSperm) thingsIHave += \"S\";\n                if (profileUpdate.personEgg) thingsIHave += \"E\";\n                if (profileUpdate.personWomb) thingsIHave += \"W\";\n                if (profileUpdate.personEmbryo) thingsIHave += \"Y\";\n                if (this.personCategory !== '3' && !profileUpdate.personSperm && !profileUpdate.personEgg && !profileUpdate.personWomb && !profileUpdate.personEmbryo) thingsIHave += \"X\";\n                profileUpdate.thingsIHave = thingsIHave;\n                this.AppUtil.blockingCall(this.AppService.saveProfileForApplyBadge(this.profile, profileUpdate), function () {\n                    _this3.closeModal();\n                    _this3.AppUtil.toastSimple(\"Badge Applied Successfully\");\n                });\n            }\n        }]);\n\n        return ApplyBadges;\n    }();\n\n    app.ApplyBadges = ApplyBadges;\n    ApplyBadges.$inject = ['$log', '$rootScope', '$scope', '$q', '$state', '$ionicModal', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('ApplyBadges', ApplyBadges);\n})(app || (app = {}));\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Controller\n     */\n    var BannedUsers = function () {\n        BannedUsers.$inject = [\"$log\", \"$rootScope\", \"$scope\", \"$q\", \"$state\", \"$ionicModal\", \"$ionicActionSheet\", \"AppService\", \"AppUtil\", \"$translate\"];\n        function BannedUsers($log, $rootScope, $scope, $q, $state, $ionicModal, $ionicActionSheet, AppService, AppUtil, $translate) {\n            var _this = this;\n\n            _classCallCheck(this, BannedUsers);\n\n            this.$log = $log;\n            this.$rootScope = $rootScope;\n            this.$scope = $scope;\n            this.$q = $q;\n            this.$state = $state;\n            this.$ionicModal = $ionicModal;\n            this.$ionicActionSheet = $ionicActionSheet;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.$translate = $translate;\n            $ionicModal.fromTemplateUrl('admin/reportDetails.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function (modal) {\n                return _this.reportModal = modal;\n            });\n            // Cleanup the modal when we're done with it\n            $scope.$on('$destroy', function () {\n                return _this.reportModal.remove();\n            });\n            this.refresh();\n        }\n\n        _createClass(BannedUsers, [{\n            key: 'refresh',\n            value: function refresh() {\n                var _this2 = this;\n\n                this.AppUtil.blockingCall(this.AppService.getBannedUsers(), function (reports) {\n                    return _this2.reports = reports;\n                });\n            }\n        }, {\n            key: 'viewDetails',\n            value: function viewDetails(report) {\n                var _this3 = this;\n\n                this.AppUtil.blockingCall(this.AppService.getReportedUserDetails(report), function (details) {\n                    _this3.report = report;\n                    _this3.reportDetails = details;\n                    // Extract the messages that were sent to the user who raised the report\n                    _this3.reportDetails.recentMessagesToReporter = _.filter(details.recentMessages, function (msg) {\n                        return msg.userIds.indexOf(report.reportedBy.id) > -1;\n                    });\n                    if (_this3.reportDetails.recentMessagesToReporter.length > 6) _this3.reportDetails.recentMessagesToReporter.slice(0, 5);\n                    _this3.reportModal.show();\n                });\n            }\n        }, {\n            key: 'fileUrl',\n            value: function fileUrl(photo) {\n                if (photo.url) return photo.url();\n                return photo._url;\n            }\n        }, {\n            key: 'deletePhoto',\n            value: function deletePhoto(photoUrl) {\n                var _this4 = this;\n\n                this.$log.log('deleting photo at ' + photoUrl);\n                this.AppUtil.blockingCall(this.AppService.deletePhoto(this.report.id, photoUrl),\n                // On success remove the photo locally\n                function () {\n                    return _.remove(_this4.report.profile.photos, function (photo) {\n                        return _this4.fileUrl(photo) === photoUrl;\n                    });\n                });\n            }\n        }, {\n            key: 'actionReport',\n            value: function actionReport() {\n                var _this5 = this;\n\n                this.$ionicActionSheet.show({\n                    buttons: [{ text: 'Deleted Photo' }, { text: 'None' }],\n                    destructiveText: 'Ban User',\n                    titleText: 'Select Report Action',\n                    cancelText: this.$translate.instant('CANCEL'),\n                    // cancel: function () {},\n                    buttonClicked: function buttonClicked(index) {\n                        switch (index) {\n                            case 0:\n                                _this5.closeReport('deleted photo');\n                                break;\n                            case 1:\n                                _this5.closeReport('none');\n                                break;\n                        }\n                        return true;\n                    },\n                    destructiveButtonClicked: function destructiveButtonClicked(index) {\n                        _this5.banUserAction();\n                        return true;\n                    }\n                });\n            }\n        }, {\n            key: 'closeReport',\n            value: function closeReport(action) {\n                var _this6 = this;\n\n                this.$log.log('Closing report ' + this.report.id + ' with action ' + action);\n                this.AppUtil.blockingCall(this.AppService.closeReport(this.report.id, action), function () {\n                    _this6.closeModal();\n                    _.remove(_this6.reports, 'id', _this6.report.id);\n                    _this6.report = null;\n                    _this6.reportDetails = null;\n                });\n            }\n            /**\n             * Closes the report, and all other associated with the reported user, and bans the user.\n             */\n\n        }, {\n            key: 'banUserAction',\n            value: function banUserAction() {\n                var _this7 = this;\n\n                this.AppUtil.blockingCall(this.AppService.banUser(this.report.reportedUser), function () {\n                    _this7.closeModal();\n                    _this7.report = null;\n                    _this7.reportDetails = null;\n                    _this7.refresh(); // could be multiple reports for the user which are now closed, so just refresh\n                });\n            }\n        }, {\n            key: 'closeModal',\n            value: function closeModal() {\n                this.reportModal.hide();\n            }\n        }]);\n\n        return BannedUsers;\n    }();\n\n    app.BannedUsers = BannedUsers;\n    BannedUsers.$inject = ['$log', '$rootScope', '$scope', '$q', '$state', '$ionicModal', '$ionicActionSheet', 'AppService', 'AppUtil', '$translate'];\n    angular.module('controllers').controller('BannedUsers', BannedUsers);\n})(app || (app = {}));\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    var ClinicsQuestion = function () {\n        ClinicsQuestion.$inject = [\"$ionicPopup\", \"$log\", \"$scope\", \"$state\", \"$ionicModal\", \"AppService\", \"AppUtil\"];\n        function ClinicsQuestion($ionicPopup, $log, $scope, $state, $ionicModal, AppService, AppUtil) {\n            var _this2 = this;\n\n            _classCallCheck(this, ClinicsQuestion);\n\n            this.$ionicPopup = $ionicPopup;\n            this.$log = $log;\n            this.$scope = $scope;\n            this.$state = $state;\n            this.$ionicModal = $ionicModal;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.modalText = \"New \";\n            this.submitted = false;\n            $scope.$on('$ionicView.beforeEnter', function () {\n                return _this2.refresh();\n            });\n            // $ionicModal.fromTemplateUrl('clinicsModal.html', {\n            // // Cleanup the modal when we're done with it\n            $scope.$on('$destroy', function () {\n                return _this2.clinicsModal.remove();\n            });\n            $ionicModal.fromTemplateUrl('templates/modal.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function (modal) {\n                return _this2.clinicsModal = modal;\n            });\n        }\n\n        _createClass(ClinicsQuestion, [{\n            key: 'refresh',\n            value: function refresh() {\n                var _this3 = this;\n\n                this.AppUtil.blockingCall(this.AppService.getClinicsQuestion(), function (questions) {\n                    _this3.$log.log('loaded ' + questions.length + ' questions');\n                    _this3.clinicQuestions = questions;\n                });\n            }\n        }, {\n            key: 'addClinicsQuestion',\n            value: function addClinicsQuestion(form) {\n                var _this4 = this;\n\n                this.submitted = true;\n                if (form.$valid) {\n                    this.AppUtil.blockingCall(this.AppService.addClinicsQuestion(this.clinicQuestion), function () {\n                        _this4.modalText = \"New \";\n                        _this4.clinicQuestion = null;\n                        _this4.AppUtil.toastSimple(\"Saved Successfully\");\n                        _this4.refresh();\n                    });\n                    setTimeout(this.resetForm(form), 1000);\n                }\n            }\n        }, {\n            key: 'editClinicsQuestion',\n            value: function editClinicsQuestion(question) {\n                this.modalText = \"Update \";\n                this.clinicQuestion = question.toJSON();\n                this.clinicsModal.show();\n            }\n        }, {\n            key: 'deleteClinicsQuestion',\n            value: function deleteClinicsQuestion(id) {\n                this.$log.log('Delete question ' + id);\n                var _this = this;\n                this.$ionicPopup.confirm({\n                    title: 'Delete Question',\n                    template: 'Are you sure you want to delete this question?'\n                }).then(function (res) {\n                    if (res) _this.deleteQ(id);\n                });\n            }\n        }, {\n            key: 'deleteQ',\n            value: function deleteQ(id) {\n                var _this5 = this;\n\n                this.AppUtil.blockingCall(this.AppService.delClinicsQuestion(id), function () {\n                    _this5.AppUtil.toastSimple(\"Deleted Successfully\");\n                    _this5.refresh();\n                });\n            }\n        }, {\n            key: 'close',\n            value: function close() {\n                this.modalText = \"New \";\n                this.clinicQuestion = null;\n                this.clinicsModal.hide();\n            }\n        }, {\n            key: 'resetForm',\n            value: function resetForm(form) {\n                this.clinicQuestion = null;\n                this.clinicsModal.hide();\n                form.$setPristine();\n                form.$setUntouched();\n            }\n        }]);\n\n        return ClinicsQuestion;\n    }();\n\n    app.ClinicsQuestion = ClinicsQuestion;\n    ClinicsQuestion.$inject = ['$ionicPopup', '$log', '$scope', '$state', '$ionicModal', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('ClinicsQuestion', ClinicsQuestion);\n})(app || (app = {}));\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Controller\n     */\n    var AdminEmailSearch = function () {\n        AdminEmailSearch.$inject = [\"$ionicPopup\", \"$log\", \"$scope\", \"$state\", \"$ionicModal\", \"AppService\", \"AppUtil\"];\n        function AdminEmailSearch($ionicPopup, $log, $scope, $state, $ionicModal, AppService, AppUtil) {\n            var _this = this;\n\n            _classCallCheck(this, AdminEmailSearch);\n\n            this.$ionicPopup = $ionicPopup;\n            this.$log = $log;\n            this.$scope = $scope;\n            this.$state = $state;\n            this.$ionicModal = $ionicModal;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.email = ''; // search term\n            $scope.$on('$ionicView.enter', function () {\n                _this.$log.debug('AdminEmailSearch $ionicView.enter');\n                _this.search();\n            });\n        }\n\n        _createClass(AdminEmailSearch, [{\n            key: 'search',\n            value: function search() {\n                var _this2 = this;\n\n                this.$scope['search'] = { email: this.email };\n                this.$ionicPopup.show({\n                    template: '<input type=\"text\" ng-model=\"search.email\">',\n                    title: 'Enter email to search',\n                    subTitle: 'Minimum 4 characters. Searches starting with',\n                    scope: this.$scope,\n                    buttons: [{\n                        text: '<b>Search</b>',\n                        type: 'button-positive',\n                        onTap: function onTap(e) {\n                            if (_this2.$scope['search'].email.length < 4) {\n                                _this2.AppUtil.toastSimple('Enter at least 4 characters');\n                                e.preventDefault();\n                                return;\n                            }\n                            return _this2.$scope['search'].email;\n                        }\n                    }]\n                }).then(function (result) {\n                    _this2.$log.log('email search ', result);\n                    _this2.email = result;\n                    _this2.AppUtil.blockingCall(_this2.AppService.searchUsersByEmail(result), function (users) {\n                        _this2.users = users;\n                        _this2.$log.info('Found ' + users.length + ' users with email starting with ' + result);\n                    });\n                });\n            }\n        }]);\n\n        return AdminEmailSearch;\n    }();\n\n    app.AdminEmailSearch = AdminEmailSearch;\n    AdminEmailSearch.$inject = ['$ionicPopup', '$log', '$scope', '$state', '$ionicModal', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('AdminEmailSearch', AdminEmailSearch);\n})(app || (app = {}));\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    var GraphReport = function () {\n        GraphReport.$inject = [\"$log\", \"$scope\", \"AppService\", \"AppUtil\"];\n        function GraphReport($log, $scope, AppService, AppUtil) {\n            var _this = this;\n\n            _classCallCheck(this, GraphReport);\n\n            this.$log = $log;\n            this.$scope = $scope;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.labels = [];\n            this.voterReport = null;\n            this.series = ['Matches Per Day', 'Series B'];\n            this.numDays = 7;\n            this.matchData = [];\n            this.chatsData = [28, 48, 40, 19, 86, 27, 90];\n            this.data = [[]];\n            // public onClick = function (points, evt) {\n            //     console.log(points, evt);\n            // };\n            this.datasetOverride = [{ yAxisID: 'y-axis-1' }, { yAxisID: 'y-axis-2' }];\n            this.options = {\n                scales: {\n                    yAxes: [{\n                        id: 'y-axis-1',\n                        type: 'linear',\n                        display: true,\n                        position: 'left'\n                    }, {\n                        id: 'y-axis-2',\n                        type: 'linear',\n                        display: true,\n                        position: 'right'\n                    }]\n                }\n            };\n            $scope.$on('$ionicView.beforeEnter', function () {\n                return _this.getReport();\n            });\n        }\n\n        _createClass(GraphReport, [{\n            key: 'getReport',\n            value: function getReport() {\n                var _this2 = this;\n\n                var curDate = new Date();\n                var dateCovered = new Date();\n                dateCovered.setDate(dateCovered.getDate() - this.numDays + 1);\n                this.labels = [];\n                this.matchData = [];\n                this.voterReport = null;\n                this.data = [[]];\n                while (dateCovered <= curDate) {\n                    this.labels.push(dateCovered.toDateString());\n                    dateCovered.setDate(dateCovered.getDate() + 1);\n                }\n                this.AppUtil.blockingCall(this.AppService.getMatchesReport(this.numDays), function (items) {\n                    _this2.voterReport = {};\n                    _this2.$log.log('LOADED ' + items.length + ' items');\n                    items.forEach(function (a) {\n                        if (a.matchedDate.toDateString() in _this2.voterReport) _this2.voterReport[a.matchedDate.toDateString()]++;else _this2.voterReport[a.matchedDate.toDateString()] = 1;\n                    });\n                    _this2.labels.forEach(function (a) {\n                        if (a in _this2.voterReport) _this2.matchData.push(_this2.voterReport[a]);else _this2.matchData.push(0);\n                    });\n                    _this2.data[0] = _this2.matchData;\n                    _this2.AppService.getChatMessageReport(_this2.numDays).then(function (items) {\n                        _this2.$log.log('loaded ' + items.length + ' chats');\n                        var groupByDateObj = _.groupBy(items, function (n) {\n                            return n.createdAt.toDateString();\n                        });\n                        for (var item in groupByDateObj) {\n                            var arrayOfNames = _.groupBy(item, function (n) {\n                                return n.senderName;\n                            });\n                            console.log(\"Names length: \" + arrayOfNames.length);\n                        }\n                    });\n                });\n            }\n        }]);\n\n        return GraphReport;\n    }();\n\n    app.GraphReport = GraphReport;\n    GraphReport.$inject = ['$log', '$scope', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('GraphReport', GraphReport);\n})(app || (app = {}));\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Controller\n     */\n    var AdminNameSearch = function () {\n        AdminNameSearch.$inject = [\"$ionicPopup\", \"$log\", \"$scope\", \"$state\", \"$ionicModal\", \"AppService\", \"AppUtil\"];\n        function AdminNameSearch($ionicPopup, $log, $scope, $state, $ionicModal, AppService, AppUtil) {\n            var _this = this;\n\n            _classCallCheck(this, AdminNameSearch);\n\n            this.$ionicPopup = $ionicPopup;\n            this.$log = $log;\n            this.$scope = $scope;\n            this.$state = $state;\n            this.$ionicModal = $ionicModal;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.name = ''; // search term\n            $scope.$on('$ionicView.enter', function () {\n                _this.search();\n            });\n        }\n\n        _createClass(AdminNameSearch, [{\n            key: 'search',\n            value: function search() {\n                var _this2 = this;\n\n                // An elaborate, custom popup\n                this.$scope['search'] = { name: this.name };\n                this.$ionicPopup.show({\n                    template: '<input type=\"text\" ng-model=\"search.name\">',\n                    title: 'Enter name to search',\n                    subTitle: 'Minimum 4 characters. Searches starting with',\n                    scope: this.$scope,\n                    buttons: [{\n                        text: '<b>Search</b>',\n                        type: 'button-positive',\n                        onTap: function onTap(e) {\n                            if (_this2.$scope['search'].name.length < 2) {\n                                _this2.AppUtil.toastSimple('Enter at least 2 characters');\n                                e.preventDefault();\n                                return;\n                            }\n                            return _this2.$scope['search'].name;\n                        }\n                    }]\n                }).then(function (result) {\n                    _this2.$log.log('name search ', result);\n                    _this2.name = result;\n                    _this2.AppUtil.blockingCall(_this2.AppService.searchUsersByName(result), function (profiles) {\n                        _this2.profiles = profiles;\n                        _this2.$log.info('Found ' + profiles.length + ' profiles with name starting with ' + result);\n                    });\n                });\n            }\n        }]);\n\n        return AdminNameSearch;\n    }();\n\n    app.AdminNameSearch = AdminNameSearch;\n    AdminNameSearch.$inject = ['$ionicPopup', '$log', '$scope', '$state', '$ionicModal', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('AdminNameSearch', AdminNameSearch);\n})(app || (app = {}));\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    var PhotoReview = function () {\n        PhotoReview.$inject = [\"$ionicPopup\", \"$log\", \"$scope\", \"$ionicHistory\", \"$state\", \"$stateParams\", \"AppService\", \"AppUtil\"];\n        function PhotoReview($ionicPopup, $log, $scope, $ionicHistory, $state, $stateParams, AppService, AppUtil) {\n            var _this = this;\n\n            _classCallCheck(this, PhotoReview);\n\n            this.$ionicPopup = $ionicPopup;\n            this.$log = $log;\n            this.$scope = $scope;\n            this.$ionicHistory = $ionicHistory;\n            this.$state = $state;\n            this.$stateParams = $stateParams;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.profilePhotos = [];\n            $scope.$on('$ionicView.beforeEnter', function () {\n                return _this.refresh();\n            });\n        }\n\n        _createClass(PhotoReview, [{\n            key: 'refresh',\n            value: function refresh() {\n                var _this2 = this;\n\n                this.AppUtil.blockingCall(this.AppService.getProfilesWithPhotosToReview(), function (profiles) {\n                    _this2.$log.log('loaded ' + profiles.length + ' profiles with photos to review');\n                    profiles.forEach(function (profile) {\n                        return profile.photosInReview.forEach(function (file) {\n                            return _this2.profilePhotos.push({ profile: profile, file: file });\n                        });\n                    });\n                });\n            }\n        }, {\n            key: 'reviewPhoto',\n            value: function reviewPhoto(profile, file, approved) {\n                var _this3 = this;\n\n                console.log('controller reviewPhoto ', profile, file, approved);\n                this.AppUtil.blockingCall(this.AppService.reviewPhoto(profile.id, file.url(), approved), function () {\n                    _this3.$log.log('photo review success');\n                    // Remove the one we just reviewed\n                    _this3.profilePhotos.splice(_.findIndex(_this3.profilePhotos, function (pf) {\n                        return pf.file.url() === file.url();\n                    }), 1);\n                });\n            }\n        }]);\n\n        return PhotoReview;\n    }();\n\n    app.PhotoReview = PhotoReview;\n    PhotoReview.$inject = ['$ionicPopup', '$log', '$scope', '$ionicHistory', '$state', '$stateParams', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('PhotoReview', PhotoReview);\n})(app || (app = {}));\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Controller\n     */\n    var ReportedUsers = function () {\n        ReportedUsers.$inject = [\"$log\", \"$rootScope\", \"$scope\", \"$q\", \"$state\", \"$ionicModal\", \"$ionicActionSheet\", \"AppService\", \"AppUtil\", \"$translate\"];\n        function ReportedUsers($log, $rootScope, $scope, $q, $state, $ionicModal, $ionicActionSheet, AppService, AppUtil, $translate) {\n            var _this = this;\n\n            _classCallCheck(this, ReportedUsers);\n\n            this.$log = $log;\n            this.$rootScope = $rootScope;\n            this.$scope = $scope;\n            this.$q = $q;\n            this.$state = $state;\n            this.$ionicModal = $ionicModal;\n            this.$ionicActionSheet = $ionicActionSheet;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.$translate = $translate;\n            $ionicModal.fromTemplateUrl('admin/reportDetails.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function (modal) {\n                return _this.reportModal = modal;\n            });\n            // Cleanup the modal when we're done with it\n            $scope.$on('$destroy', function () {\n                return _this.reportModal.remove();\n            });\n            this.refresh();\n        }\n\n        _createClass(ReportedUsers, [{\n            key: 'refresh',\n            value: function refresh() {\n                var _this2 = this;\n\n                this.AppUtil.blockingCall(this.AppService.getReportedUsers(), function (reports) {\n                    return _this2.reports = reports;\n                });\n            }\n        }, {\n            key: 'viewDetails',\n            value: function viewDetails(report) {\n                var _this3 = this;\n\n                this.AppUtil.blockingCall(this.AppService.getReportedUserDetails(report), function (details) {\n                    _this3.report = report;\n                    _this3.reportDetails = details;\n                    // Extract the messages that were sent to the user who raised the report\n                    _this3.reportDetails.recentMessagesToReporter = _.filter(details.recentMessages, function (msg) {\n                        return msg.userIds.indexOf(report.reportedBy.id) > -1;\n                    });\n                    if (_this3.reportDetails.recentMessagesToReporter.length > 6) _this3.reportDetails.recentMessagesToReporter.slice(0, 5);\n                    _this3.reportModal.show();\n                });\n            }\n        }, {\n            key: 'fileUrl',\n            value: function fileUrl(photo) {\n                if (photo.url) return photo.url();\n                return photo._url;\n            }\n        }, {\n            key: 'deletePhoto',\n            value: function deletePhoto(photoUrl) {\n                var _this4 = this;\n\n                this.$log.log('deleting photo at ' + photoUrl);\n                this.AppUtil.blockingCall(this.AppService.deletePhoto(this.report.id, photoUrl),\n                // On success remove the photo locally\n                function () {\n                    return _.remove(_this4.report.profile.photos, function (photo) {\n                        return _this4.fileUrl(photo) === photoUrl;\n                    });\n                });\n            }\n        }, {\n            key: 'actionReport',\n            value: function actionReport() {\n                var _this5 = this;\n\n                this.$ionicActionSheet.show({\n                    buttons: [{ text: 'Deleted Photo' }, { text: 'None' }],\n                    destructiveText: 'Ban User',\n                    titleText: 'Select Report Action',\n                    cancelText: this.$translate.instant('CANCEL'),\n                    // cancel: function () {},\n                    buttonClicked: function buttonClicked(index) {\n                        switch (index) {\n                            case 0:\n                                _this5.closeReport('deleted photo');\n                                break;\n                            case 1:\n                                _this5.closeReport('none');\n                                break;\n                        }\n                        return true;\n                    },\n                    destructiveButtonClicked: function destructiveButtonClicked(index) {\n                        _this5.banUserAction();\n                        return true;\n                    }\n                });\n            }\n        }, {\n            key: 'closeReport',\n            value: function closeReport(action) {\n                var _this6 = this;\n\n                this.$log.log('Closing report ' + this.report.id + ' with action ' + action);\n                this.AppUtil.blockingCall(this.AppService.closeReport(this.report.id, action), function () {\n                    _this6.closeModal();\n                    _.remove(_this6.reports, 'id', _this6.report.id);\n                    _this6.report = null;\n                    _this6.reportDetails = null;\n                });\n            }\n            /**\n             * Closes the report, and all other associated with the reported user, and bans the user.\n             */\n\n        }, {\n            key: 'banUserAction',\n            value: function banUserAction() {\n                var _this7 = this;\n\n                this.AppUtil.blockingCall(this.AppService.banUser(this.report.reportedUser), function () {\n                    _this7.closeModal();\n                    _this7.report = null;\n                    _this7.reportDetails = null;\n                    _this7.refresh(); // could be multiple reports for the user which are now closed, so just refresh\n                });\n            }\n        }, {\n            key: 'closeModal',\n            value: function closeModal() {\n                this.reportModal.hide();\n            }\n        }]);\n\n        return ReportedUsers;\n    }();\n\n    app.ReportedUsers = ReportedUsers;\n    ReportedUsers.$inject = ['$log', '$rootScope', '$scope', '$q', '$state', '$ionicModal', '$ionicActionSheet', 'AppService', 'AppUtil', '$translate'];\n    angular.module('controllers').controller('ReportedUsers', ReportedUsers);\n})(app || (app = {}));\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Controller\n     */\n    var UserAdmin = function () {\n        UserAdmin.$inject = [\"$ionicPopup\", \"$log\", \"$scope\", \"$ionicHistory\", \"$state\", \"$stateParams\", \"AppService\", \"AppUtil\"];\n        function UserAdmin($ionicPopup, $log, $scope, $ionicHistory, $state, $stateParams, AppService, AppUtil) {\n            var _this = this;\n\n            _classCallCheck(this, UserAdmin);\n\n            this.$ionicPopup = $ionicPopup;\n            this.$log = $log;\n            this.$scope = $scope;\n            this.$ionicHistory = $ionicHistory;\n            this.$state = $state;\n            this.$stateParams = $stateParams;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            $scope.$on('$ionicView.beforeEnter', function () {\n                var userId = _this.$stateParams.userId;\n                _this.$log.log('UserAdmin ' + userId);\n                _this.AppUtil.blockingCall(_this.AppService.loadUser(userId), function (user) {\n                    _this.user = user;\n                    _this.$log.log('loaded user ' + JSON.stringify(user));\n                    var matches = _this.AppService.getMutualMatches();\n                    var match = _.find(matches, function (match) {\n                        return match.uid1 === userId || match.uid2 === userId;\n                    });\n                    _this.isMatch = match ? true : false;\n                });\n            });\n        }\n\n        _createClass(UserAdmin, [{\n            key: 'deleteUser',\n            value: function deleteUser() {\n                var myThis = this;\n                this.$ionicPopup.confirm({\n                    title: 'Confirm delete',\n                    okText: 'Delete',\n                    cancelText: 'Cancel'\n                }).then(function (res) {\n                    if (res) myThis.AppUtil.blockingCall(myThis.AppService.deleteUser(myThis.user.id), function () {\n                        myThis.AppUtil.toastSimple('User deleted');\n                        myThis.$log.info('Deleted user ' + myThis.user.id);\n                        myThis.$ionicHistory.goBack();\n                    });\n                });\n            }\n        }, {\n            key: 'banUser',\n            value: function banUser() {\n                var myThis = this;\n                this.$ionicPopup.confirm({\n                    title: 'Confirm ban',\n                    okText: 'Ban',\n                    cancelText: 'Cancel'\n                }).then(function (res) {\n                    if (res) myThis.AppUtil.blockingCall(myThis.AppService.reportProfile('admin reporting reasons', myThis.user.profile, null), function () {\n                        myThis.AppService.banUser(myThis.user.id).then(function () {\n                            myThis.AppUtil.toastSimple('User banned');\n                            myThis.$log.info('Banned user ' + myThis.user.id);\n                            myThis.$ionicHistory.goBack();\n                        });\n                    });\n                });\n            }\n        }, {\n            key: 'connectUser',\n            value: function connectUser() {\n                var myThis = this;\n                this.$ionicPopup.confirm({\n                    title: 'Connect to user',\n                    okText: 'Connect',\n                    cancelText: 'Cancel'\n                }).then(function (res) {\n                    if (res) myThis.AppUtil.blockingCall(myThis.AppService.processMatchFromAdmin(myThis.user.profile, true, true), function () {\n                        myThis.AppUtil.toastSimple('User connected');\n                        myThis.$log.info('Established connection on user' + myThis.user.id);\n                        myThis.$ionicHistory.goBack();\n                    });\n                });\n            }\n        }]);\n\n        return UserAdmin;\n    }();\n\n    app.UserAdmin = UserAdmin;\n    UserAdmin.$inject = ['$ionicPopup', '$log', '$scope', '$ionicHistory', '$state', '$stateParams', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('UserAdmin', UserAdmin);\n})(app || (app = {}));\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    var VoteReport = function () {\n        VoteReport.$inject = [\"$log\", \"$scope\", \"AppService\", \"AppUtil\"];\n        function VoteReport($log, $scope, AppService, AppUtil) {\n            var _this = this;\n\n            _classCallCheck(this, VoteReport);\n\n            this.$log = $log;\n            this.$scope = $scope;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.voteReports = null;\n            this.voterReport = null;\n            $scope.$on('$ionicView.beforeEnter', function () {\n                return _this.refresh();\n            });\n        }\n\n        _createClass(VoteReport, [{\n            key: 'refresh',\n            value: function refresh() {\n                var _this2 = this;\n\n                this.voteReports = null;\n                this.voterReport = null;\n                this.AppUtil.blockingCall(this.AppService.getFindUsReport(), function (items) {\n                    _this2.voterReport = {};\n                    _this2.$log.log('loaded ' + items.length + ' items');\n                    _this2.voteReports = items;\n                    _this2.voteReports.forEach(function (a) {\n                        if (a.name in _this2.voterReport) _this2.voterReport[a.name]++;else _this2.voterReport[a.name] = 1;\n                    });\n                });\n            }\n        }]);\n\n        return VoteReport;\n    }();\n\n    app.VoteReport = VoteReport;\n    VoteReport.$inject = ['$log', '$scope', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('VoteReport', VoteReport);\n})(app || (app = {}));\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    var WhereUFindUsAdmin = function () {\n        WhereUFindUsAdmin.$inject = [\"$ionicPopup\", \"$log\", \"$scope\", \"$state\", \"$ionicModal\", \"AppService\", \"AppUtil\"];\n        function WhereUFindUsAdmin($ionicPopup, $log, $scope, $state, $ionicModal, AppService, AppUtil) {\n            var _this2 = this;\n\n            _classCallCheck(this, WhereUFindUsAdmin);\n\n            this.$ionicPopup = $ionicPopup;\n            this.$log = $log;\n            this.$scope = $scope;\n            this.$state = $state;\n            this.$ionicModal = $ionicModal;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.modalText = \"New \";\n            this.submitted = false;\n            $scope.$on('$ionicView.beforeEnter', function () {\n                return _this2.refresh();\n            });\n            // // Cleanup the modal when we're done with it\n            $scope.$on('$destroy', function () {\n                return _this2.findUsModal.remove();\n            });\n            $ionicModal.fromTemplateUrl('templates/modal.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function (modal) {\n                return _this2.findUsModal = modal;\n            });\n        }\n\n        _createClass(WhereUFindUsAdmin, [{\n            key: 'refresh',\n            value: function refresh() {\n                var _this3 = this;\n\n                this.AppUtil.blockingCall(this.AppService.getFindUs(), function (items) {\n                    _this3.$log.log('loaded ' + items.length + ' items');\n                    _this3.findUsGroup = items;\n                });\n            }\n        }, {\n            key: 'addFindUs',\n            value: function addFindUs(form) {\n                var _this4 = this;\n\n                this.submitted = true;\n                if (form.$valid) {\n                    this.AppUtil.blockingCall(this.AppService.addFindUs(this.findUs), function () {\n                        _this4.modalText = \"New \";\n                        _this4.findUs = null;\n                        _this4.AppUtil.toastSimple(\"Saved Successfully\");\n                        _this4.refresh();\n                    });\n                    setTimeout(this.resetForm(form), 1000);\n                }\n            }\n        }, {\n            key: 'editFindUs',\n            value: function editFindUs(question) {\n                this.modalText = \"Update \";\n                this.findUs = question.toJSON();\n                this.findUsModal.show();\n            }\n        }, {\n            key: 'deleteFindUs',\n            value: function deleteFindUs(id) {\n                this.$log.log('Delete find us name ' + id);\n                var _this = this;\n                this.$ionicPopup.confirm({\n                    title: 'Delete',\n                    template: 'Are you sure you want to delete this item?'\n                }).then(function (res) {\n                    if (res) _this.deleteQ(id);\n                });\n            }\n        }, {\n            key: 'deleteQ',\n            value: function deleteQ(id) {\n                var _this5 = this;\n\n                this.AppUtil.blockingCall(this.AppService.delFindUs(id), function () {\n                    _this5.AppUtil.toastSimple(\"Deleted Successfully\");\n                    _this5.refresh();\n                });\n            }\n        }, {\n            key: 'close',\n            value: function close() {\n                this.modalText = \"New \";\n                this.findUs = null;\n                this.findUsModal.hide();\n            }\n        }, {\n            key: 'resetForm',\n            value: function resetForm(form) {\n                this.findUs = null;\n                this.findUsModal.hide();\n                form.$setPristine();\n                form.$setUntouched();\n            }\n        }]);\n\n        return WhereUFindUsAdmin;\n    }();\n\n    app.WhereUFindUsAdmin = WhereUFindUsAdmin;\n    WhereUFindUsAdmin.$inject = ['$ionicPopup', '$log', '$scope', '$state', '$ionicModal', 'AppService', 'AppUtil'];\n    angular.module('controllers').controller('WhereUFindUsAdmin', WhereUFindUsAdmin);\n})(app || (app = {}));\n'use strict';\n\n/**\n * Displays the appropriate profile image for a chat.\n * If there are two people in a chat, then always display the other person\n * If multiple people show the image of the last person who messaged, excluding the current user.\n * If no messages yet, then the person who last joined the chat\n */\nangular.module('ionicApp').directive('chatProfileImage', [\"AppService\", function (AppService) {\n    return {\n        restrict: 'E',\n        scope: {\n            chat: '='\n        },\n        template: '<img ng-src=\"{{::photoUrl}}\" img-cache>',\n        replace: true,\n        controller: [\"$scope\", function controller($scope) {\n            var chat = $scope.chat;\n            // TODO\n        }]\n    };\n}]);\n'use strict';\n\n/**\n * A directive to display an unread count badge\n */\nangular.module('ionicApp').directive('unreadChatsBadge', [\"AppService\", function (AppService) {\n    return {\n        restrict: 'E',\n        scope: {},\n        template: '<span ng-show=\"unreadChats > 0\" class=\"badge badge-assertive nav-icon-badge\">{{unreadCount}}</span>',\n        replace: true,\n        controller: [\"$scope\", function controller($scope) {\n            $scope.unreadCount = AppService.getUnreadChatsCount();\n            $scope.$on('unreadChatsCountUpdated', function () {\n                return $scope.unreadCount = AppService.getUnreadChatsCount();\n            });\n        }]\n    };\n}]);\n'use strict';\n\n/**\n * Display the facebook information for the currenly logged in user\n */\nangular.module('ionicApp').directive('facebookDetails', [\"AppService\", \"$rootScope\", \"$cordovaFacebook\", function (AppService, $rootScope, $cordovaFacebook) {\n    return {\n        restrict: 'E',\n        scope: {},\n        templateUrl: 'facebook/facebook-details.html',\n        controller: [\"$scope\", function controller($scope) {\n            if ($rootScope.facebookConnected) {\n                // Load the cached values first for quick update on the UI\n                var likes = localStorage.getItem('facebookLikes');\n                if (likes) $scope.likes = JSON.parse(likes);\n                var friends = localStorage.getItem('facebookFriends');\n                if (friends) $scope.friends = JSON.parse(friends);\n                // Update asynchronously\n                // Only friends registered with your app will be returned\n                // See http://stackoverflow.com/questions/23417356/facebook-graph-api-v2-0-me-friends-returns-empty-or-only-friends-who-also-u\n                $cordovaFacebook.api('/me/friends').then(function (result) {\n                    $scope.friends = result.data;\n                    localStorage.setItem('facebookFriends', JSON.stringify(result.data));\n                    $cordovaFacebook.api('/me/likes').then(function (result) {\n                        $scope.likes = result.data;\n                        localStorage.setItem('facebookLikes', JSON.stringify(result.data));\n                    });\n                });\n            }\n        }]\n    };\n}]);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    var SearchProfileView = function () {\n        SearchProfileView.$inject = [\"$log\", \"$scope\", \"$stateParams\", \"$ionicHistory\", \"$ionicActionSheet\", \"AppUtil\", \"AppService\", \"$translate\"];\n        function SearchProfileView($log, $scope, $stateParams, $ionicHistory, $ionicActionSheet, AppUtil, AppService, $translate) {\n            var _this = this;\n\n            _classCallCheck(this, SearchProfileView);\n\n            this.$log = $log;\n            this.$scope = $scope;\n            this.$stateParams = $stateParams;\n            this.$ionicHistory = $ionicHistory;\n            this.$ionicActionSheet = $ionicActionSheet;\n            this.AppUtil = AppUtil;\n            this.AppService = AppService;\n            this.$translate = $translate;\n            $translate(['REQUEST_FAILED', 'REPORT', 'INAPPROPRIATE_CONTENT', 'CANCEL']).then(function (translationsResult) {\n                _this.translations = translationsResult;\n            });\n            $scope.$on('$ionicView.beforeEnter', function (event, data) {\n                return _this.ionViewWillEnter();\n            });\n        }\n\n        _createClass(SearchProfileView, [{\n            key: 'ionViewWillEnter',\n            value: function ionViewWillEnter() {\n                var _this2 = this;\n\n                this.profile = this.$stateParams['profile'];\n                this.$scope['profile'] = this.profile;\n                this.AppService.getProfileOfSelectedUser(this.profile.objectId).then(function (profilePointer) {\n                    _this2.profilePointer = profilePointer;\n                });\n            }\n        }, {\n            key: 'like',\n            value: function like() {\n                var match = this.AppService.getProfileSearchResults().pop();\n                this.AppService.processMatch(match, true);\n                this.$ionicHistory.goBack();\n            }\n        }, {\n            key: 'reject',\n            value: function reject() {\n                var match = this.AppService.getProfileSearchResults().pop();\n                this.AppService.processMatch(match, false);\n                this.$ionicHistory.goBack();\n            }\n        }, {\n            key: 'profileOptions',\n            value: function profileOptions() {\n                var _this3 = this;\n\n                this.$ionicActionSheet.show({\n                    destructiveText: this.translations.REPORT,\n                    titleText: this.translations.INAPPROPRIATE_CONTENT,\n                    cancelText: this.translations.CANCEL,\n                    cancel: function cancel() {},\n                    destructiveButtonClicked: function destructiveButtonClicked(index) {\n                        _this3.report();\n                        return true;\n                    }\n                });\n            }\n        }, {\n            key: 'report',\n            value: function report() {\n                var _this4 = this;\n\n                var profile = this.AppService.getProfileSearchResults().pop();\n                this.AppUtil.blockingCall(this.AppService.reportProfile('inappropriate profile content', this.profilePointer, null), function () {\n                    _this4.AppService.processMatch(profile, false);\n                    _this4.$ionicHistory.goBack();\n                });\n            }\n        }]);\n\n        return SearchProfileView;\n    }();\n\n    SearchProfileView.$inject = ['$log', '$scope', '$stateParams', '$ionicHistory', '$ionicActionSheet', 'AppUtil', 'AppService', '$translate'];\n    app.SearchProfileView = SearchProfileView;\n    angular.module('ionicApp').controller('SearchProfileView', SearchProfileView);\n})(app || (app = {}));\n'use strict';\n\n/**\n * Filter which displays the age for a profile\n */\nangular.module('ionicApp').filter('profileAge', function () {\n    return function (profile) {\n        // Profiles from other users will have the age\n        if (profile.age) return profile.age;\n        // The profile for the current user will have the birthdate\n        if (profile.birthdate) return new Date(new Date() - profile.birthdate).getFullYear() - 1970;\n        return '';\n    };\n});\n'use strict';\n\n/**\n * A directive to display the main details of a profile\n */\nangular.module('ionicApp').directive('profileDetails', [\"AppService\", function (AppService) {\n    return {\n        restrict: 'E',\n        scope: {\n            profile: '='\n        },\n        templateUrl: 'profile/profile-details.html',\n        controller: [\"$scope\", function controller($scope) {\n            var currentUserProfile = AppService.getProfile();\n            var myLocation = currentUserProfile.location;\n            var profile = $scope.profile;\n            //address and flags\n            if (profile.location._latitude && profile.location._longitude) {\n                var geocodingAPI = \"http://maps.googleapis.com/maps/api/geocode/json?latlng=\" + profile.location._latitude + \",\" + profile.location._longitude + \"&sensor=false&language=en\";\n                var num = void 0;\n                fetch(geocodingAPI).then(function (res) {\n                    return res.json();\n                }).then(function (out) {\n                    profile.address = out['results'][0].formatted_address;\n                    if (out['results'][6]) num = 6;else if (out['results'][5]) num = 5;else if (out['results'][4]) num = 4;\n                    profile.country = out['results'][num].formatted_address;\n                }).catch(function (err) {\n                    return console.error(err);\n                });\n            }\n            // Calculate the distance between this profile location and the current users profile location\n            if (myLocation && profile.location) {\n                var distance = GeoUtils.getDistanceFromLatLonInKm(profile.location.latitude, profile.location.longitude, myLocation.latitude, myLocation.longitude);\n                if (currentUserProfile.distanceType === 'mi') distance *= 0.621371;\n                var distanceString = distance.toFixed(0);\n                // Show 1km/1m as a minimum‰\n                $scope.distance = (distanceString === '0' ? 1 : distanceString) + currentUserProfile.distanceType;\n            }\n            $scope.isCurrentUser = profile.id === currentUserProfile.id;\n        }]\n    };\n}]);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    var ProfilePhoto = function ProfilePhoto(file) {\n        _classCallCheck(this, ProfilePhoto);\n\n        this.file = file;\n        this.selected = false;\n    };\n    /**\n     * Controller for editing the users profile\n     */\n\n\n    var ProfileEdit = function () {\n        ProfileEdit.$inject = [\"$log\", \"$rootScope\", \"$scope\", \"$q\", \"$state\", \"$ionicActionSheet\", \"$cordovaCamera\", \"AppService\", \"AppUtil\", \"$translate\", \"$ionicHistory\", \"$ionicPopup\"];\n        function ProfileEdit($log, $rootScope, $scope, $q, $state, $ionicActionSheet, $cordovaCamera, AppService, AppUtil, $translate, $ionicHistory, $ionicPopup) {\n            var _this = this;\n\n            _classCallCheck(this, ProfileEdit);\n\n            // If you increase MAX_PHOTOS you will need to update LocalDB to have more photoN columns in the local SQL db\n            this.MAX_PHOTOS = 3;\n            this.NO_IMAGE = 'img/add.png';\n            this.photos = [];\n            this.photosInReview = [];\n            this.$log = $log;\n            this.$rootScope = $rootScope;\n            this.$scope = $scope;\n            this.$q = $q;\n            this.$state = $state;\n            this.$ionicActionSheet = $ionicActionSheet;\n            this.$cordovaCamera = $cordovaCamera;\n            this.AppService = AppService;\n            this.AppUtil = AppUtil;\n            this.$translate = $translate;\n            this.$ionicHistory = $ionicHistory;\n            this.$ionicPopup = $ionicPopup;\n            this.$scope.options = {\n                onlyExternal: true,\n                speed: 700\n            };\n            this.$scope.$on('$ionicView.beforeEnter', function () {\n                return _this.refresh();\n            });\n            this.$scope.$on('$ionicView.enter', function () {\n                return _this.expandText();\n            });\n            this.$scope.$on(\"$ionicSlides.sliderInitialized\", function (event, data) {\n                // data.slider is the instance of Swiper\n                $scope.slider = data.slider;\n            });\n            this.$scope.$on(\"$ionicSlides.slideChangeStart\", function (event, data) {\n                console.log('Slide change is beginning');\n            });\n        }\n\n        _createClass(ProfileEdit, [{\n            key: 'refresh',\n            value: function refresh() {\n                this.profile = this.AppService.getProfile();\n                this.about = this.profile.about;\n                this.personCategory = this.profile.personCategory;\n                this.personType = this.profile.personType;\n                this.personSperm = this.profile.personSperm;\n                this.personEgg = this.profile.personEgg;\n                this.personWomb = this.profile.personWomb;\n                this.personEmbryo = this.profile.personEmbryo;\n                this.personHelpLevel = this.profile.personHelpLevel;\n                this.photos = _.map(this.profile.photos, function (photo) {\n                    return new ProfilePhoto(photo);\n                });\n                this.photosInReview = this.profile.photosInReview ? _.map(this.profile.photosInReview, function (photo) {\n                    return new ProfilePhoto(photo);\n                }) : [];\n                this.onRedirectToEditProfile(false);\n            }\n        }, {\n            key: 'selectedCount',\n            value: function selectedCount() {\n                return _.filter(this.photos, function (photo) {\n                    return photo.selected;\n                }).length;\n            }\n        }, {\n            key: 'canAddPhoto',\n            value: function canAddPhoto() {\n                return this.photos.length + this.photosInReview.length < this.MAX_PHOTOS;\n            }\n            /**\n             * @returns {boolean} if any of the photos or photos in review are selected\n             */\n\n        }, {\n            key: 'canDeletePhotos',\n            value: function canDeletePhotos() {\n                return _.filter(this.photos, function (photo) {\n                    return photo.selected;\n                }).length + _.filter(this.photosInReview, function (photo) {\n                    return photo.selected;\n                }).length > 0;\n            }\n            /**\n             * Deletes the selected photos from the profile\n             */\n\n        }, {\n            key: 'deletePhotos',\n            value: function deletePhotos() {\n                var _this2 = this;\n\n                var profileUpdate = {};\n                // Extract the unselected photos and update the profile with those\n                var remainingPhotos = _.filter(this.photos, function (photo) {\n                    return !photo.selected;\n                });\n                profileUpdate.photos = _.map(remainingPhotos, function (photo) {\n                    return photo.file;\n                });\n                var remainingInReviewPhotos = _.filter(this.photosInReview, function (photo) {\n                    return !photo.selected;\n                });\n                profileUpdate.photosInReview = _.map(remainingInReviewPhotos, function (photo) {\n                    return photo.file;\n                });\n                this.AppUtil.blockingCall(this.AppService.saveProfile(profileUpdate), function () {\n                    return _this2.refresh();\n                });\n            }\n            /**\n             * Swaps the position of the selected photos. This should only be called when there is two selected.\n             */\n\n        }, {\n            key: 'swapPhotos',\n            value: function swapPhotos() {\n                var _this3 = this;\n\n                // Find the indexes of the two selected photos\n                var first = _.findIndex(this.photos, function (photo) {\n                    return photo.selected;\n                });\n                var last = _.findLastIndex(this.photos, function (photo) {\n                    return photo.selected;\n                });\n                var profileUpdate = {};\n                this.swapArrayElements(this.photos, first, last);\n                profileUpdate.photos = _.map(this.photos, function (photo) {\n                    return photo.file;\n                });\n                this.AppUtil.blockingCall(this.AppService.saveProfile(profileUpdate), function () {\n                    return _this3.refresh();\n                });\n            }\n            /**\n             * Toggle the selected state of a photo\n             * @param index the photos array index\n             */\n\n        }, {\n            key: 'toggleSelected',\n            value: function toggleSelected(photo) {\n                photo.selected = !photo.selected;\n            }\n            /**\n             * Add a profile photo\n             */\n\n        }, {\n            key: 'addPhoto',\n            value: function addPhoto() {\n                var _this4 = this;\n\n                var buttons = [{ text: this.$translate.instant('TAKE_PHOTO') }, { text: this.$translate.instant('GALLERY') }];\n                if (this.$rootScope.facebookConnected) buttons.push({ text: 'Facebook' });\n                this.$ionicActionSheet.show({\n                    buttons: buttons,\n                    titleText: this.$translate.instant('SELECT_PHOTO_SOURCE'),\n                    cancelText: this.$translate.instant('CANCEL'),\n                    buttonClicked: function buttonClicked(index) {\n                        if (index === 2) {\n                            _this4.$state.go('^.fb-albums');\n                        } else {\n                            if (!ionic.Platform.isWebView()) {\n                                // TODO implement file upload for normal browsers\n                                return true;\n                            }\n                            var sourceType = index === 0 ? Camera.PictureSourceType.CAMERA : Camera.PictureSourceType.PHOTOLIBRARY;\n                            var options = {\n                                quality: 70,\n                                destinationType: Camera.DestinationType.DATA_URL,\n                                sourceType: sourceType,\n                                allowEdit: false,\n                                // support it, so just use JavaScript cropping for now\n                                encodingType: Camera.EncodingType.PNG,\n                                targetWidth: 800,\n                                targetHeight: 800,\n                                // popoverOptions: new CameraPopoverOptions(300, 300, 200, 200, Camera.PopoverArrowDirection.ARROW_ANY),\n                                saveToPhotoAlbum: false\n                            };\n                            _this4.$cordovaCamera.getPicture(options).then(function (imageData) {\n                                // TODO don't use root scope - pass as param\n                                var dataUrl = 'data:image/jpeg;base64,' + imageData;\n                                _this4.$rootScope.cropPhoto = dataUrl;\n                                _this4.$state.go('^.crop'); // , {imageData: 'data:image/jpeg;base64,' + imageData}\n                            }, function (error) {\n                                if (error === 'has no access to assets') {\n                                    _this4.AppUtil.toastSimple('Access to photo gallery denied');\n                                    _this4.$log.error('$cordovaCamera.getPicture error ' + JSON.stringify(error));\n                                } else {\n                                    _this4.AppUtil.toastSimpleTranslate('PHOTO_ERROR');\n                                    _this4.$log.error('$cordovaCamera.getPicture error ' + JSON.stringify(error));\n                                }\n                            });\n                        }\n                        return true;\n                    }\n                });\n            }\n        }, {\n            key: 'expandText',\n            value: function expandText() {\n                var element = document.querySelector('#aboutYou');\n                element.style.height = element.scrollHeight + 'px';\n            }\n            /**\n             * Swap the elements in an array at indexes x and y.\n             *\n             * @param (array) The array.\n             * @param (a) The index of the first element to swap.\n             * @param (b) The index of the second element to swap.\n             */\n\n        }, {\n            key: 'swapArrayElements',\n            value: function swapArrayElements(array, a, b) {\n                var temp = array[a];\n                array[a] = array[b];\n                array[b] = temp;\n            }\n        }, {\n            key: 'saveProfile',\n            value: function saveProfile() {\n                var _this5 = this;\n\n                var profileUpdate = {};\n                profileUpdate.about = this.about;\n                profileUpdate.personCategory = this.personCategory ? this.personCategory : '0';\n                profileUpdate.hasSelfId = true;\n                if (this.personCategory === '3') {\n                    profileUpdate.personType = '0';\n                    profileUpdate.personSperm = false;\n                    profileUpdate.personEgg = false;\n                    profileUpdate.personWomb = false;\n                    profileUpdate.personEmbryo = false;\n                    profileUpdate.personHelpLevel = '0';\n                } else {\n                    profileUpdate.personType = this.personType ? this.personType : '0';\n                    profileUpdate.personSperm = this.personSperm ? this.personSperm : false;\n                    profileUpdate.personEgg = this.personEgg ? this.personEgg : false;\n                    profileUpdate.personWomb = this.personWomb ? this.personWomb : false;\n                    profileUpdate.personEmbryo = this.personEmbryo ? this.personEmbryo : false;\n                    profileUpdate.personHelpLevel = this.personHelpLevel ? this.personHelpLevel : '0';\n                }\n                var thingsIHave = \"\";\n                if (profileUpdate.personSperm) thingsIHave += \"S\";\n                if (profileUpdate.personEgg) thingsIHave += \"E\";\n                if (profileUpdate.personWomb) thingsIHave += \"W\";\n                if (profileUpdate.personEmbryo) thingsIHave += \"Y\";\n                if (this.personCategory !== '3' && !profileUpdate.personSperm && !profileUpdate.personEgg && !profileUpdate.personWomb && !profileUpdate.personEmbryo) thingsIHave += \"X\";\n                profileUpdate.thingsIHave = thingsIHave;\n                // if (this.about)\n                this.AppUtil.blockingCall(this.AppService.saveProfile(profileUpdate), function () {\n                    _this5.refresh();\n                    _this5.$ionicHistory.nextViewOptions({\n                        historyRoot: false,\n                        disableBack: true\n                    });\n                    if (_this5.profile.about) {\n                        _this5.$state.go('menu.profile');\n                    }\n                });\n                // else\n                // \tthis.onRedirectToEditProfile(true);\n            }\n            /**\n             * Custom go back\n             */\n\n        }, {\n            key: 'myGoBack',\n            value: function myGoBack() {\n                // if (this.profile.about)\n                this.$ionicHistory.goBack();\n                // else\n                // \tthis.onRedirectToEditProfile(false);\n            }\n        }, {\n            key: 'onRedirectToEditProfile',\n            value: function onRedirectToEditProfile(forceShow) {\n                if (!this.profile.about || forceShow) {\n                    var alertPopup = this.$ionicPopup.alert({\n                        title: 'We need more information',\n                        cssClass: 'center',\n                        template: 'Your \"About Me\" section is empty.</br> Everyone is looking for someone with a compatible vision. A deep description adds value to the community, tell us about you.'\n                    });\n                }\n            }\n        }, {\n            key: 'onClickBadgeInfo',\n            value: function onClickBadgeInfo() {\n                var alertPopup = this.$ionicPopup.alert({\n                    title: 'Self Identification Badges',\n                    templateUrl: 'badgeInfo.html',\n                    buttons: [{\n                        text: 'Ok',\n                        type: 'button-assertive'\n                    }]\n                });\n            }\n        }]);\n\n        return ProfileEdit;\n    }();\n\n    app.ProfileEdit = ProfileEdit;\n    ProfileEdit.$inject = ['$log', '$rootScope', '$scope', '$q', '$state', '$ionicActionSheet', '$cordovaCamera', 'AppService', 'AppUtil', '$translate', '$ionicHistory', '$ionicPopup'];\n    angular.module('controllers').controller('ProfileEdit', ProfileEdit);\n})(app || (app = {}));\n'use strict';\n\n/**\n * Filter which encapsulates calculating the image URL for a profile\n */\nangular.module('ionicApp').filter('profileImageUrl', function () {\n    return function (profile) {\n        if (!profile) return '';\n        if (profile.photos && profile.photos.length) {\n            var photo = profile.photos[0];\n            // The Parse JSON format converts the the url() functions to the _url field\n            if (photo['_url']) return photo['_url'];\n            if (angular.isFunction(photo.url)) return photo.url();\n            if (angular.isString(photo.url)) {\n                var url = photo['url'];\n                return url;\n            }\n        }\n        return 'img/generic_avatar.jpg';\n    };\n});\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Controller for viewing the current users profile\n     */\n    var ProfileViewCurrentUser = function () {\n        ProfileViewCurrentUser.$inject = [\"$rootScope\", \"$scope\", \"$state\", \"AppService\"];\n        function ProfileViewCurrentUser($rootScope, $scope, $state, AppService) {\n            var _this = this;\n\n            _classCallCheck(this, ProfileViewCurrentUser);\n\n            this.$rootScope = $rootScope;\n            this.$scope = $scope;\n            this.$state = $state;\n            this.AppService = AppService;\n            $scope.$on('$ionicView.beforeEnter', function () {\n                return _this.ionViewWillEnter();\n            });\n        }\n\n        _createClass(ProfileViewCurrentUser, [{\n            key: 'ionViewWillEnter',\n            value: function ionViewWillEnter() {\n                this.profile = this.AppService.getProfile();\n                this.$scope['profile'] = this.profile;\n            }\n        }]);\n\n        return ProfileViewCurrentUser;\n    }();\n\n    app.ProfileViewCurrentUser = ProfileViewCurrentUser;\n    ProfileViewCurrentUser.$inject = ['$rootScope', '$scope', '$state', 'AppService'];\n    angular.module('ionicApp').controller('ProfileViewCurrentUser', ProfileViewCurrentUser);\n})(app || (app = {}));\n'use strict';\n\n/**\n * Filter which returns the URL for a File object\n */\nangular.module('ionicApp').filter('fileUrl', function () {\n    return function (file) {\n        if (!file) return null;\n        if (file._url) return file._url;\n        if (angular.isFunction(file.url)) return file.url();\n        if (angular.isString(file.url)) return file['url'];\n        throw 'unknown file ' + JSON.stringify(file);\n    };\n});\n'use strict';\n\n/**\n * Filters which contain app specific functionality\n *\n */\nangular.module('ionicApp').filter('distance', ['AppService', function (AppService) {\n    /**\n     * Takes a ILocation and outputs the distance from the current users profile location\n     */\n    return function (location) {\n        if (!location || !angular.isNumber(location.latitude) || !angular.isNumber(location.longitude)) return '';\n        var userProfile = AppService.getProfile();\n        var from = userProfile.location;\n        var to = location;\n        var distance = getDistanceFromLatLonInKm(from.latitude, from.longitude, to.latitude, to.longitude);\n        if (userProfile.distanceType === 'mi') distance *= 0.621371;\n        var output = distance.toFixed(0);\n        // Always say at least 1km even if less than that\n        output = output === '0' ? '1' : output;\n        output += userProfile.distanceType;\n        return output;\n        // from http://stackoverflow.com/questions/27928/how-do-i-calculate-distance-between-two-latitude-longitude-points\n        function getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {\n            var R = 6371; // Radius of the earth in km\n            var dLat = deg2rad(lat2 - lat1);\n            var dLon = deg2rad(lon2 - lon1);\n            var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n            var d = R * c; // Distance in km\n            return d;\n        }\n        function deg2rad(deg) {\n            return deg * (Math.PI / 180);\n        }\n    };\n}]);\n'use strict';\n\nangular.module('ionicApp').config(['$provide', 'serverUrl', function ($provide, serverUrl, parseAppId) {\n    if (!serverUrl) {\n        console.error('ERROR: serverUrl config value not configured for logging');\n        return;\n    }\n    // The static part of the HTTP POST data\n    var staticData = void 0;\n    var appService = void 0;\n    $provide.decorator('$log', ['$delegate', '$injector', function ($delegate, $injector) {\n        var debugFn = $delegate.debug;\n        var infoFn = $delegate.info;\n        var logFn = $delegate.log;\n        var warnFn = $delegate.warn;\n        var errorFn = $delegate.error;\n        var appService;\n        var MAX_RECENT = 30;\n        var MIN_TIME_DELAY = 10 * 1000;\n        var recent = [];\n        var lastError = '';\n        var lastSubmitTime = 0;\n        // Update the list of recent $log messages\n        function updateRecent(args) {\n            try {\n                if (args[0]) {\n                    recent.unshift(args[0]);\n                    if (recent.length > MAX_RECENT) recent.pop();\n                }\n            } catch (e) {}\n        }\n        $delegate.debug = function () {\n            var args = [].slice.call(arguments);\n            debugFn.apply(null, args);\n            updateRecent(args);\n        };\n        $delegate.info = function () {\n            var args = [].slice.call(arguments);\n            infoFn.apply(null, args);\n            updateRecent(args);\n        };\n        $delegate.log = function () {\n            var args = [].slice.call(arguments);\n            logFn.apply(null, args);\n            updateRecent(args);\n        };\n        $delegate.warn = function () {\n            var args = [].slice.call(arguments);\n            warnFn.apply(null, args);\n            updateRecent(args);\n        };\n        $delegate.error = function () {\n            var args = [].slice.call(arguments);\n            errorFn.apply(null, args);\n            try {\n                if (!staticData) {\n                    // Need to do this here when the platform is ready and the version has been set in the root scope\n                    var $rootScope = $injector.get('$rootScope');\n                    staticData = '&appVersion=' + $rootScope.appVersion + '&platform=' + encodeURIComponent(ionic.Platform.platform()) + '&platformVersion=' + encodeURIComponent('' + ionic.Platform.version());\n                    appService = $injector.get('AppService');\n                }\n                var userId = appService.userId;\n                var errorMessage = args[0] || '';\n                if (errorMessage !== lastError && Date.now() > lastSubmitTime + MIN_TIME_DELAY) {\n                    var xmlHttp = new XMLHttpRequest();\n                    xmlHttp.open('POST', serverUrl + '/client-log', true);\n                    xmlHttp.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n                    xmlHttp.setRequestHeader('X-Parse-Application-Id', parseAppId);\n                    var data = 'userId=' + encodeURIComponent(userId) + '&message=' + encodeURIComponent(errorMessage) + '&recent=' + encodeURIComponent(JSON.stringify(recent)) + staticData;\n                    lastError = errorMessage;\n                    lastSubmitTime = Date.now();\n                    xmlHttp.send(data);\n                }\n            } catch (e) {\n                console.log('Error submitting error log to server:' + e);\n            }\n            updateRecent(args);\n        };\n        return $delegate;\n    }]);\n}]);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Methods for authentication with social sites\n     */\n    var SocialAuth = function () {\n        function SocialAuth($q, $log, $http, $translate) {\n            _classCallCheck(this, SocialAuth);\n\n            this.$q = $q;\n            this.$log = $log;\n            this.$http = $http;\n            this.$translate = $translate;\n            // $translate(['REQUEST_FAILED']).then(translationsResult => this.translations = translationsResult)\n        }\n        /*\n         * Modified from https://github.com/driftyco/ng-cordova/blob/master/src/plugins/oauth.js\n         *\n         * Sign into the LinkedIn service\n         * https://developer.linkedin.com/docs/oauth2\n         *\n         * @param    string clientId\n         * @param    string clientSecret\n         * @param    array appScope - the permission scope to authorise. For example r_basicprofile, r_emailaddress\n         * @param    string state - A random string to test again CSRS attacks\n         * @return   promise - Resolves to the authentication data\n         */\n\n\n        _createClass(SocialAuth, [{\n            key: 'linkedIn',\n            value: function linkedIn(clientId, clientSecret, appScope, state) {\n                var _this = this;\n\n                var deferred = this.$q.defer();\n                if (window.cordova) {\n                    var cordovaMetadata = cordova.require('cordova/plugin_list').metadata;\n                    if (cordovaMetadata.hasOwnProperty('cordova-plugin-inappbrowser') === true || cordovaMetadata.hasOwnProperty('org.apache.cordova.inappbrowser') === true) {\n                        var browserRef = window.open('https://www.linkedin.com/uas/oauth2/authorization?client_id=' + clientId + '&redirect_uri=http://localhost/callback&scope=' + appScope.join(' ') + '&response_type=code&state=' + state, '_blank', 'location=no,clearsessioncache=yes,clearcache=yes');\n                        browserRef.addEventListener('loadstart', function (event) {\n                            if (event.url.indexOf('http://localhost/callback') === 0) {\n                                var requestToken = event.url.split('code=')[1];\n                                _this.$http.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n                                _this.$http({ method: 'post', url: 'https://www.linkedin.com/uas/oauth2/accessToken',\n                                    data: 'client_id=' + clientId + '&client_secret=' + clientSecret + '&redirect_uri=http://localhost/callback' + '&grant_type=authorization_code' + '&code=' + requestToken }).success(function (data) {\n                                    deferred.resolve(data);\n                                }).error(function (data, status) {\n                                    deferred.reject('Problem authenticating LinkedIn ' + JSON.stringify(data) + ' ' + JSON.stringify(status));\n                                }).finally(function () {\n                                    setTimeout(function () {\n                                        browserRef.close();\n                                    }, 10);\n                                });\n                            }\n                        });\n                        browserRef.addEventListener('exit', function (event) {\n                            deferred.reject('The LinkedIn sign in flow was canceled');\n                        });\n                    } else {\n                        deferred.reject('LinkedIn auth: Could not find InAppBrowser plugin');\n                    }\n                } else {\n                    deferred.reject('Cannot authenticate LinkedIn via a web browser');\n                }\n                return deferred.promise;\n            }\n        }], [{\n            key: 'socialAuthFactory',\n            value: function socialAuthFactory($q, $log, $http, $tanslate) {\n                return new SocialAuth($q, $log, $http, $tanslate);\n            }\n        }]);\n\n        return SocialAuth;\n    }();\n\n    app.SocialAuth = SocialAuth;\n    SocialAuth.socialAuthFactory.$inject = ['$q', '$log', '$http', '$translate'];\n    angular.module('SocialAuth', ['pascalprecht.translate']).factory('SocialAuth', SocialAuth.socialAuthFactory);\n})(app || (app = {}));\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    /**\n     * Utilities which simplify common actions and abstracts the implementation so it easier to make application wide\n     * changes to blocking calls, toasts etc\n     */\n    var AppUtil = function () {\n        function AppUtil($q, $ionicLoading, ionicToast, $translate, $log) {\n            var _this = this;\n\n            _classCallCheck(this, AppUtil);\n\n            this.$q = $q;\n            this.$ionicLoading = $ionicLoading;\n            this.ionicToast = ionicToast;\n            this.$log = $log;\n            this.$translate = $translate;\n            $translate(['REQUEST_FAILED']).then(function (translationsResult) {\n                return _this.translations = translationsResult;\n            });\n        }\n        /**\n         * Shows a toast message\n         * @param message\n         */\n\n\n        _createClass(AppUtil, [{\n            key: 'toastSimple',\n            value: function toastSimple(message) {\n                this.ionicToast.show(message, 'bottom', false, 3000);\n            }\n            /**\n             * Shows a toast message\n             * @param translateKey the key used to lookup the translated message\n             */\n\n        }, {\n            key: 'toastSimpleTranslate',\n            value: function toastSimpleTranslate(translateKey) {\n                var _this2 = this;\n\n                this.$translate([translateKey]).then(function (result) {\n                    var translation = result[translateKey];\n                    if (translation === translateKey) _this2.$log.warn('Invalid translation key ' + translateKey);\n                    _this2.toastSimple(translation);\n                }, function (error) {\n                    return _this2.$log.warn('toast translation error ' + JSON.stringify(error));\n                });\n            }\n            /**\n             * A utility to simplify the common case of making a server call which blocks the user interface, and provides\n             * translation of errors.\n             *\n             * This is an example of how you might use it:\n             * function setLocation = () => AppUtil.blockingCall(\n             *        AppService.saveLocation(newLocation),\n             *        (result) => {marker.setLocation(result); AppUtil.toastSimple('LOCATION_UPDATED')}\n             *        )\n             *\n             * @param promise the promise to resolve\n             * @param successFunction the function to call on resolution of the promise\n             * @param errorTranslateKey the translation key to display an error message for on error\n             * @param errorMessage if no translation key is provided, then displays this error message on an error\n             * @returns {ng.IPromise<any>} the promise passed in as the first argument\n             */\n\n        }, {\n            key: 'blockingCall',\n            value: function blockingCall(promise, successFunction, errorTranslateKey, errorMessage) {\n                var _this3 = this;\n\n                var ionicLoading = this.$ionicLoading;\n                // Delay showing the loading spinner for 0.4s\n                // See http://yuiblog.com/blog/2010/11/11/improving-perceived-site-performance-with-spinners/\n                ionicLoading.show({ templateUrl: 'loading.html', delay: 400 });\n                promise.then(function (result) {\n                    ionicLoading.hide();\n                    if (successFunction) successFunction(result);\n                }, function (error) {\n                    ionicLoading.hide();\n                    var customError = _this3.resolveErrorMessage(error);\n                    if (customError) {\n                        _this3.toastSimple(customError);\n                    } else if (errorTranslateKey) {\n                        _this3.toastSimpleTranslate(errorMessage);\n                    } else if (errorMessage) {\n                        _this3.toastSimple(errorMessage);\n                    } else {\n                        _this3.toastSimple(_this3.translations['REQUEST_FAILED']);\n                    }\n                    _this3.$log.error('Error in blocking call ' + JSON.stringify(error));\n                });\n                return promise;\n            }\n            /**\n             * Converts an error into a human friendly message for particular error messages\n             * @param error\n             * @returns {string} if there is a custom error message, else null\n             */\n\n        }, {\n            key: 'resolveErrorMessage',\n            value: function resolveErrorMessage(error) {\n                this.$log.error(JSON.stringify(error));\n                if (error.code) {\n                    // https://parse.com/docs/js/api/symbols/Parse.Error.html\n                    switch (error.code) {\n                        case 100:\n                            return 'Request failed, try again';\n                        case 155:\n                            return 'Server busy, try again later';\n                        case 209:\n                            // TODO force logout/login\n                            return 'Invalid session. Log in again';\n                        default:\n                            return null;\n                    }\n                }\n                return null;\n            }\n        }], [{\n            key: 'appUtilFactory',\n            value: function appUtilFactory($q, $ionicLoading, ionicToast, $translate, $log) {\n                return new AppUtil($q, $ionicLoading, ionicToast, $translate, $log);\n            }\n        }]);\n\n        return AppUtil;\n    }();\n\n    app.AppUtil = AppUtil;\n    AppUtil.appUtilFactory.$inject = ['$q', '$ionicLoading', 'ionicToast', '$translate', '$log'];\n    angular.module('AppUtil', ['ionic', 'pascalprecht.translate', 'ionic-toast']).factory('AppUtil', AppUtil.appUtilFactory);\n})(app || (app = {}));\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar GeoUtils = function () {\n    function GeoUtils() {\n        _classCallCheck(this, GeoUtils);\n    }\n\n    _createClass(GeoUtils, null, [{\n        key: 'getDistanceFromLatLonInKm',\n\n        // Credit to http://stackoverflow.com/questions/27928/how-do-i-calculate-distance-between-two-latitude-longitude-points\n        value: function getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {\n            if (!lat1 || !lon1 || !lat2 || !lon2) {\n                console.log('Not all params supplied for getDistanceFromLatLonInKm');\n                return null;\n            }\n            var R = 6371; // Radius of the earth in km\n            var dLat = this.degreesToRadians(lat2 - lat1);\n            var dLon = this.degreesToRadians(lon2 - lon1);\n            var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(this.degreesToRadians(lat1)) * Math.cos(this.degreesToRadians(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n            var d = R * c; // Distance in km\n            return d;\n        }\n    }, {\n        key: 'degreesToRadians',\n        value: function degreesToRadians(degrees) {\n            return degrees * (Math.PI / 180);\n        }\n    }]);\n\n    return GeoUtils;\n}();\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app;\n(function (app) {\n    var ImagesUtil = function () {\n        function ImagesUtil($q) {\n            _classCallCheck(this, ImagesUtil);\n\n            this.$q = $q;\n        }\n\n        _createClass(ImagesUtil, [{\n            key: 'convertImgUrlToBase64',\n            value: function convertImgUrlToBase64(url, outputFormat) {\n                var q = this.$q.defer();\n                var canvas = document.createElement('CANVAS'),\n                    ctx = canvas.getContext('2d'),\n                    img = new Image();\n                img.crossOrigin = 'Anonymous';\n                img.onload = function () {\n                    var dataURL = void 0;\n                    canvas.height = img.height;\n                    canvas.width = img.width;\n                    ctx.drawImage(img, 0, 0);\n                    dataURL = canvas.toDataURL(outputFormat);\n                    canvas = null;\n                    q.resolve(dataURL);\n                };\n                img.onerror = function () {\n                    return q.reject('Failed to load image ' + url);\n                };\n                img.src = url;\n                return q.promise;\n            }\n        }, {\n            key: 'convertImgIdToBase64',\n            value: function convertImgIdToBase64(imgId) {\n                if (!imgId) throw 'convertImgIdToBase64 requires imgId';\n                var img = document.getElementById(imgId);\n                if (!img) throw 'Could not find element with id ' + imgId;\n                return this.convertImgToBase64(img);\n            }\n        }, {\n            key: 'convertImgToBase64',\n            value: function convertImgToBase64(imgElement) {\n                // imgElem must be on the same server or,\n                // the img element must have the crossorigin=\"anonymous\" attribute and the server set the otherwise CORS header\n                // otherwise a cross-origin error will be thrown \"SECURITY_ERR: DOM Exception 18\"\n                var canvas = document.createElement('canvas');\n                canvas.width = imgElement.clientWidth;\n                canvas.height = imgElement.clientHeight;\n                var ctx = canvas.getContext('2d');\n                ctx.drawImage(imgElement, 0, 0);\n                var dataURL = canvas.toDataURL('image/png');\n                return dataURL.replace(/^data:image\\/(png|jpg);base64,/, '');\n            }\n        }], [{\n            key: 'imagesUtilFactory',\n            value: function imagesUtilFactory($q) {\n                return new ImagesUtil($q);\n            }\n        }]);\n\n        return ImagesUtil;\n    }();\n\n    app.ImagesUtil = ImagesUtil;\n    ImagesUtil.imagesUtilFactory.$inject = ['$q'];\n    angular.module('ImagesUtil', []).factory('ImagesUtil', ImagesUtil.imagesUtilFactory);\n})(app || (app = {}));","module app {\n\n\t/**\n\t * Controller viewing the profiles who have relationships with the user\n\t */\n\texport class RelationshipCtrl {\n\n\t\tprivate $log:ng.ILogService\n\t\tprivate $rootScope:app.IAppRootScope\n\t\tprivate $scope:ng.IScope\n\t\tprivate $state\n\t\tprivate $ionicModal\n\t\tprivate AppService:IAppService\n\t\tprivate AppUtil:AppUtil\n\n\t\tpublic profiles:IProfile[]\n\t\tpublic profilePendingRequest:IProfile[]\n\t\tpublic profilePendingInvite:IProfile[]\n\t\tpublic profileMutual:IProfile[]\n\n\n\t\tprivate profileModal\n\t\tpublic profile // The profile being viewed\n\t\tpublic profileIndex // The index in profiles of the profile viewed\n\n\t\tconstructor($log:ng.ILogService, $rootScope:app.IAppRootScope, $scope:ng.IScope,\n\t\t\t\t\t$state, $ionicModal, AppService:IAppService, AppUtil) {\n\t\t\t$log.info('RelationshipCtrl constructor')\n\t\t\tthis.$log = $log\n\t\t\tthis.$rootScope = $rootScope\n\t\t\tthis.$scope = $scope\n\t\t\tthis.$state = $state\n\t\t\tthis.$ionicModal = $ionicModal\n\t\t\tthis.AppService = AppService\n\t\t\tthis.AppUtil = AppUtil\n\n\t\t\t$ionicModal.fromTemplateUrl('profileModal.html', {\n\t\t\t\tscope: $scope,\n\t\t\t\tanimation: 'slide-in-up'\n\t\t\t}).then(modal => this.profileModal = modal)\n\t\t\t// Cleanup the modal when we're done with it\n\t\t\t$scope.$on('$destroy', () => this.profileModal.remove())\n\n\t\t\tthis.refresh()\n\t\t}\n\n\t\tpublic refresh() {\n\n\t\t\tthis.AppService.getProfilesWhoWantsToHaveARelationshipWithMe()\n\t\t\t\t.then(profiles => {\n\t\t\t\t\tthis.profilePendingRequest = profiles[\"pendingUserRequest\"]\n\t\t\t\t\tthis.profilePendingInvite = profiles[\"pendingUserInvite\"]\n\t\t\t\t\tthis.profileMutual = profiles[\"mutualUsers\"]\n\t\t\t\t\tthis.$log.log('getProfilesWhoWantsToHaveARelationshipWithMe pending request returned ' + this.profilePendingRequest.length + ' profiles')\n\t\t\t\t\tthis.$log.log('getProfilesWhoWantsToHaveARelationshipWithMe pending invitereturned ' + this.profilePendingInvite.length + ' profiles')\n\t\t\t\t\tthis.$log.log('getProfilesWhoWantsToHaveARelationshipWithMe mutual returned ' + this.profileMutual.length + ' profiles')\n\n\t\t\t\t}, error => {\n\t\t\t\t\tthis.$log.error('Error loading profiles who wants to have a relationship with current user ' + JSON.stringify(error))\n\t\t\t\t\tthis.AppUtil.toastSimple('Unable to load profiles')\n\t\t\t\t})\n\t\t\t\t.finally(() => this.$scope.$broadcast('scroll.refreshComplete'))\n\t\t}\n\n\t\tpublic view(index:number, profileList) {\n\t\t\tthis.$log.debug('viewing profile who wants to have a relationship with me at index ' + index)\n\t\t\tthis.profiles = profileList\n\t\t\tthis.profile = this.profiles[index]\n\t\t\tthis.profileIndex = index\n\t\t\tthis.profileModal.show()\n\t\t}\t\n\n\t\tpublic like() {\n\t\t\tthis.$log.debug('approving relationship invite at index ' + this.profileIndex)\n\t\t\tthis.process(true)\n\t\t}\n\n\t\tpublic pass() {\n\t\t\tthis.$log.debug('declining relationship invite at index ' + this.profileIndex)\n\t\t\tthis.process(false)\n\t\t}\n\n\t\tprivate process(relationship:boolean) {\n\t\t\tthis.AppUtil.blockingCall(\n\t\t\t\tthis.AppService.processPregnancy(this.profile, relationship),\n\t\t\t\t() => {\n\t\t\t\t\tthis.profiles.splice(this.profileIndex, 1)\n\t\t\t\t\tthis.close()\n\t\t\t\t})\n\t\t}\n\n\t\tpublic close() {\n\t\t\tthis.profileModal.hide()\n\t\t\tthis.profileIndex = null\n\t\t\tthis.profile = null\n\t\t}\n\n\t}\n\n\tRelationshipCtrl.$inject = ['$log', '$rootScope', '$scope', '$state', '$ionicModal', 'AppService', 'AppUtil']\n\tangular.module('controllers').controller('RelationshipCtrl', RelationshipCtrl)\n}\n","module app {\n\n\t/**\n\t * Controller for the social sharing action\n\t */\n\texport class ShareController {\n\n\t\tprivate $log: ng.ILogService\n\t\tprivate $cordovaSocialSharing\n\t\tprivate socialShareMessage: string\n\t\tprivate socialShareSubject: string\n\t\tprivate playStoreUrl: string\n\t\tprivate itunesUrl: string\n\t\tprivate webStoreUrl: string\n\t\tprivate shareStoreUrl: string\n\n\t\tconstructor($log: ng.ILogService, $cordovaSocialSharing, socialShareMessage: string,\n\t\t\tsocialShareSubject: string, playStoreUrl: string, itunesUrl: string, webStoreUrl: string) {\n\t\t\tthis.$log = $log\n\t\t\tthis.$cordovaSocialSharing = $cordovaSocialSharing\n\t\t\tthis.socialShareMessage = socialShareMessage\n\t\t\tthis.socialShareSubject = socialShareSubject\n\t\t\tthis.playStoreUrl = playStoreUrl\n\t\t\tthis.itunesUrl = itunesUrl\n\t\t\tthis.webStoreUrl = webStoreUrl\n\t\t}\n\n\n\t\tpublic share() {\n\t\t\tthis.shareStoreUrl = ionic.Platform.isAndroid() ? this.playStoreUrl : ionic.Platform.isIOS() ? this.itunesUrl : this.webStoreUrl\n\t\t\tthis.$cordovaSocialSharing.share(this.socialShareSubject, this.socialShareMessage, null, this.shareStoreUrl) // Share via native share sheet \n\t\t\t\t.then(() => {\n\t\t\t\t\tif (typeof analytics !== 'undefined') {\n\t\t\t\t\t\tanalytics.trackView(\"Invite My Friends Controller\")\n\t\t\t\t\t}\n\t\t\t\t\tthis.$log.debug('Social share action complete')\n\t\t\t\t}, error => {\n\t\t\t\t\tthis.$log.error('Social share action error ' + JSON.stringify(error))\n\t\t\t\t})\n\t\t}\n\t}\n\n\tShareController.$inject = ['$log', '$cordovaSocialSharing', 'socialShareMessage', 'socialShareSubject',\n\t\t'playStoreUrl', 'itunesUrl', 'webStoreUrl']\n\tangular.module('controllers.share', ['constants', 'ngCordova.plugins.socialSharing', 'ionic'])\n\t\t.controller('ShareController', ShareController)\n}","module app {\n\n\timport ILogService = angular.ILogService\n\timport IScope = angular.IScope\n\timport IncomingInvite = Twilio.IncomingInvite\n\timport Conversation = Twilio.Conversation;\n\n\n\t/**\n\t * Controller for the Twilio WebRTC video calling.\n\t * The controller-as is defined in the index.html to ensure there is one accessible instance.\n\t * On Android this required the android.permission.CAMERA permission.\n\t * This can be added with the cordova plugin at https://github.com/campers/android-camera-permission/\n\t */\n\texport class TwilioVideoChat {\n\n\t\tprivate conversationsClient\n\t\tprivate activeConversation\n\t\tprivate hasWebRTC:boolean = navigator['webkitGetUserMedia'] || navigator['mozGetUserMedia']\n\n\t\tprivate modal\n\t\tprivate incomingInvite: IncomingInvite\n\t\tpublic profile: IProfile // The profile of the person we are video calling with\n\n\t\tpublic state:string\n\t\t// state may be one of these three states\n\t\tpublic Inviting = 'inviting'\n\t\tpublic InCall = 'inCall'\n\t\tpublic Incoming = 'incoming'\n\n\t\t// Generate an AccessToken in the Twilio Account Portal - https://www.twilio.com/user/account/video/testing-tools\n\n\t\tconstructor(private $log:ILogService, private $rootScope: IScope, private $scope: IScope,\n\t\t\t\t\tprivate $ionicModal, private $ionicPopup, private AppService:IAppService, private AppUtil:AppUtil,\n\t\t\t\t\tprivate ParseService:IParseService) {\n\n\t\t\t$scope['video'] = this\n\t\t\tthis.$ionicModal.fromTemplateUrl('video.html', {\n\t\t\t\tscope: this.$scope,\n\t\t\t\tanimation: 'slide-in-up'\n\t\t\t}).then(modal => this.modal = modal )\n\n\t\t\tif (AppService.twilioAccessToken) {\n\t\t\t\tthis.init(AppService.twilioAccessToken)\n\t\t\t} else {\n\t\t\t\t$rootScope.$on('twilioAccessToken', (event, token) => this.init(token))\n\t\t\t}\n\t\t}\n\n\t\tpublic isSupported(): boolean {\n\t\t\treturn this.hasWebRTC && this.conversationsClient && this.conversationsClient.isListening\n\t\t}\n\n\n\t\tprivate init(twilioAccessToken: string) {\n\t\t\tthis.$log.log('Initialising Twilio')\n\t\t\tif (!this.hasWebRTC) {\n\t\t\t\tthis.$log.log('WebRTC not supported')\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tvar accessManager = new Twilio.AccessManager(twilioAccessToken)\n\n\t\t\taccessManager.on('tokenExpired', () => {\n\t\t\t\tthis.$log.warn('Twilio token expired')\n\t\t\t\tthis.ParseService.getTwilioToken().then(\n\t\t\t\t\ttoken => { accessManager.updateToken(token) },\n\t\t\t\t\terror => this.$log.error('Error getting an updated Twilio token', error)\n\t\t\t\t)\n\t\t\t})\n\t\t\taccessManager.on('error', error => {\n\t\t\t\tthis.closeModal()\n\t\t\t\tthis.AppUtil.toastSimpleTranslate('VIDEO_SERVICE_ERROR')\n\t\t\t\tthis.$log.error('Twilio access manager error', error)\n\t\t\t})\n\n\n\t\t\tthis.conversationsClient = new Twilio.Conversations.Client(accessManager)\n\t\t\tthis.conversationsClient.listen().then(\n\t\t\t\t\t() => this.onClientConnected(),\n\t\t\t\t\terror => {\n\t\t\t\t\t\tthis.$log.error('Twilio Conversations.Client.listen() error', error)\n\t\t\t\t\t\tthis.AppUtil.toastSimpleTranslate('VIDEO_SERVICE_ERROR')\n\t\t\t\t\t}\n\t\t\t)\n\n\t\t\tthis.conversationsClient.on('error', error => {\n\t\t\t\tthis.closeModal()\n\t\t\t\tthis.AppUtil.toastSimpleTranslate('VIDEO_SERVICE_ERROR')\n\t\t\t\tthis.$log.error('Twilio conversation client error', error)\n\t\t\t\t// TODO handle error here. Only show popup if there was an active conversation or invite?\n\t\t\t})\n\t\t}\n\n\t\tprivate openModal(state:string) {\n\t\t\tthis.state = state\n\t\t\tthis.modal.show()\n\t\t}\n\n\t\tprivate closeModal() {\n\t\t\tthis.modal.hide()\n\n\t\t\tif (this.activeConversation) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.activeConversation.localMedia.stop()\n\t\t\t\t\tthis.activeConversation.disconnect()\n\t\t\t\t} catch (e) {/**/}\n\t\t\t\tthis.activeConversation = null\n\t\t\t}\n\n\t\t\tthis.profile = null\n\t\t\tthis.state = null\n\t\t\tthis.incomingInvite = null\n\t\t}\n\n\t\t/**\n\t\t * Invite a user to video chat\n\t\t * @param userId the user to invite\n\t\t */\n\t\tpublic invite(userId: string) {\n\t\t\tthis.$log.log('Inviting user id:' + userId)\n\t\t\tthis.profile = this.AppService.getProfileByUserId(userId)\n\t\t\tthis.openModal(this.Inviting)\n\n\t\t\tthis.conversationsClient.inviteToConversation(userId).then(\n\t\t\t\t\tconversation => this.conversationStarted(conversation),\n\t\t\t\t\terror => {\n\t\t\t\t\t\tthis.closeModal()\n\t\t\t\t\t\tthis.AppUtil.toastSimpleTranslate('VIDEO_START_ERROR')\n\t\t\t\t\t\tthis.$log.error('Twilio conversationStarted error ' + error + ' ' + JSON.stringify(error))\n\t\t\t\t\t}\n\t\t\t)\n\t\t}\n\n\t\t// Button actions\n\n\t\t/** Accepting an incoming video invite */\n\t\tpublic accept() {\n\t\t\tif (this.incomingInvite && this.incomingInvite.status === 'pending') {\n\t\t\t\tthis.incomingInvite.accept().then(\n\t\t\t\t\t\tconversation => this.conversationStarted(conversation),\n\t\t\t\t\t\terror => {\n\t\t\t\t\t\t\tthis.closeModal()\n\t\t\t\t\t\t\tthis.AppUtil.toastSimpleTranslate('VIDEO_START_ERROR')\n\t\t\t\t\t\t\tthis.$log.error('Twilio incomingInvite.accept() error', error)\n\t\t\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tthis.closeModal()\n\t\t\t\tthis.AppUtil.toastSimpleTranslate('VIDEO_START_ERROR')\n\t\t\t\tthis.$log.info('Did not accept incomingInvite ' + (this.incomingInvite ? this.incomingInvite.status : 'null'))\n\t\t\t}\n\n\t\t}\n\n\t\t/** Reject an incoming video invite */\n\t\tpublic reject() {\n\t\t\tif (this.incomingInvite) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.incomingInvite.reject()\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.$log.warn('Error rejecting video invite', e)\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.closeModal()\n\t\t}\n\n\t\t/** Cancel an outgoing invite in progress */\n\t\tpublic cancelInvite() {\n\t\t\t// TODO cancel the successful creation of the conversation\n\t\t\tthis.closeModal()\n\t\t}\n\n\t\t/** Disconnect from a video call currently in progress */\n\t\tpublic disconnect() {\n\t\t\tthis.closeModal()\n\t\t\tif (this.activeConversation)\n\t\t\t\tthis.activeConversation.disconnect()\n\t\t}\n\n\n\t\tprivate onClientConnected() {\n\t\t\tthis.$log.log('Connected to Twilio. Listening for incoming Invites as ' + this.conversationsClient.identity)\n\n\t\t\tthis.conversationsClient.on('invite', incomingInvite => {\n\t\t\t\tthis.$log.log('Incoming video invite from: ' + incomingInvite.from)\n\t\t\t\tthis.profile = this.AppService.getProfileByUserId(incomingInvite.from)\n\n\t\t\t\tif (this.activeConversation) {\n\t\t\t\t\tthis.AppUtil.toastSimpleTranslate('Conversation already active. Rejecting invite')\n\t\t\t\t\tincomingInvite.reject()\n\t\t\t\t} else {\n\t\t\t\t\tthis.incomingInvite = incomingInvite\n\t\t\t\t\tthis.openModal(this.Incoming)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\t/** conversation is live */\n\t\tprivate conversationStarted(conversation: Conversation) {\n\t\t\tthis.$log.log('In an active Conversation')\n\t\t\tthis.activeConversation = conversation\n\t\t\tthis.state = this.InCall\n\t\t\tthis.$scope.$apply() // this comes in outside of the angular lifecycle so notify this.state has updated\n\n\t\t\t// Draw local video\n\t\t\tconversation.localMedia.attach('#video-local')\n\t\t\tthis.$log.log('Attached local media')\n\n\t\t\t// When a participant joins, draw their video on screen\n\t\t\tconversation.on('participantConnected', (participant) => {\n\t\t\t\tthis.$log.log('Participant ' + participant.identity + ' connected')\n\t\t\t\tparticipant.media.attach('#video-remote')\n\t\t\t\tthis.$log.log('Attached remote video')\n\t\t\t})\n\t\t\t// When a participant disconnects, note in log\n\t\t\tconversation.on('participantDisconnected', (participant) => {\n\t\t\t\tthis.$log.log('Participant ' + participant.identity + ' disconnected')\n\t\t\t\tparticipant.media.detach('#video-remote')\n\t\t\t\tthis.closeModal()\n\t\t\t})\n\t\t\t// When the conversation ends, stop capturing local video\n\t\t\tconversation.on('ended', (conversation) => {\n\t\t\t\tthis.$log.log('Twilio conversation ended')\n\t\t\t\tconversation.localMedia.stop()\n\t\t\t\tconversation.disconnect()\n\t\t\t\tthis.activeConversation = null\n\t\t\t\tthis.closeModal()\n\t\t\t})\n\t\t}\n\n\n\t}\n\n\tTwilioVideoChat.$inject = ['$log', '$rootScope', '$scope', '$ionicModal', '$ionicPopup', 'AppService', 'AppUtil', 'ParseService']\n\tconst module = angular.module('controllers')\n\tmodule.controller('TwilioVideoChat', TwilioVideoChat)\n\n\t// http://blog.aaronholmes.net/writing-angularjs-directives-as-typescript-classes/\n/*\n\tclass VideoInviteDirective implements ng.IDirective {\n\t\trestrict = 'A'\n\t\trequire = 'ngModel'\n\n\t\tconstructor(private $location: ng.ILocationService, private appService: IAppService) {\n\t\t}\n\n\t\tlink = (scope: ng.IScope, element: ng.IAugmentedJQuery, attrs: ng.IAttributes, ctrl: any) => {\n\t\t\tvar isClickable = angular.isDefined(attrs.isClickable) && scope.$eval(attrs.isClickable) === true ? true : false;\n\n\t\t\tscope.onHandleClick = function() {\n\t\t\t\tif (!isClickable) return\n\t\t\t\tconsole.log('onHandleClick')\n\t\t\t}\n\t\t}\n\n\t\tstatic factory(): ng.IDirectiveFactory {\n\t\t\tconst directive = ($location: ng.ILocationService, appService: IAppService) => new VideoInviteDirective($location, appService)\n\t\t\tdirective.$inject = ['$location', 'AppService']\n\t\t\treturn directive\n\t\t}\n\t}\n\n\tmodule.directive('video-invite', VideoInviteDirective.factory())\n*/\n}\n\n","/**\n * Mocks for Angular services. Simple/common methods are stubbed out here.\n * More complex tests should provide their own implementation of functions.\n *\n * As some mocks require $q which isn't available in the $provide setup,\n * then in the test beforeEach inject function it can be injected then.\n *\n * The _test.js extention ensures it's only compiled into to test builds\n */\nimport IChatMessage = app.IChatMessage;\nimport IMatch = app.IMatch;\nimport IPromise = angular.IPromise;\n\nvar mock$state = function($provide) {\n\tvar state = {}\n\tstate['go'] = () => {/**/}\n\t$provide.value('$state', state)\n\treturn state\n}\n\nvar mock$ionicHistory = function($provide) {\n\tvar ionicHistory = {}\n\t$provide.value('$ionicHistory', ionicHistory)\n\treturn ionicHistory\n}\n\nvar mock$localStorage = function($provide) {\n\tvar localStorage = {}\n\t$provide.value('$localStorage', localStorage)\n\treturn localStorage\n}\n\nvar mock$analytics = function($provide) {\n\tvar analytics = { eventTrack: () => {/**/}}\n\t$provide.value('$analytics', analytics)\n\treturn analytics\n}\n\nvar mock$translate = function($provide) {\n\tvar translate = { instant: (key) => key}\n\t$provide.value('$translate', translate)\n\treturn translate\n}\n\nvar mockAppService = function($provide) {\n\tvar AppService = {}\n\n\t$provide.value('AppService', AppService)\n\treturn AppService\n}\n\nvar mockParseService = function($provide) {\n\tvar ParseService = <app.IParseService>{}\n\tvar $q\n\n\tParseService['inject'] = _$q_ => $q = _$q_\n\n\tParseService.init = ():IPromise<void> => $q.when()\n\tParseService.getUserId = () => 'uid'\n\n\tParseService.sendChatMessage = (msg: IChatMessage, match:IMatch): ng.IPromise<IChatMessage> => {\n\t\tmsg.id = ' '\n\t\tmsg.match = match\n\t\treturn $q.when(msg)\n\t}\n\n\tParseService.rebuildMatches = ():IPromise<void> => $q.when()\n\n\t$provide.value('ParseService', ParseService)\n\treturn ParseService\n}\n\n\nvar mockLocalDB = function($provide) {\n\tvar LocalDB = <app.ILocalDBService>{}\n\tvar $q\n\tLocalDB['inject'] = _$q_ => $q = _$q_\n\n\tLocalDB.init = ():IPromise<void> => $q.when()\n\tLocalDB.getUnreadChats = ():IPromise<any> => $q.when({/**/})\n\tLocalDB.setChatRead = (chatId:string, read:boolean):IPromise<void> => $q.when()\n\tLocalDB.saveChatMessage = ():IPromise<boolean> => $q.when(true)\n\n\t$provide.value('LocalDB', LocalDB)\n\treturn LocalDB\n}\n\nvar mockAppUtil = function($provide) {\n\tvar AppUtil = <app.AppUtil>{}\n\n\tAppUtil.blockingCall = (promise, success, errorKey) => success(promise)\n\tAppUtil.toastSimpleTranslate = (msgKey) => {/**/}\n\tAppUtil.toastSimple = (msg) => {/**/}\n\t$provide.value('AppUtil', AppUtil)\n\treturn AppUtil\n}\n","module app {\n\n    export class AboutJAB {\n        private about : IAboutJab\n\n        constructor(private $ionicPopup, private $log: ng.ILogService, private $scope: ng.IScope,\n            private AppService: IAppService, private AppUtil: AppUtil) {\n\n            $scope.$on('$ionicView.beforeEnter', () => this.refreshAbout())\n        }\n\n        public refreshAbout() {\n            this.AppUtil.blockingCall(\n                this.AppService.getAboutJab(),\n                about => {\n                    this.about = about\n                })\n        }\n\n        public saveAbout() {\n                this.AppUtil.blockingCall(\n                    this.AppService.addAboutJab(this.about),\n                    () => {\n                        this.AppUtil.toastSimple(\"Saved Successfully\")\n                        this.refreshAbout()\n                    })\n        }\n    }\n\n    AboutJAB.$inject = ['$ionicPopup', '$log', '$scope', 'AppService', 'AppUtil']\n    angular.module('controllers').controller('AboutJAB', AboutJAB)\n}\n","module app {\n\t/**\n\t * Controller\n\t */\n\texport class ApplyBadges {\n\t\tprivate $log: ng.ILogService\n\t\tprivate $rootScope: app.IAppRootScope\n\t\tprivate $scope: ng.IScope\n\t\tprivate $state\n\t\tprivate $ionicModal\n\t\tprivate $q: ng.IQService\n\t\tprivate AppService: IAppService\n\t\tprivate AppUtil: AppUtil\n\n\t\tpublic profiles\n\t\tpublic profile // selected profile for viewing details\n\t\tpublic profileModal\n\n\t\tpublic personCategory: string\n\t\tpublic personType: string\n\t\tpublic personSperm: boolean\n\t\tpublic personEgg: boolean\n\t\tpublic personWomb: boolean\n\t\tpublic personEmbryo: boolean\n\t\tpublic personHelpLevel: string\n\n\t\tconstructor($log: ng.ILogService, $rootScope: app.IAppRootScope, $scope: ng.IScope, $q: ng.IQService,\n\t\t\t$state, $ionicModal, AppService: IAppService, AppUtil: AppUtil) {\n\t\t\tthis.$log = $log\n\t\t\tthis.$rootScope = $rootScope\n\t\t\tthis.$scope = $scope\n\t\t\tthis.$q = $q\n\t\t\tthis.$state = $state\n\t\t\tthis.$ionicModal = $ionicModal\n\t\t\tthis.AppService = AppService\n\t\t\tthis.AppUtil = AppUtil\n\t\t\tthis.$scope.options = {\n\t\t\t\tpagination: false,\n\t\t\t\tonlyExternal: true\n\t\t\t}\n\n\t\t\t$ionicModal.fromTemplateUrl('applybadges.html', {\n\t\t\t\tscope: $scope,\n\t\t\t\tanimation: 'slide-in-up'\n\t\t\t}).then(modal => this.profileModal = modal)\n\t\t\t// Cleanup the modal when we're done with it\n\t\t\t$scope.$on('$destroy', () => this.profileModal.remove())\n\n\t\t\tthis.$scope.$on(\"$ionicSlides.sliderInitialized\", function (event, data) {\n\t\t\t\t// data.slider is the instance of Swiper\n\t\t\t\t$scope.slider = data.slider\n\t\t\t})\n\n\t\t\tthis.refresh()\n\t\t}\n\n\t\tpublic refresh() {\n\t\t\tthis.AppUtil.blockingCall(\n\t\t\t\tthis.AppService.getApplyBadgeUsers(),\n\t\t\t\tprofiles => {\n\t\t\t\t\tthis.$log.log('Loaded ' + profiles.length + ' items')\n\t\t\t\t\tthis.profiles = profiles\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\n\t\tpublic viewDetails(profile) {\n\t\t\tthis.profile = profile\n\t\t\tthis.personCategory = this.profile.personCategory\n\t\t\tthis.personType = this.profile.personType\n\t\t\tthis.personSperm = this.profile.personSperm\n\t\t\tthis.personEgg = this.profile.personEgg\n\t\t\tthis.personWomb = this.profile.personWomb\n\t\t\tthis.personEmbryo = this.profile.personEmbryo\n\t\t\tthis.personHelpLevel = this.profile.personHelpLevel\n\t\t\tthis.profileModal.show()\n\t\t}\n\n\t\tpublic closeModal() {\n\t\t\tthis.refresh()\n\t\t\tthis.profile = null\n\t\t\tthis.profileModal.hide()\n\t\t}\n\n\t\tpublic applyBadge() {\n\t\t\tlet profileUpdate = <IProfile>{}\n\t\t\tprofileUpdate.personCategory = this.personCategory ? this.personCategory : '0'\n\t\t\tprofileUpdate.hasSelfId = true\n\t\t\tif (this.personCategory === '3') {\n\t\t\t\tprofileUpdate.personType = '0'\n\t\t\t\tprofileUpdate.personSperm = false\n\t\t\t\tprofileUpdate.personEgg = false\n\t\t\t\tprofileUpdate.personWomb = false\n\t\t\t\tprofileUpdate.personEmbryo = false\n\t\t\t\tprofileUpdate.personHelpLevel = '0'\n\t\t\t} else {\n\t\t\t\tprofileUpdate.personType = this.personType ? this.personType : '0'\n\t\t\t\tprofileUpdate.personSperm = this.personSperm ? this.personSperm : false\n\t\t\t\tprofileUpdate.personEgg = this.personEgg ? this.personEgg : false\n\t\t\t\tprofileUpdate.personWomb = this.personWomb ? this.personWomb : false\n\t\t\t\tprofileUpdate.personEmbryo = this.personEmbryo ? this.personEmbryo : false\n\t\t\t\tprofileUpdate.personHelpLevel = this.personHelpLevel ? this.personHelpLevel : '0'\n\t\t\t}\n\n\t\t\tlet thingsIHave = \"\"\n\t\t\tif (profileUpdate.personSperm)\n\t\t\t\tthingsIHave += \"S\"\n\n\t\t\tif (profileUpdate.personEgg)\n\t\t\t\tthingsIHave += \"E\"\n\n\t\t\tif (profileUpdate.personWomb)\n\t\t\t\tthingsIHave += \"W\"\n\n\t\t\tif (profileUpdate.personEmbryo)\n\t\t\t\tthingsIHave += \"Y\"\n\n\t\t\tif (this.personCategory !== '3' && !profileUpdate.personSperm && !profileUpdate.personEgg && !profileUpdate.personWomb && !profileUpdate.personEmbryo)\n\t\t\t\tthingsIHave += \"X\"\n\n\t\t\tprofileUpdate.thingsIHave = thingsIHave\n\n\t\t\tthis.AppUtil.blockingCall(\n\t\t\t\tthis.AppService.saveProfileForApplyBadge(this.profile, profileUpdate),\n\t\t\t\t() => {\n\t\t\t\t\tthis.closeModal()\n\t\t\t\t\tthis.AppUtil.toastSimple(\"Badge Applied Successfully\")\n\t\t\t\t})\n\t\t}\n\t}\n\n\tApplyBadges.$inject = ['$log', '$rootScope', '$scope', '$q', '$state', '$ionicModal', 'AppService', 'AppUtil']\n\tangular.module('controllers').controller('ApplyBadges', ApplyBadges)\n}\n","module app {\n\n\n\t/**\n\t * Controller\n\t */\n\texport class BannedUsers {\n\n\n\t\tprivate $log:ng.ILogService\n\t\tprivate $rootScope:app.IAppRootScope\n\t\tprivate $scope:ng.IScope\n\t\tprivate $state\n\t\tprivate $ionicModal\n\t\tprivate $ionicActionSheet\n\t\tprivate $q:ng.IQService\n\t\tprivate AppService:IAppService\n\t\tprivate AppUtil:AppUtil\n\t\tprivate $translate\n\n\t\tpublic reports\n\t\t// selected report for viewing details\n\t\tpublic report\n\t\tpublic reportDetails\n\t\tpublic reportModal\n\n\t\tconstructor($log:ng.ILogService, $rootScope:app.IAppRootScope, $scope:ng.IScope, $q:ng.IQService,\n\t\t\t\t\t$state, $ionicModal, $ionicActionSheet, AppService:IAppService, AppUtil:AppUtil, $translate) {\n\t\t\tthis.$log = $log\n\t\t\tthis.$rootScope = $rootScope\n\t\t\tthis.$scope = $scope\n\t\t\tthis.$q = $q\n\t\t\tthis.$state = $state\n\t\t\tthis.$ionicModal = $ionicModal\n\t\t\tthis.$ionicActionSheet = $ionicActionSheet\n\t\t\tthis.AppService = AppService\n\t\t\tthis.AppUtil = AppUtil\n\t\t\tthis.$translate = $translate\n\n\t\t\t$ionicModal.fromTemplateUrl('admin/reportDetails.html', {\n\t\t\t\tscope: $scope,\n\t\t\t\tanimation: 'slide-in-up'\n\t\t\t}).then(modal => this.reportModal = modal)\n\t\t\t// Cleanup the modal when we're done with it\n\t\t\t$scope.$on('$destroy', () => this.reportModal.remove())\n\n\t\t\tthis.refresh()\n\t\t}\n\n\t\tpublic refresh() {\n\t\t\tthis.AppUtil.blockingCall(\n\t\t\t\tthis.AppService.getBannedUsers(),\n\t\t\t\treports => this.reports = reports\n\t\t\t)\n\t\t}\n\n\t\tpublic viewDetails(report) {\n\t\t\tthis.AppUtil.blockingCall(\n\t\t\t\tthis.AppService.getReportedUserDetails(report),\n\t\t\t\tdetails => {\n\t\t\t\t\tthis.report = report\n\t\t\t\t\tthis.reportDetails = details\n\t\t\t\t\t// Extract the messages that were sent to the user who raised the report\n\t\t\t\t\tthis.reportDetails.recentMessagesToReporter =\n\t\t\t\t\t\t\t_.filter(details.recentMessages, msg => msg.userIds.indexOf(report.reportedBy.id) > -1)\n\t\t\t\t\tif (this.reportDetails.recentMessagesToReporter.length > 6)\n\t\t\t\t\t\tthis.reportDetails.recentMessagesToReporter.slice(0, 5)\n\t\t\t\t\tthis.reportModal.show()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\n\t\tprivate fileUrl(photo) {\n\t\t\tif (photo.url)\n\t\t\t\treturn photo.url()\n\t\t\treturn photo._url\n\t\t}\n\n\t\tpublic deletePhoto(photoUrl) {\n\t\t\tthis.$log.log('deleting photo at ' + photoUrl)\n\t\t\tthis.AppUtil.blockingCall(\n\t\t\t\tthis.AppService.deletePhoto(this.report.id, photoUrl),\n\t\t\t\t\t// On success remove the photo locally\n\t\t\t\t() => _.remove(this.report.profile.photos, photo => this.fileUrl(photo) === photoUrl)\n\t\t\t)\n\t\t}\n\n\n\n\t\tpublic actionReport() {\n\t\t\tthis.$ionicActionSheet.show({\n\t\t\t\tbuttons: [{text: 'Deleted Photo'}, {text: 'None'}],\n\t\t\t\tdestructiveText: 'Ban User',\n\t\t\t\ttitleText: 'Select Report Action',\n\t\t\t\tcancelText: this.$translate.instant('CANCEL'),\n\t\t\t\t// cancel: function () {},\n\t\t\t\tbuttonClicked: (index) => {\n\t\t\t\t\tswitch (index) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tthis.closeReport('deleted photo')\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tthis.closeReport('none')\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\treturn true\n\t\t\t\t},\n\t\t\t\tdestructiveButtonClicked: (index) => {\n\t\t\t\t\tthis.banUserAction()\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tprivate closeReport(action) {\n\t\t\tthis.$log.log('Closing report ' + this.report.id + ' with action ' + action)\n\t\t\tthis.AppUtil.blockingCall(\n\t\t\t\tthis.AppService.closeReport(this.report.id, action),\n\t\t\t\t() => {\n\t\t\t\t\tthis.closeModal()\n\t\t\t\t\t_.remove(this.reports, 'id', this.report.id)\n\t\t\t\t\tthis.report = null\n\t\t\t\t\tthis.reportDetails = null\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\n\t\t/**\n\t\t * Closes the report, and all other associated with the reported user, and bans the user.\n\t\t */\n\t\tprivate banUserAction() {\n\t\t\tthis.AppUtil.blockingCall(\n\t\t\t\tthis.AppService.banUser(this.report.reportedUser),\n\t\t\t\t() => {\n\t\t\t\t\tthis.closeModal()\n\t\t\t\t\tthis.report = null\n\t\t\t\t\tthis.reportDetails = null\n\t\t\t\t\tthis.refresh() // could be multiple reports for the user which are now closed, so just refresh\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\n\t\tpublic closeModal() {\n\t\t\tthis.reportModal.hide()\n\t\t}\n\n\n\t}\n\n\tBannedUsers.$inject = ['$log', '$rootScope', '$scope', '$q', '$state', '$ionicModal', '$ionicActionSheet',\n\t\t'AppService', 'AppUtil', '$translate']\n\tangular.module('controllers').controller('BannedUsers', BannedUsers)\n}\n","module app {\n\n    export class ClinicsQuestion {\n        private modalText = \"New \"\n        public clinicQuestions\n        public clinicQuestion: IClinicsQuestion\n        private clinicsModal\n        private submitted = false;\n\n        constructor(private $ionicPopup, private $log: ng.ILogService, private $scope: ng.IScope,\n            private $state, private $ionicModal, private AppService: IAppService, private AppUtil: AppUtil) {\n\n            $scope.$on('$ionicView.beforeEnter', () => this.refresh())\n            // $ionicModal.fromTemplateUrl('clinicsModal.html', {\n\n            // // Cleanup the modal when we're done with it\n            $scope.$on('$destroy', () => this.clinicsModal.remove())\n\n            $ionicModal.fromTemplateUrl('templates/modal.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(modal => this.clinicsModal = modal)\n        }\n\n        public refresh() {\n            this.AppUtil.blockingCall(\n                this.AppService.getClinicsQuestion(),\n                questions => {\n                    this.$log.log('loaded ' + questions.length + ' questions')\n                    this.clinicQuestions = questions\n                })\n        }\n\n        public addClinicsQuestion(form) {\n            this.submitted = true\n            if (form.$valid) {\n                this.AppUtil.blockingCall(\n                    this.AppService.addClinicsQuestion(this.clinicQuestion),\n                    () => {\n                        this.modalText = \"New \"\n                        this.clinicQuestion = null\n                        this.AppUtil.toastSimple(\"Saved Successfully\")\n                        this.refresh()\n                    })\n                setTimeout(this.resetForm(form), 1000)\n            }\n        }\n\n        public editClinicsQuestion(question) {\n            this.modalText = \"Update \"\n            this.clinicQuestion = question.toJSON()\n            this.clinicsModal.show()\n        }\n\n        public deleteClinicsQuestion(id) {\n            this.$log.log('Delete question ' + id)\n            var _this = this\n            this.$ionicPopup.confirm({\n                title: 'Delete Question',\n                template: 'Are you sure you want to delete this question?'\n            }).then(function (res) {\n                if (res)\n                    _this.deleteQ(id)\n            });\n        }\n\n        public deleteQ(id) {\n            this.AppUtil.blockingCall(\n                this.AppService.delClinicsQuestion(id),\n                () => {\n                    this.AppUtil.toastSimple(\"Deleted Successfully\")\n                    this.refresh()\n                })\n        }\n\n        public close() {\n            this.modalText = \"New \"\n            this.clinicQuestion = null\n            this.clinicsModal.hide()\n        }\n\n        public resetForm(form) {\n            this.clinicQuestion = null\n            this.clinicsModal.hide()\n            form.$setPristine()\n            form.$setUntouched()\n        }\n\n    }\n\n    ClinicsQuestion.$inject = ['$ionicPopup', '$log', '$scope', '$state', '$ionicModal', 'AppService', 'AppUtil']\n    angular.module('controllers').controller('ClinicsQuestion', ClinicsQuestion)\n}\n","module app {\n\n\n\t/**\n\t * Controller\n\t */\n\texport class AdminEmailSearch {\n\n\t\tpublic email: string = '' // search term\n\t\tpublic users: IUser[]\n\t\t// selected user for viewing details\n\t\tpublic user: IUser\n\n\t\tconstructor(private $ionicPopup, private $log:ng.ILogService, private $scope:ng.IScope,\n\t\t\t\t\tprivate $state, private $ionicModal, private AppService:IAppService, private AppUtil:AppUtil) {\n\n\t\t\t$scope.$on('$ionicView.enter', () => {\n\t\t\t\tthis.$log.debug('AdminEmailSearch $ionicView.enter')\n\t\t\t\tthis.search()\n\t\t\t})\n\t\t}\n\n\t\tpublic search() {\n\t\t\tthis.$scope['search'] = {email:this.email}\n\t\t\tthis.$ionicPopup.show({\n\t\t\t\ttemplate: '<input type=\"text\" ng-model=\"search.email\">',\n\t\t\t\ttitle: 'Enter email to search',\n\t\t\t\tsubTitle: 'Minimum 4 characters. Searches starting with',\n\t\t\t\tscope: this.$scope,\n\t\t\t\tbuttons: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttext: '<b>Search</b>',\n\t\t\t\t\t\ttype: 'button-positive',\n\t\t\t\t\t\tonTap: e => {\n\t\t\t\t\t\t\tif (this.$scope['search'].email.length < 4) {\n\t\t\t\t\t\t\t\tthis.AppUtil.toastSimple('Enter at least 4 characters')\n\t\t\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn this.$scope['search'].email\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}).then(result => {\n\t\t\t\tthis.$log.log('email search ', result)\n\t\t\t\tthis.email = result\n\t\t\t\tthis.AppUtil.blockingCall(\n\t\t\t\t\tthis.AppService.searchUsersByEmail(result),\n\t\t\t\t\tusers => {\n\t\t\t\t\t\tthis.users = users\n\t\t\t\t\t\tthis.$log.info('Found ' + users.length + ' users with email starting with ' + result)\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\n\t}\n\n\tAdminEmailSearch.$inject = ['$ionicPopup', '$log', '$scope', '$state', '$ionicModal', 'AppService', 'AppUtil']\n\tangular.module('controllers').controller('AdminEmailSearch', AdminEmailSearch)\n}\n","module app {\n\n    export class GraphReport {\n        public labels = []\n        public voterReport = null\n        public series = ['Matches Per Day', 'Series B']\n        public numDays = 7\n        public matchData = []\n        public chatsData = [28, 48, 40, 19, 86, 27, 90]\n        public data = [[]]\n            \n            \n        // public onClick = function (points, evt) {\n        //     console.log(points, evt);\n        // };\n        public datasetOverride = [{ yAxisID: 'y-axis-1' }, { yAxisID: 'y-axis-2' }];\n        public options = {\n            scales: {\n                yAxes: [\n                    {\n                        id: 'y-axis-1',\n                        type: 'linear',\n                        display: true,\n                        position: 'left'\n                    },\n                    {\n                        id: 'y-axis-2',\n                        type: 'linear',\n                        display: true,\n                        position: 'right'\n                    }\n                ]\n            }\n        }\n        \n        constructor(private $log: ng.ILogService, private $scope: ng.IScope,\n            private AppService: IAppService, private AppUtil: AppUtil) {\n            $scope.$on('$ionicView.beforeEnter', () => this.getReport())\n        }\n\n        public getReport() {\n            var curDate = new Date()\n            var dateCovered = new Date()\n            dateCovered.setDate(dateCovered.getDate() - this.numDays + 1)\n            this.labels = []\n            this.matchData = []\n            this.voterReport = null\n            this.data = [[]]\n\n            while(dateCovered <= curDate){\n                this.labels.push(dateCovered.toDateString())\n                dateCovered.setDate(dateCovered.getDate() + 1);\n            }\n            this.AppUtil.blockingCall(\n                this.AppService.getMatchesReport(this.numDays),\n                items => {\n                    this.voterReport = {}\n                    this.$log.log('LOADED ' + items.length + ' items')\n                    \n                    items.forEach(a => {\n                        if (a.matchedDate.toDateString() in this.voterReport)\n                            this.voterReport[a.matchedDate.toDateString()]++\n                        else\n                            this.voterReport[a.matchedDate.toDateString()] = 1;\n                    })\n                    this.labels.forEach(a => {\n                        if (a in this.voterReport)\n                            this.matchData.push(this.voterReport[a])    \n                        else\n                            this.matchData.push(0)    \n                    })\n                    this.data[0] = this.matchData\n\n                    this.AppService.getChatMessageReport(this.numDays).then(                \n                        items => {\n                            this.$log.log('loaded ' + items.length + ' chats')\n                            var groupByDateObj = _.groupBy(items, function(n) {\n                                return n.createdAt.toDateString()\n                            })\n\n                            for (var item in groupByDateObj) {\n                                var arrayOfNames = _.groupBy(item, function(n) {\n                                    return n.senderName\n                                })\n                                console.log(\"Names length: \" + arrayOfNames.length)\n                            }\n                    })\n            })\n        }\n    }\n\n    GraphReport.$inject = ['$log', '$scope', 'AppService', 'AppUtil']\n    angular.module('controllers').controller('GraphReport', GraphReport)\n}\n","module app {\n\n\n\t/**\n\t * Controller\n\t */\n\texport class AdminNameSearch {\n\n\t\tpublic name: string = '' // search term\n\t\tpublic profiles: IProfile[]\n\t\t// selected user for viewing details\n\t\tpublic profile: IProfile\n\n\t\tconstructor(private $ionicPopup, private $log:ng.ILogService, private $scope:ng.IScope,\n\t\t\t\t\tprivate $state, private $ionicModal, private AppService:IAppService, private AppUtil:AppUtil) {\n\n\t\t\t$scope.$on('$ionicView.enter', () => {\n\t\t\t\tthis.search()\n\t\t\t})\n\t\t}\n\n\t\tpublic search() {\n\t\t\t// An elaborate, custom popup\n\t\t\tthis.$scope['search'] = {name:this.name}\n\t\t\tthis.$ionicPopup.show({\n\t\t\t\ttemplate: '<input type=\"text\" ng-model=\"search.name\">',\n\t\t\t\ttitle: 'Enter name to search',\n\t\t\t\tsubTitle: 'Minimum 4 characters. Searches starting with',\n\t\t\t\tscope: this.$scope,\n\t\t\t\tbuttons: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttext: '<b>Search</b>',\n\t\t\t\t\t\ttype: 'button-positive',\n\t\t\t\t\t\tonTap: e => {\n\t\t\t\t\t\t\tif (this.$scope['search'].name.length < 2) {\n\t\t\t\t\t\t\t\tthis.AppUtil.toastSimple('Enter at least 2 characters')\n\t\t\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn this.$scope['search'].name\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}).then(result => {\n\t\t\t\tthis.$log.log('name search ', result)\n\t\t\t\tthis.name = result\n\t\t\t\tthis.AppUtil.blockingCall(\n\t\t\t\t\tthis.AppService.searchUsersByName(result),\n\t\t\t\t\tprofiles => {\n\t\t\t\t\t\tthis.profiles = profiles\n\t\t\t\t\t\tthis.$log.info('Found ' + profiles.length + ' profiles with name starting with ' + result)\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\n\t}\n\n\tAdminNameSearch.$inject = ['$ionicPopup', '$log', '$scope', '$state', '$ionicModal', 'AppService', 'AppUtil']\n\tangular.module('controllers').controller('AdminNameSearch', AdminNameSearch)\n}\n","module app {\n\n    interface ProfilePhoto {\n        profile: IProfile\n        file: IFile\n    }\n\n    export class PhotoReview {\n\n        public profilePhotos: ProfilePhoto[] = []\n\n        constructor(private $ionicPopup, private $log:ng.ILogService, private $scope:ng.IScope, private $ionicHistory,\n                    private $state, private $stateParams, private AppService:IAppService, private AppUtil:AppUtil) {\n\n            $scope.$on('$ionicView.beforeEnter', () => this.refresh())\n        }\n\n        public refresh() {\n            this.AppUtil.blockingCall(\n                this.AppService.getProfilesWithPhotosToReview(),\n                profiles => {\n                    this.$log.log('loaded ' + profiles.length + ' profiles with photos to review')\n                    profiles.forEach(profile =>\n                        profile.photosInReview.forEach(file =>\n                            this.profilePhotos.push({profile:profile, file:file}))\n                    )\n                })\n        }\n\n        public reviewPhoto(profile, file, approved) {\n            console.log('controller reviewPhoto ', profile, file, approved)\n            this.AppUtil.blockingCall(\n                this.AppService.reviewPhoto(profile.id, file.url(), approved),\n                () => {\n                    this.$log.log('photo review success')\n                    // Remove the one we just reviewed\n                    this.profilePhotos.splice(_.findIndex(this.profilePhotos, pf => pf.file.url() === file.url()), 1)\n                })\n        }\n\n    }\n\n    PhotoReview.$inject = ['$ionicPopup', '$log', '$scope', '$ionicHistory', '$state', '$stateParams', 'AppService', 'AppUtil']\n    angular.module('controllers').controller('PhotoReview', PhotoReview)\n}\n","module app {\n\n\n\t/**\n\t * Controller\n\t */\n\texport class ReportedUsers {\n\n\n\t\tprivate $log:ng.ILogService\n\t\tprivate $rootScope:app.IAppRootScope\n\t\tprivate $scope:ng.IScope\n\t\tprivate $state\n\t\tprivate $ionicModal\n\t\tprivate $ionicActionSheet\n\t\tprivate $q:ng.IQService\n\t\tprivate AppService:IAppService\n\t\tprivate AppUtil:AppUtil\n\t\tprivate $translate\n\n\t\tpublic reports\n\t\t// selected report for viewing details\n\t\tpublic report\n\t\tpublic reportDetails\n\t\tpublic reportModal\n\n\t\tconstructor($log:ng.ILogService, $rootScope:app.IAppRootScope, $scope:ng.IScope, $q:ng.IQService,\n\t\t\t\t\t$state, $ionicModal, $ionicActionSheet, AppService:IAppService, AppUtil:AppUtil, $translate) {\n\t\t\tthis.$log = $log\n\t\t\tthis.$rootScope = $rootScope\n\t\t\tthis.$scope = $scope\n\t\t\tthis.$q = $q\n\t\t\tthis.$state = $state\n\t\t\tthis.$ionicModal = $ionicModal\n\t\t\tthis.$ionicActionSheet = $ionicActionSheet\n\t\t\tthis.AppService = AppService\n\t\t\tthis.AppUtil = AppUtil\n\t\t\tthis.$translate = $translate\n\n\t\t\t$ionicModal.fromTemplateUrl('admin/reportDetails.html', {\n\t\t\t\tscope: $scope,\n\t\t\t\tanimation: 'slide-in-up'\n\t\t\t}).then(modal => this.reportModal = modal)\n\t\t\t// Cleanup the modal when we're done with it\n\t\t\t$scope.$on('$destroy', () => this.reportModal.remove())\n\n\t\t\tthis.refresh()\n\t\t}\n\n\t\tpublic refresh() {\n\t\t\tthis.AppUtil.blockingCall(\n\t\t\t\tthis.AppService.getReportedUsers(),\n\t\t\t\treports => this.reports = reports\n\t\t\t)\n\t\t}\n\n\t\tpublic viewDetails(report) {\n\t\t\tthis.AppUtil.blockingCall(\n\t\t\t\tthis.AppService.getReportedUserDetails(report),\n\t\t\t\tdetails => {\n\t\t\t\t\tthis.report = report\n\t\t\t\t\tthis.reportDetails = details\n\t\t\t\t\t// Extract the messages that were sent to the user who raised the report\n\t\t\t\t\tthis.reportDetails.recentMessagesToReporter =\n\t\t\t\t\t\t\t_.filter(details.recentMessages, msg => msg.userIds.indexOf(report.reportedBy.id) > -1)\n\t\t\t\t\tif (this.reportDetails.recentMessagesToReporter.length > 6)\n\t\t\t\t\t\tthis.reportDetails.recentMessagesToReporter.slice(0, 5)\n\t\t\t\t\tthis.reportModal.show()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\n\t\tprivate fileUrl(photo) {\n\t\t\tif (photo.url)\n\t\t\t\treturn photo.url()\n\t\t\treturn photo._url\n\t\t}\n\n\t\tpublic deletePhoto(photoUrl) {\n\t\t\tthis.$log.log('deleting photo at ' + photoUrl)\n\t\t\tthis.AppUtil.blockingCall(\n\t\t\t\tthis.AppService.deletePhoto(this.report.id, photoUrl),\n\t\t\t\t\t// On success remove the photo locally\n\t\t\t\t() => _.remove(this.report.profile.photos, photo => this.fileUrl(photo) === photoUrl)\n\t\t\t)\n\t\t}\n\n\n\n\t\tpublic actionReport() {\n\t\t\tthis.$ionicActionSheet.show({\n\t\t\t\tbuttons: [{text: 'Deleted Photo'}, {text: 'None'}],\n\t\t\t\tdestructiveText: 'Ban User',\n\t\t\t\ttitleText: 'Select Report Action',\n\t\t\t\tcancelText: this.$translate.instant('CANCEL'),\n\t\t\t\t// cancel: function () {},\n\t\t\t\tbuttonClicked: (index) => {\n\t\t\t\t\tswitch (index) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tthis.closeReport('deleted photo')\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tthis.closeReport('none')\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\treturn true\n\t\t\t\t},\n\t\t\t\tdestructiveButtonClicked: (index) => {\n\t\t\t\t\tthis.banUserAction()\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tprivate closeReport(action) {\n\t\t\tthis.$log.log('Closing report ' + this.report.id + ' with action ' + action)\n\t\t\tthis.AppUtil.blockingCall(\n\t\t\t\tthis.AppService.closeReport(this.report.id, action),\n\t\t\t\t() => {\n\t\t\t\t\tthis.closeModal()\n\t\t\t\t\t_.remove(this.reports, 'id', this.report.id)\n\t\t\t\t\tthis.report = null\n\t\t\t\t\tthis.reportDetails = null\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\n\t\t/**\n\t\t * Closes the report, and all other associated with the reported user, and bans the user.\n\t\t */\n\t\tprivate banUserAction() {\n\t\t\tthis.AppUtil.blockingCall(\n\t\t\t\tthis.AppService.banUser(this.report.reportedUser),\n\t\t\t\t() => {\n\t\t\t\t\tthis.closeModal()\n\t\t\t\t\tthis.report = null\n\t\t\t\t\tthis.reportDetails = null\n\t\t\t\t\tthis.refresh() // could be multiple reports for the user which are now closed, so just refresh\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\n\t\tpublic closeModal() {\n\t\t\tthis.reportModal.hide()\n\t\t}\n\n\n\t}\n\n\tReportedUsers.$inject = ['$log', '$rootScope', '$scope', '$q', '$state', '$ionicModal', '$ionicActionSheet',\n\t\t'AppService', 'AppUtil', '$translate']\n\tangular.module('controllers').controller('ReportedUsers', ReportedUsers)\n}\n","module app {\n\n\n\t/**\n\t * Controller\n\t */\n\texport class UserAdmin {\n\n\t\tpublic user: IUser\n\t\tpublic isMatch: Boolean\n\n\t\tconstructor(private $ionicPopup, private $log: ng.ILogService, private $scope: ng.IScope, private $ionicHistory,\n\t\t\tprivate $state, private $stateParams, private AppService: IAppService, private AppUtil: AppUtil) {\n\n\t\t\t$scope.$on('$ionicView.beforeEnter', () => {\n\t\t\t\tlet userId = this.$stateParams.userId\n\t\t\t\tthis.$log.log('UserAdmin ' + userId)\n\t\t\t\tthis.AppUtil.blockingCall(\n\t\t\t\t\tthis.AppService.loadUser(userId),\n\t\t\t\t\tuser => {\n\t\t\t\t\t\tthis.user = user\n\t\t\t\t\t\tthis.$log.log('loaded user ' + JSON.stringify(user))\n\t\t\t\t\t\tlet matches = this.AppService.getMutualMatches()\n\t\t\t\t\t\tlet match = _.find(matches, match => match.uid1 === userId || match.uid2 === userId)\n\t\t\t\t\t\tthis.isMatch = match ? true : false\n\t\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tpublic deleteUser() {\n\t\t\tlet myThis = this\n\t\t\tthis.$ionicPopup.confirm({\n\t\t\t\ttitle: 'Confirm delete',\n\t\t\t\tokText: 'Delete',\n\t\t\t\tcancelText: 'Cancel'\n\t\t\t}).then(function (res) {\n\t\t\t\tif (res)\n\t\t\t\t\tmyThis.AppUtil.blockingCall(\n\t\t\t\t\t\tmyThis.AppService.deleteUser(myThis.user.id),\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tmyThis.AppUtil.toastSimple('User deleted')\n\t\t\t\t\t\t\tmyThis.$log.info('Deleted user ' + myThis.user.id)\n\t\t\t\t\t\t\tmyThis.$ionicHistory.goBack()\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t})\n\t\t}\n\n\t\tpublic banUser() {\n\t\t\tlet myThis = this\n\t\t\tthis.$ionicPopup.confirm({\n\t\t\t\ttitle: 'Confirm ban',\n\t\t\t\tokText: 'Ban',\n\t\t\t\tcancelText: 'Cancel'\n\t\t\t}).then(function (res) {\n\t\t\t\tif (res)\n\t\t\t\t\tmyThis.AppUtil.blockingCall(\n\t\t\t\t\t\tmyThis.AppService.reportProfile('admin reporting reasons', myThis.user.profile, null),\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tmyThis.AppService.banUser(myThis.user.id).then(\n\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\tmyThis.AppUtil.toastSimple('User banned')\n\t\t\t\t\t\t\t\t\tmyThis.$log.info('Banned user ' + myThis.user.id)\n\t\t\t\t\t\t\t\t\tmyThis.$ionicHistory.goBack()\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tpublic connectUser() {\n\t\t\tlet myThis = this\n\t\t\tthis.$ionicPopup.confirm({\n\t\t\t\ttitle: 'Connect to user',\n\t\t\t\tokText: 'Connect',\n\t\t\t\tcancelText: 'Cancel'\n\t\t\t}).then(function (res) {\n\t\t\t\tif (res)\n\t\t\t\t\tmyThis.AppUtil.blockingCall(\n\t\t\t\t\t\tmyThis.AppService.processMatchFromAdmin(myThis.user.profile, true, true),\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tmyThis.AppUtil.toastSimple('User connected')\n\t\t\t\t\t\t\tmyThis.$log.info('Established connection on user' + myThis.user.id)\n\t\t\t\t\t\t\tmyThis.$ionicHistory.goBack()\n\t\t\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tUserAdmin.$inject = ['$ionicPopup', '$log', '$scope', '$ionicHistory', '$state', '$stateParams', 'AppService', 'AppUtil']\n\tangular.module('controllers').controller('UserAdmin', UserAdmin)\n}\n","module app {\n\n    export class VoteReport {\n        public voteReports = null\n        public voterReport = null\n        public findUs: IFindUs\n\n        constructor(private $log: ng.ILogService, private $scope: ng.IScope,\n            private AppService: IAppService, private AppUtil: AppUtil) {\n\n            $scope.$on('$ionicView.beforeEnter', () => this.refresh())\n\n        }\n\n        public refresh() {\n            this.voteReports = null\n            this.voterReport = null\n            this.AppUtil.blockingCall(\n                this.AppService.getFindUsReport(),\n                items => {\n                    this.voterReport = {}\n                    this.$log.log('loaded ' + items.length + ' items')\n                    this.voteReports = items\n                    this.voteReports.forEach(a => {\n                        if (a.name in this.voterReport)\n                            this.voterReport[a.name]++\n                        else\n                            this.voterReport[a.name] = 1;\n                    })\n                })\n        }\n    }\n\n    VoteReport.$inject = ['$log', '$scope', 'AppService', 'AppUtil']\n    angular.module('controllers').controller('VoteReport', VoteReport)\n}\n","module app {\n\n    export class WhereUFindUsAdmin {\n        private modalText = \"New \"\n        public findUsGroup\n        public findUs: IFindUs\n        private findUsModal\n        private submitted = false;\n\n        constructor(private $ionicPopup, private $log: ng.ILogService, private $scope: ng.IScope,\n            private $state, private $ionicModal, private AppService: IAppService, private AppUtil: AppUtil) {\n\n            $scope.$on('$ionicView.beforeEnter', () => this.refresh())\n\n            // // Cleanup the modal when we're done with it\n            $scope.$on('$destroy', () => this.findUsModal.remove())\n\n            $ionicModal.fromTemplateUrl('templates/modal.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(modal => this.findUsModal = modal)\n        }\n\n        public refresh() {\n            this.AppUtil.blockingCall(\n                this.AppService.getFindUs(),\n                items => {\n                    this.$log.log('loaded ' + items.length + ' items')\n                    this.findUsGroup = items\n                })\n        }\n\n        public addFindUs(form) {\n            this.submitted = true\n            if (form.$valid) {\n                this.AppUtil.blockingCall(\n                    this.AppService.addFindUs(this.findUs),\n                    () => {\n                        this.modalText = \"New \"\n                        this.findUs = null\n                        this.AppUtil.toastSimple(\"Saved Successfully\")\n                        this.refresh()\n                    })\n                setTimeout(this.resetForm(form), 1000)\n            }\n        }\n\n        public editFindUs(question) {\n            this.modalText = \"Update \"\n            this.findUs = question.toJSON()\n            this.findUsModal.show()\n        }\n\n        public deleteFindUs(id) {\n            this.$log.log('Delete find us name ' + id)\n            var _this = this\n            this.$ionicPopup.confirm({\n                title: 'Delete',\n                template: 'Are you sure you want to delete this item?'\n            }).then(function (res) {\n                if (res)\n                    _this.deleteQ(id)\n            });\n        }\n\n        public deleteQ(id) {\n            this.AppUtil.blockingCall(\n                this.AppService.delFindUs(id),\n                () => {\n                    this.AppUtil.toastSimple(\"Deleted Successfully\")\n                    this.refresh()\n                })\n        }\n\n        public close() {\n            this.modalText = \"New \"\n            this.findUs = null\n            this.findUsModal.hide()\n        }\n\n        public resetForm(form) {\n            this.findUs = null\n            this.findUsModal.hide()\n            form.$setPristine()\n            form.$setUntouched()\n        }\n\n    }\n\n    WhereUFindUsAdmin.$inject = ['$ionicPopup', '$log', '$scope', '$state', '$ionicModal', 'AppService', 'AppUtil']\n    angular.module('controllers').controller('WhereUFindUsAdmin', WhereUFindUsAdmin)\n}\n","\n/**\n * Displays the appropriate profile image for a chat.\n * If there are two people in a chat, then always display the other person\n * If multiple people show the image of the last person who messaged, excluding the current user.\n * If no messages yet, then the person who last joined the chat\n */\nangular.module('ionicApp').directive('chatProfileImage', function(AppService:app.IAppService) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\tchat: '='\n\t\t},\n\t\ttemplate: '<img ng-src=\"{{::photoUrl}}\" img-cache>',\n\t\treplace: true, // Need replace otherwise when its used in the menu bar it doesnt work\n\t\tcontroller: function($scope) {\n\t\t\tlet chat:IMatch = $scope.chat\n\n\t\t\t// TODO\n\t\t}\n\t}\n});\n","\n/**\n * A directive to display an unread count badge\n */\nangular.module('ionicApp').directive('unreadChatsBadge', function(AppService:app.IAppService) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {},\n\t\ttemplate: '<span ng-show=\"unreadChats > 0\" class=\"badge badge-assertive nav-icon-badge\">{{unreadCount}}</span>',\n\t\treplace: true, // Need replace otherwise when its used in the menu bar it doesnt work\n\t\tcontroller: function($scope) {\n\t\t\t$scope.unreadCount = AppService.getUnreadChatsCount()\n\t\t\t$scope.$on('unreadChatsCountUpdated', () => $scope.unreadCount = AppService.getUnreadChatsCount())\n\t\t}\n\t}\n});\n","\ninterface FacebookDetailsScope extends ng.IScope {\n\tlikes\n\tfriends\n}\n/**\n * Display the facebook information for the currenly logged in user\n */\nangular.module('ionicApp').directive('facebookDetails', function(AppService:IAppService, $rootScope:app.IAppRootScope, $cordovaFacebook) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {},\n\t\ttemplateUrl: 'facebook/facebook-details.html',\n\n\t\tcontroller: function($scope:FacebookDetailsScope) {\n\t\t\tif ($rootScope.facebookConnected) {\n\t\t\t\t// Load the cached values first for quick update on the UI\n\t\t\t\tvar likes = localStorage.getItem('facebookLikes')\n\t\t\t\tif (likes)\n\t\t\t\t\t$scope.likes = JSON.parse(likes)\n\n\t\t\t\tvar friends = localStorage.getItem('facebookFriends')\n\t\t\t\tif (friends)\n\t\t\t\t\t$scope.friends = JSON.parse(friends)\n\n\t\t\t\t// Update asynchronously\n\t\t\t\t// Only friends registered with your app will be returned\n\t\t\t\t// See http://stackoverflow.com/questions/23417356/facebook-graph-api-v2-0-me-friends-returns-empty-or-only-friends-who-also-u\n\t\t\t\t$cordovaFacebook.api('/me/friends').then(result => {\n\t\t\t\t\t$scope.friends = result.data\n\t\t\t\t\tlocalStorage.setItem('facebookFriends', JSON.stringify(result.data))\n\n\t\t\t\t\t$cordovaFacebook.api('/me/likes').then(result => {\n\t\t\t\t\t\t$scope.likes = result.data\n\t\t\t\t\t\tlocalStorage.setItem('facebookLikes', JSON.stringify(result.data))\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n})\n","import ITranslateService = angular.translate.ITranslateService\n\nmodule app {\n\texport class SearchProfileView {\n\n\t\tprivate translations\n\t\tpublic profile: IProfile\n\t\tpublic profilePointer\n\n\t\tstatic $inject = ['$log', '$scope', '$stateParams', '$ionicHistory', '$ionicActionSheet', 'AppUtil', 'AppService', '$translate']\n\t\tconstructor(private $log: ng.ILogService, private $scope: ng.IScope, private $stateParams, private $ionicHistory,\n\t\t\tprivate $ionicActionSheet, private AppUtil: AppUtil, private AppService: IAppService,\n\t\t\tprivate $translate: ITranslateService) {\n\n\t\t\t$translate(['REQUEST_FAILED', 'REPORT', 'INAPPROPRIATE_CONTENT', 'CANCEL']).then(translationsResult => {\n\t\t\t\tthis.translations = translationsResult\n\t\t\t})\n\t\t\t$scope.$on('$ionicView.beforeEnter', (event, data) => this.ionViewWillEnter())\n\t\t}\n\n\t\tionViewWillEnter() {\n\t\t\tthis.profile = this.$stateParams['profile']\n\t\t\tthis.$scope['profile'] = this.profile\n\t\t\tthis.AppService.getProfileOfSelectedUser(this.profile.objectId).then(profilePointer => {\n\t\t\t\tthis.profilePointer = profilePointer\n\t\t\t})\n\t\t}\n\n\t\tlike() {\n\t\t\tlet match = this.AppService.getProfileSearchResults().pop()\n\t\t\tthis.AppService.processMatch(match, true)\n\t\t\tthis.$ionicHistory.goBack()\n\t\t}\n\n\t\treject() {\n\t\t\tlet match = this.AppService.getProfileSearchResults().pop()\n\t\t\tthis.AppService.processMatch(match, false)\n\t\t\tthis.$ionicHistory.goBack()\n\t\t}\n\n\t\tprofileOptions() {\n\t\t\tthis.$ionicActionSheet.show({\n\t\t\t\tdestructiveText: this.translations.REPORT,\n\t\t\t\ttitleText: this.translations.INAPPROPRIATE_CONTENT,\n\t\t\t\tcancelText: this.translations.CANCEL,\n\t\t\t\tcancel: function () {/**/ },\n\t\t\t\tdestructiveButtonClicked: index => {\n\t\t\t\t\tthis.report()\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\treport() {\n\t\t\tlet profile = this.AppService.getProfileSearchResults().pop()\n\t\t\tthis.AppUtil.blockingCall(\n\t\t\t\tthis.AppService.reportProfile('inappropriate profile content', this.profilePointer, null),\n\t\t\t\t() => {\n\t\t\t\t\tthis.AppService.processMatch(profile, false)\n\t\t\t\t\tthis.$ionicHistory.goBack()\n\t\t\t\t})\n\t\t}\n\t}\n\n\tangular.module('ionicApp').controller('SearchProfileView', SearchProfileView)\n}\n","/**\n * Filter which displays the age for a profile\n */\nangular.module('ionicApp').filter('profileAge', function() {\n\treturn function(profile:app.IProfile):any {\n\n\t\t// Profiles from other users will have the age\n\t\tif (profile.age)\n\t\t\treturn profile.age\n\t\t// The profile for the current user will have the birthdate\n\t\tif (profile.birthdate)\n\t\t\treturn new Date(new Date - profile.birthdate).getFullYear() - 1970\n\n\t\treturn ''\n\t}\n})\n","import IProfile = app.IProfile\nimport IAppService = app.IAppService\n\n/**\n * A directive to display the main details of a profile\n */\nangular.module('ionicApp').directive('profileDetails', function (AppService: IAppService) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\tprofile: '='\n\t\t},\n\t\ttemplateUrl: 'profile/profile-details.html',\n\n\t\tcontroller: function ($scope) {\n\t\t\tlet currentUserProfile = AppService.getProfile()\n\t\t\tlet myLocation = currentUserProfile.location\n\t\t\tlet profile = <IProfile>$scope.profile\n\n\n\t\t\t//address and flags\n\t\t\tif(profile.location._latitude && profile.location._longitude) {\n\t\t\t\tlet geocodingAPI = \"http://maps.googleapis.com/maps/api/geocode/json?latlng=\"+profile.location._latitude+\",\"+profile.location._longitude+\"&sensor=false&language=en\";\n\t\t\t\tlet num;\n\t\t\t\t\n\t\t\t\tfetch(geocodingAPI)\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then((out) => {\n\t\t\t\t\tprofile.address = out['results'][0].formatted_address;\n\t\t\t\t\tif (out['results'][6]) num = 6 \n\t\t\t\t\telse if (out['results'][5]) num = 5 \n\t\t\t\t\telse if (out['results'][4]) num = 4\n\t\t\t\t\tprofile.country = out['results'][num].formatted_address;\n\t\t\t\t\t\n\t\t\t\t})\n\t\t\t\t.catch(err => console.error(err));\n\t\t\t}\n\n\t\t\t// Calculate the distance between this profile location and the current users profile location\n\t\t\tif (myLocation && profile.location) {\n\t\t\t\tlet distance = GeoUtils.getDistanceFromLatLonInKm(profile.location.latitude, profile.location.longitude,\n\t\t\t\t\tmyLocation.latitude, myLocation.longitude)\n\t\t\t\tif (currentUserProfile.distanceType === 'mi')\n\t\t\t\t\tdistance *= 0.621371\n\t\t\t\tlet distanceString = distance.toFixed(0)\n\t\t\t\t// Show 1km/1m as a minimum‰\n\t\t\t\t$scope.distance = (distanceString === '0' ? 1 : distanceString) + currentUserProfile.distanceType\n\t\t\t}\n\t\t\t$scope.isCurrentUser = profile.id === currentUserProfile.id\n\t\t}\n\t}\n})\n","module app {\n\n\timport ITranslateService = angular.translate.ITranslateService\n\n\tclass ProfilePhoto {\n\n\t\tselected: boolean\n\t\tfile: IFile\n\n\t\tconstructor(file: IFile) {\n\t\t\tthis.file = file\n\t\t\tthis.selected = false\n\t\t}\n\t}\n\n\t/**\n\t * Controller for editing the users profile\n\t */\n\texport class ProfileEdit {\n\n\t\t// If you increase MAX_PHOTOS you will need to update LocalDB to have more photoN columns in the local SQL db\n\t\tpublic MAX_PHOTOS: number = 3\n\t\tpublic NO_IMAGE: string = 'img/add.png'\n\n\t\tpublic profile: IProfile\n\t\tpublic photos: ProfilePhoto[] = []\n\t\tpublic photosInReview: ProfilePhoto[] = []\n\t\tpublic about: string\n\t\tpublic personCategory: string\n\t\tpublic personType: string\n\t\tpublic personSperm: boolean\n\t\tpublic personEgg: boolean\n\t\tpublic personWomb: boolean\n\t\tpublic personEmbryo: boolean\n\t\tpublic personHelpLevel: string\n\n\t\tprivate $log: ng.ILogService\n\t\tprivate $rootScope: app.IAppRootScope\n\t\tprivate $scope: ng.IScope\n\t\tprivate $state\n\t\tprivate $q: ng.IQService\n\t\tprivate $ionicActionSheet\n\t\tprivate $cordovaCamera\n\t\tprivate AppService: IAppService\n\t\tprivate AppUtil\n\t\tprivate $translate: ITranslateService\n\t\tprivate $ionicHistory\n\t\tprivate $ionicPopup\n\n\t\tconstructor($log: ng.ILogService, $rootScope: app.IAppRootScope, $scope: ng.IScope, $q: ng.IQService,\n\t\t\t$state, $ionicActionSheet, $cordovaCamera, AppService: IAppService, AppUtil, $translate: ITranslateService,\n\t\t\t$ionicHistory, $ionicPopup) {\n\t\t\tthis.$log = $log\n\t\t\tthis.$rootScope = $rootScope\n\t\t\tthis.$scope = $scope\n\t\t\tthis.$q = $q\n\t\t\tthis.$state = $state\n\t\t\tthis.$ionicActionSheet = $ionicActionSheet\n\t\t\tthis.$cordovaCamera = $cordovaCamera\n\t\t\tthis.AppService = AppService\n\t\t\tthis.AppUtil = AppUtil\n\t\t\tthis.$translate = $translate\n\t\t\tthis.$ionicHistory = $ionicHistory\n\t\t\tthis.$ionicPopup = $ionicPopup\n\t\t\tthis.$scope.options = {\n\t\t\t\tonlyExternal: true,\n\t\t\t\tspeed: 700\n\t\t\t}\n\n\t\t\tthis.$scope.$on('$ionicView.beforeEnter', () => this.refresh())\n\t\t\tthis.$scope.$on('$ionicView.enter', () => this.expandText())\n\t\t\tthis.$scope.$on(\"$ionicSlides.sliderInitialized\", function (event, data) {\n\t\t\t\t// data.slider is the instance of Swiper\n\t\t\t\t$scope.slider = data.slider\n\t\t\t})\n\n\t\t\tthis.$scope.$on(\"$ionicSlides.slideChangeStart\", function (event, data) {\n\t\t\t\tconsole.log('Slide change is beginning')\n\t\t\t})\n\t\t}\n\n\t\tprivate refresh() {\n\t\t\tthis.profile = this.AppService.getProfile()\n\t\t\tthis.about = this.profile.about\n\t\t\tthis.personCategory = this.profile.personCategory\n\t\t\tthis.personType = this.profile.personType\n\t\t\tthis.personSperm = this.profile.personSperm\n\t\t\tthis.personEgg = this.profile.personEgg\n\t\t\tthis.personWomb = this.profile.personWomb\n\t\t\tthis.personEmbryo = this.profile.personEmbryo\n\t\t\tthis.personHelpLevel = this.profile.personHelpLevel\n\t\t\tthis.photos = _.map(this.profile.photos, photo => new ProfilePhoto(photo))\n\t\t\tthis.photosInReview = this.profile.photosInReview\n\t\t\t\t? _.map(this.profile.photosInReview, photo => new ProfilePhoto(photo))\n\t\t\t\t: []\n\n\t\t\tthis.onRedirectToEditProfile(false)\n\t\t}\n\n\n\n\n\t\tpublic selectedCount() {\n\t\t\treturn _.filter(this.photos, (photo) => photo.selected).length\n\t\t}\n\n\t\tpublic canAddPhoto(): boolean {\n\t\t\treturn this.photos.length + this.photosInReview.length < this.MAX_PHOTOS\n\t\t}\n\n\t\t/**\n\t\t * @returns {boolean} if any of the photos or photos in review are selected\n\t\t */\n\t\tpublic canDeletePhotos() {\n\t\t\treturn _.filter(this.photos, (photo) => photo.selected).length + _.filter(this.photosInReview, (photo) => photo.selected).length > 0\n\t\t}\n\n\t\t/**\n\t\t * Deletes the selected photos from the profile\n\t\t */\n\t\tpublic deletePhotos() {\n\t\t\tlet profileUpdate = <IProfile>{}\n\n\t\t\t// Extract the unselected photos and update the profile with those\n\t\t\tlet remainingPhotos = _.filter(this.photos, (photo) => !photo.selected)\n\t\t\tprofileUpdate.photos = _.map(remainingPhotos, (photo) => photo.file)\n\n\t\t\tlet remainingInReviewPhotos = _.filter(this.photosInReview, (photo) => !photo.selected)\n\t\t\tprofileUpdate.photosInReview = _.map(remainingInReviewPhotos, (photo) => photo.file)\n\n\t\t\tthis.AppUtil.blockingCall(\n\t\t\t\tthis.AppService.saveProfile(profileUpdate),\n\t\t\t\t() => this.refresh()\n\t\t\t)\n\t\t}\n\n\t\t/**\n\t\t * Swaps the position of the selected photos. This should only be called when there is two selected.\n\t\t */\n\t\tpublic swapPhotos() {\n\t\t\t// Find the indexes of the two selected photos\n\t\t\tlet first = _.findIndex(this.photos, photo => photo.selected)\n\t\t\tlet last = _.findLastIndex(this.photos, photo => photo.selected)\n\n\t\t\tlet profileUpdate = <IProfile>{}\n\t\t\tthis.swapArrayElements(this.photos, first, last)\n\t\t\tprofileUpdate.photos = _.map(this.photos, (photo) => photo.file)\n\n\t\t\tthis.AppUtil.blockingCall(\n\t\t\t\tthis.AppService.saveProfile(profileUpdate),\n\t\t\t\t() => this.refresh()\n\t\t\t)\n\t\t}\n\n\t\t/**\n\t\t * Toggle the selected state of a photo\n\t\t * @param index the photos array index\n\t\t */\n\t\tpublic toggleSelected(photo) {\n\t\t\tphoto.selected = !photo.selected\n\t\t}\n\n\t\t/**\n\t\t * Add a profile photo\n\t\t */\n\t\tpublic addPhoto() {\n\t\t\tvar buttons = [{ text: this.$translate.instant('TAKE_PHOTO') }, { text: this.$translate.instant('GALLERY') }]\n\t\t\tif (this.$rootScope.facebookConnected)\n\t\t\t\tbuttons.push({ text: 'Facebook' })\n\n\t\t\tthis.$ionicActionSheet.show({\n\t\t\t\tbuttons: buttons,\n\t\t\t\ttitleText: this.$translate.instant('SELECT_PHOTO_SOURCE'),\n\t\t\t\tcancelText: this.$translate.instant('CANCEL'),\n\t\t\t\tbuttonClicked: index => {\n\t\t\t\t\tif (index === 2) {\n\t\t\t\t\t\tthis.$state.go('^.fb-albums')\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!ionic.Platform.isWebView()) {\n\t\t\t\t\t\t\t// TODO implement file upload for normal browsers\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet sourceType: number = index === 0 ? Camera.PictureSourceType.CAMERA :\n\t\t\t\t\t\t\tCamera.PictureSourceType.PHOTOLIBRARY\n\n\t\t\t\t\t\tvar options = {\n\t\t\t\t\t\t\tquality: 70,\n\t\t\t\t\t\t\tdestinationType: Camera.DestinationType.DATA_URL,\n\t\t\t\t\t\t\tsourceType: sourceType,\n\t\t\t\t\t\t\tallowEdit: false, // allowEdit allows native cropping. However not all devices\n\t\t\t\t\t\t\t// support it, so just use JavaScript cropping for now\n\t\t\t\t\t\t\tencodingType: Camera.EncodingType.PNG,\n\t\t\t\t\t\t\ttargetWidth: 800,\n\t\t\t\t\t\t\ttargetHeight: 800,\n\t\t\t\t\t\t\t// popoverOptions: new CameraPopoverOptions(300, 300, 200, 200, Camera.PopoverArrowDirection.ARROW_ANY),\n\t\t\t\t\t\t\tsaveToPhotoAlbum: false\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.$cordovaCamera.getPicture(options).then(imageData => {\n\t\t\t\t\t\t\t// TODO don't use root scope - pass as param\n\t\t\t\t\t\t\tvar dataUrl = 'data:image/jpeg;base64,' + imageData\n\t\t\t\t\t\t\tthis.$rootScope.cropPhoto = dataUrl\n\t\t\t\t\t\t\tthis.$state.go('^.crop') // , {imageData: 'data:image/jpeg;base64,' + imageData}\n\t\t\t\t\t\t}, error => {\n\t\t\t\t\t\t\tif (error === 'has no access to assets') {\n\t\t\t\t\t\t\t\tthis.AppUtil.toastSimple('Access to photo gallery denied')\n\t\t\t\t\t\t\t\tthis.$log.error('$cordovaCamera.getPicture error ' + JSON.stringify(error))\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.AppUtil.toastSimpleTranslate('PHOTO_ERROR')\n\t\t\t\t\t\t\t\tthis.$log.error('$cordovaCamera.getPicture error ' + JSON.stringify(error))\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tprivate expandText() {\n\t\t\tvar element = <HTMLTextAreaElement>document.querySelector('#aboutYou')\n\t\t\telement.style.height = element.scrollHeight + 'px'\n\t\t}\n\n\t\t/**\n\t\t * Swap the elements in an array at indexes x and y.\n\t\t *\n\t\t * @param (array) The array.\n\t\t * @param (a) The index of the first element to swap.\n\t\t * @param (b) The index of the second element to swap.\n\t\t */\n\t\tprivate swapArrayElements(array: any[], a, b) {\n\t\t\tvar temp = array[a]\n\t\t\tarray[a] = array[b]\n\t\t\tarray[b] = temp\n\t\t}\n\n\t\tpublic saveProfile() {\n\t\t\tlet profileUpdate = <IProfile>{}\n\t\t\tprofileUpdate.about = this.about\n\t\t\tprofileUpdate.personCategory = this.personCategory ? this.personCategory : '0'\n\t\t\tprofileUpdate.hasSelfId = true\n\t\t\tif (this.personCategory === '3') {\n\t\t\t\tprofileUpdate.personType = '0'\n\t\t\t\tprofileUpdate.personSperm = false\n\t\t\t\tprofileUpdate.personEgg = false\n\t\t\t\tprofileUpdate.personWomb = false\n\t\t\t\tprofileUpdate.personEmbryo = false\n\t\t\t\tprofileUpdate.personHelpLevel = '0'\n\t\t\t} else {\n\t\t\t\tprofileUpdate.personType = this.personType ? this.personType : '0'\n\t\t\t\tprofileUpdate.personSperm = this.personSperm ? this.personSperm : false\n\t\t\t\tprofileUpdate.personEgg = this.personEgg ? this.personEgg : false\n\t\t\t\tprofileUpdate.personWomb = this.personWomb ? this.personWomb : false\n\t\t\t\tprofileUpdate.personEmbryo = this.personEmbryo ? this.personEmbryo : false\n\t\t\t\tprofileUpdate.personHelpLevel = this.personHelpLevel ? this.personHelpLevel : '0'\n\t\t\t}\n\n\t\t\tlet thingsIHave = \"\"\n\t\t\tif (profileUpdate.personSperm)\n\t\t\t\tthingsIHave += \"S\"\n\n\t\t\tif (profileUpdate.personEgg)\n\t\t\t\tthingsIHave += \"E\"\n\n\t\t\tif (profileUpdate.personWomb)\n\t\t\t\tthingsIHave += \"W\"\n\n\t\t\tif (profileUpdate.personEmbryo)\n\t\t\t\tthingsIHave += \"Y\"\n\n\t\t\tif (this.personCategory !== '3' && !profileUpdate.personSperm && !profileUpdate.personEgg && !profileUpdate.personWomb && !profileUpdate.personEmbryo)\n\t\t\t\tthingsIHave += \"X\"\n\n\t\t\tprofileUpdate.thingsIHave = thingsIHave\n\n\t\t\t// if (this.about)\n\t\t\t\tthis.AppUtil.blockingCall(\n\t\t\t\t\tthis.AppService.saveProfile(profileUpdate),\n\t\t\t\t\t() => {\n\t\t\t\t\t\tthis.refresh()\n\t\t\t\t\t\tthis.$ionicHistory.nextViewOptions({\n\t\t\t\t\t\t\thistoryRoot: false,\n\t\t\t\t\t\t\tdisableBack: true\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (this.profile.about) {\n\t\t\t\t\t\t\tthis.$state.go('menu.profile')\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t// else\n\t\t\t// \tthis.onRedirectToEditProfile(true);\n\t\t}\n\n\t\t/**\n\t\t * Custom go back\n\t\t */\n\t\tpublic myGoBack() {\n\t\t\t// if (this.profile.about)\n\t\t\t\tthis.$ionicHistory.goBack()\n\t\t\t// else\n\t\t\t// \tthis.onRedirectToEditProfile(false);\n\t\t}\n\n\t\tpublic onRedirectToEditProfile(forceShow) {\n\t\t\tif (!this.profile.about || forceShow) {\n\t\t\t\tvar alertPopup = this.$ionicPopup.alert({\n\t\t\t\t\ttitle: 'We need more information',\n\t\t\t\t\tcssClass: 'center',\n\t\t\t\t\ttemplate: 'Your \"About Me\" section is empty.</br> Everyone is looking for someone with a compatible vision. A deep description adds value to the community, tell us about you.'\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tpublic onClickBadgeInfo() {\n\t\t\tvar alertPopup = this.$ionicPopup.alert({\n\t\t\t\ttitle: 'Self Identification Badges',\n\t\t\t\ttemplateUrl: 'badgeInfo.html',\n\t\t\t\tbuttons: [{\n\t\t\t\t\ttext: 'Ok',\n\t\t\t\t\ttype: 'button-assertive',\n\n\t\t\t\t}]\n\t\t\t})\n\t\t}\n\t}\n\n\tProfileEdit.$inject = ['$log', '$rootScope', '$scope', '$q', '$state', '$ionicActionSheet', '$cordovaCamera',\n\t\t'AppService', 'AppUtil', '$translate', '$ionicHistory', '$ionicPopup']\n\tangular.module('controllers').controller('ProfileEdit', ProfileEdit)\n}\n","/**\n * Filter which encapsulates calculating the image URL for a profile\n */\nangular.module('ionicApp').filter('profileImageUrl', function() {\n\treturn function(profile:app.IProfile):string {\n\n\t\tif (!profile) return ''\n\n\t\tif (profile.photos && profile.photos.length) {\n\t\t\tvar photo = profile.photos[0]\n\t\t\t// The Parse JSON format converts the the url() functions to the _url field\n\t\t\tif (photo['_url'])\n\t\t\t\treturn photo['_url']\n\t\t\tif (angular.isFunction(photo.url))\n\t\t\t\treturn photo.url()\n\t\t\tif (angular.isString(photo.url)) {\n\t\t\t\tlet url:any = photo['url']\n\t\t\t\treturn <string>url\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'img/generic_avatar.jpg'\n\t}\n})\n","import IAppRootScope = app.IAppRootScope\n\n\nmodule app {\n\n\t/**\n\t * Controller for viewing the current users profile\n\t */\n\texport class ProfileViewCurrentUser {\n\n\t\tconstructor(private $rootScope:IAppRootScope, private $scope:ng.IScope, private $state,\n\t\t\t\t\tprivate AppService:IAppService) {\n\t\t\t$scope.$on('$ionicView.beforeEnter', () => this.ionViewWillEnter())\n\t\t}\n\n\t\tpublic profile:IProfile\n\n\t\tionViewWillEnter() {\n\t\t\tthis.profile = this.AppService.getProfile()\n\t\t\tthis.$scope['profile'] = this.profile\n\t\t}\n\t}\n\n\tProfileViewCurrentUser.$inject = ['$rootScope', '$scope', '$state', 'AppService']\n\tangular.module('ionicApp').controller('ProfileViewCurrentUser', ProfileViewCurrentUser)\n}\n","/**\n * Filter which returns the URL for a File object\n */\nangular.module('ionicApp').filter('fileUrl', function() {\n\treturn function(file:any):string {\n\n\t\tif (!file)\n\t\t\treturn null\n\t\tif (file._url)\n\t\t\treturn file._url\n\t\tif (angular.isFunction(file.url))\n\t\t\treturn file.url()\n\t\tif (angular.isString(file.url))\n\t\t\treturn file['url']\n\n\t\tthrow 'unknown file ' + JSON.stringify(file)\n\t}\n})\n","/**\n * Filters which contain app specific functionality\n *\n */\nangular.module('ionicApp')\n\n\n\t.filter('distance', ['AppService', function(AppService:app.IAppService) {\n\t\t/**\n\t\t * Takes a ILocation and outputs the distance from the current users profile location\n\t\t */\n\t\treturn function(location:app.ILocation):string {\n\n\t\t\tif (!location || !angular.isNumber(location.latitude) || !angular.isNumber(location.longitude))\n\t\t\t\treturn ''\n\n\t\t\tvar userProfile = AppService.getProfile()\n\n\t\t\tvar from = userProfile.location\n\t\t\tvar to = location\n\n\t\t\tvar distance = getDistanceFromLatLonInKm(from.latitude, from.longitude, to.latitude, to.longitude)\n\n\t\t\tif (userProfile.distanceType === 'mi')\n\t\t\t\tdistance *= 0.621371\n\n\t\t\tlet output:string = distance.toFixed(0)\n\t\t\t// Always say at least 1km even if less than that\n\t\t\toutput = output === '0' ? '1' : output\n\n\t\t\toutput += userProfile.distanceType\n\n\t\t\treturn output\n\n\n\t\t\t// from http://stackoverflow.com/questions/27928/how-do-i-calculate-distance-between-two-latitude-longitude-points\n\t\t\tfunction getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2): number {\n\t\t\t\tvar R = 6371 // Radius of the earth in km\n\t\t\t\tvar dLat = deg2rad(lat2 - lat1)\n\t\t\t\tvar dLon = deg2rad(lon2 - lon1)\n\t\t\t\tvar a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n\t\t\t\t\tMath.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *\n\t\t\t\t\tMath.sin(dLon / 2) * Math.sin(dLon / 2);\n\t\t\t\tvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n\t\t\t\tvar d = R * c // Distance in km\n\t\t\t\treturn d\n\t\t\t}\n\n\t\t\tfunction deg2rad(deg: number): number {\n\t\t\t\treturn deg * (Math.PI / 180)\n\t\t\t}\n\n\t\t}\n\t}])\n","angular.module('ionicApp')\n\t/*\n\t * Decorates the angular log service to submit error messages to the Parse backend.\n\t * The last 10 log messages are also sent to add to the context of the error message.\n\t * Server submissions are limited to once every 10 seconds and duplicate error messages\n\t * in a row are not sent to avoid spamming the server.\n\t */\n\t.config([ '$provide', 'serverUrl', function( $provide, serverUrl, parseAppId ) {\n\n\t\tif (!serverUrl) {\n\t\t\tconsole.error('ERROR: serverUrl config value not configured for logging')\n\t\t\treturn\n\t\t}\n\n\t\t// The static part of the HTTP POST data\n\t\tlet staticData\n\t\tlet appService\n\n\t\t$provide.decorator( '$log', [ '$delegate', '$injector', function( $delegate, $injector ) {\n\t\t\tvar debugFn = $delegate.debug\n\t\t\tvar infoFn = $delegate.info\n\t\t\tvar logFn = $delegate.log\n\t\t\tvar warnFn = $delegate.warn\n\t\t\tvar errorFn = $delegate.error\n\n\t\t\tvar appService\n\n\t\t\tconst MAX_RECENT = 30\n\t\t\tconst MIN_TIME_DELAY = 10 * 1000\n\t\t\tvar recent = []\n\n\t\t\tvar lastError = ''\n\t\t\tvar lastSubmitTime = 0\n\n\t\t\t// Update the list of recent $log messages\n\t\t\tfunction updateRecent(args) {\n\t\t\t\ttry {\n\t\t\t\t\tif (args[0]) {\n\t\t\t\t\t\trecent.unshift(args[0])\n\t\t\t\t\t\tif (recent.length > MAX_RECENT)\n\t\t\t\t\t\t\trecent.pop()\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { //\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$delegate.debug = function() {\n\t\t\t\tvar args = [].slice.call(arguments)\n\t\t\t\tdebugFn.apply(null, args)\n\t\t\t\tupdateRecent(args)\n\t\t\t}\n\n\t\t\t$delegate.info = function() {\n\t\t\t\tvar args = [].slice.call(arguments)\n\t\t\t\tinfoFn.apply(null, args)\n\t\t\t\tupdateRecent(args)\n\t\t\t}\n\n\t\t\t$delegate.log = function() {\n\t\t\t\tvar args = [].slice.call(arguments)\n\t\t\t\tlogFn.apply(null, args)\n\t\t\t\tupdateRecent(args)\n\t\t\t}\n\n\t\t\t$delegate.warn = function() {\n\t\t\t\tvar args = [].slice.call(arguments)\n\t\t\t\twarnFn.apply(null, args)\n\t\t\t\tupdateRecent(args)\n\t\t\t}\n\n\t\t\t$delegate.error = function() {\n\t\t\t\tvar args = [].slice.call(arguments)\n\t\t\t\terrorFn.apply(null, args)\n\n\t\t\t\ttry {\n\t\t\t\t\tif (!staticData) {\n\t\t\t\t\t\t// Need to do this here when the platform is ready and the version has been set in the root scope\n\t\t\t\t\t\tconst $rootScope = $injector.get('$rootScope')\n\t\t\t\t\t\tstaticData = '&appVersion=' + $rootScope.appVersion\n\t\t\t\t\t\t\t+ '&platform=' + encodeURIComponent(ionic.Platform.platform())\n\t\t\t\t\t\t\t+ '&platformVersion=' + encodeURIComponent('' + ionic.Platform.version())\n\n\t\t\t\t\t\tappService = $injector.get('AppService')\n\t\t\t\t\t}\n\n\t\t\t\t\tvar userId = appService.userId\n\t\t\t\t\tvar errorMessage = args[0] || ''\n\n\t\t\t\t\tif (errorMessage !== lastError && Date.now() > (lastSubmitTime + MIN_TIME_DELAY)) {\n\n\n\t\t\t\t\t\tvar xmlHttp = new XMLHttpRequest()\n\t\t\t\t\t\txmlHttp.open('POST', serverUrl + '/client-log', true)\n\t\t\t\t\t\txmlHttp.setRequestHeader('Content-type', 'application/x-www-form-urlencoded')\n\t\t\t\t\t\txmlHttp.setRequestHeader('X-Parse-Application-Id', parseAppId)\n\t\t\t\t\t\tvar data = 'userId=' + encodeURIComponent(userId)\n\t\t\t\t\t\t\t+ '&message=' + encodeURIComponent(errorMessage)\n\t\t\t\t\t\t\t+ '&recent=' + encodeURIComponent(JSON.stringify(recent))\n\t\t\t\t\t\t\t+ staticData\n\n\t\t\t\t\t\tlastError = errorMessage\n\t\t\t\t\t\tlastSubmitTime = Date.now()\n\n\t\t\t\t\t\txmlHttp.send(data)\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.log('Error submitting error log to server:' + e)\n\t\t\t\t}\n\t\t\t\tupdateRecent(args)\n\t\t\t}\n\n\t\t\treturn $delegate\n\t\t}])\n\t}])\n;\n","module app {\n\n\t/**\n\t * Methods for authentication with social sites\n\t */\n\texport class SocialAuth {\n\n\t\tprivate $q:ng.IQService\n\t\tprivate $log:ng.ILogService\n\t\tprivate $http:ng.IHttpService\n\t\tprivate $translate\n\t\tprivate translations\n\n\t\tconstructor($q:ng.IQService, $log:ng.ILogService, $http:ng.IHttpService, $translate) {\n\t\t\tthis.$q = $q\n\t\t\tthis.$log = $log\n\t\t\tthis.$http = $http\n\t\t\tthis.$translate = $translate\n\n\t\t\t// $translate(['REQUEST_FAILED']).then(translationsResult => this.translations = translationsResult)\n\t\t}\n\n\t\t/*\n\t\t * Modified from https://github.com/driftyco/ng-cordova/blob/master/src/plugins/oauth.js\n\t\t *\n\t\t * Sign into the LinkedIn service\n\t\t * https://developer.linkedin.com/docs/oauth2\n\t\t *\n\t\t * @param    string clientId\n\t\t * @param    string clientSecret\n\t\t * @param    array appScope - the permission scope to authorise. For example r_basicprofile, r_emailaddress\n\t\t * @param    string state - A random string to test again CSRS attacks\n\t\t * @return   promise - Resolves to the authentication data\n\t\t */\n\t\tpublic linkedIn (clientId, clientSecret, appScope, state) {\n\t\t\tvar deferred = this.$q.defer()\n\t\t\tif (window.cordova) {\n\t\t\t\tvar cordovaMetadata = cordova.require('cordova/plugin_list').metadata\n\t\t\t\tif (cordovaMetadata.hasOwnProperty('cordova-plugin-inappbrowser') === true ||\n\t\t\t\t\tcordovaMetadata.hasOwnProperty('org.apache.cordova.inappbrowser') === true) {\n\t\t\t\t\tvar browserRef = window.open('https://www.linkedin.com/uas/oauth2/authorization?client_id=' + clientId +\n\t\t\t\t\t\t'&redirect_uri=http://localhost/callback&scope=' + appScope.join(' ') + '&response_type=code&state=' + state,\n\t\t\t\t\t\t'_blank', 'location=no,clearsessioncache=yes,clearcache=yes')\n\t\t\t\t\tbrowserRef.addEventListener('loadstart', event => {\n\t\t\t\t\t\tif ((event.url).indexOf('http://localhost/callback') === 0) {\n\t\t\t\t\t\t\tvar requestToken = (event.url).split('code=')[1]\n\t\t\t\t\t\t\tthis.$http.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded'\n\t\t\t\t\t\t\tthis.$http({method: 'post', url: 'https://www.linkedin.com/uas/oauth2/accessToken',\n\t\t\t\t\t\t\t\tdata: 'client_id=' + clientId + '&client_secret=' + clientSecret + '&redirect_uri=http://localhost/callback'\n\t\t\t\t\t\t\t\t+ '&grant_type=authorization_code' + '&code=' + requestToken })\n\t\t\t\t\t\t\t\t.success(data => {\n\t\t\t\t\t\t\t\t\tdeferred.resolve(data)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.error((data, status) => {\n\t\t\t\t\t\t\t\t\tdeferred.reject('Problem authenticating LinkedIn ' + JSON.stringify(data) + ' ' + JSON.stringify(status))\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t\t\t\tbrowserRef.close()\n\t\t\t\t\t\t\t\t\t}, 10)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tbrowserRef.addEventListener('exit', (event) => {\n\t\t\t\t\t\tdeferred.reject('The LinkedIn sign in flow was canceled')\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.reject('LinkedIn auth: Could not find InAppBrowser plugin')\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdeferred.reject('Cannot authenticate LinkedIn via a web browser')\n\t\t\t}\n\t\t\treturn deferred.promise\n\t\t}\n\n\n\n\t\tstatic socialAuthFactory($q, $log, $http, $tanslate) {\n\t\t\treturn new SocialAuth($q, $log, $http, $tanslate)\n\t\t}\n\t}\n\n\tSocialAuth.socialAuthFactory.$inject = ['$q', '$log', '$http', '$translate']\n\n\tangular.module('SocialAuth', ['pascalprecht.translate'])\n\t\t.factory('SocialAuth', SocialAuth.socialAuthFactory)\n}\n","module app {\n\n\t/**\n\t * Utilities which simplify common actions and abstracts the implementation so it easier to make application wide\n\t * changes to blocking calls, toasts etc\n\t */\n\texport class AppUtil {\n\n\t\tprivate $q:ng.IQService\n\t\tprivate $ionicLoading\n\t\tprivate ionicToast\n\t\tprivate $log:ng.ILogService\n\t\tprivate $translate\n\t\tprivate translations\n\n\t\tconstructor($q:ng.IQService, $ionicLoading, ionicToast, $translate, $log:ng.ILogService) {\n\t\t\tthis.$q = $q\n\t\t\tthis.$ionicLoading = $ionicLoading\n\t\t\tthis.ionicToast = ionicToast\n\t\t\tthis.$log = $log\n\t\t\tthis.$translate = $translate\n\n\t\t\t$translate(['REQUEST_FAILED']).then(translationsResult => this.translations = translationsResult)\n\t\t}\n\n\t\t/**\n\t\t * Shows a toast message\n\t\t * @param message\n\t\t */\n\t\ttoastSimple(message:string) {\n\t\t\tthis.ionicToast.show(message, 'bottom', false, 3000)\n\t\t}\n\n\t\t/**\n\t\t * Shows a toast message\n\t\t * @param translateKey the key used to lookup the translated message\n\t\t */\n\t\ttoastSimpleTranslate(translateKey:string) {\n\t\t\tthis.$translate([translateKey]).then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tlet translation = result[translateKey]\n\t\t\t\t\t\tif (translation === translateKey)\n\t\t\t\t\t\t\tthis.$log.warn('Invalid translation key ' + translateKey)\n\t\t\t\t\t\tthis.toastSimple(translation)\n\t\t\t\t\t},\n\t\t\t\t\terror => this.$log.warn('toast translation error ' + JSON.stringify(error))\n\t\t\t)\n\t\t}\n\n\n\t\t/**\n\t\t * A utility to simplify the common case of making a server call which blocks the user interface, and provides\n\t\t * translation of errors.\n\t\t *\n\t\t * This is an example of how you might use it:\n\t\t * function setLocation = () => AppUtil.blockingCall(\n\t\t *        AppService.saveLocation(newLocation),\n\t\t *        (result) => {marker.setLocation(result); AppUtil.toastSimple('LOCATION_UPDATED')}\n\t\t *        )\n\t\t *\n\t\t * @param promise the promise to resolve\n\t\t * @param successFunction the function to call on resolution of the promise\n\t\t * @param errorTranslateKey the translation key to display an error message for on error\n\t\t * @param errorMessage if no translation key is provided, then displays this error message on an error\n\t\t * @returns {ng.IPromise<any>} the promise passed in as the first argument\n\t\t */\n\t\tblockingCall<T>(promise:ng.IPromise<T>, successFunction?:(result:T) => any, errorTranslateKey?:string, errorMessage?:string) {\n\t\t\tvar ionicLoading = this.$ionicLoading\n\t\t\t// Delay showing the loading spinner for 0.4s\n\t\t\t// See http://yuiblog.com/blog/2010/11/11/improving-perceived-site-performance-with-spinners/\n\t\t\tionicLoading.show({templateUrl: 'loading.html', delay:400})\n\t\t\tpromise.then(result => {\n\t\t\t\tionicLoading.hide()\n\t\t\t\tif (successFunction)\n\t\t\t\t\tsuccessFunction(result)\n\t\t\t}, error => {\n\t\t\t\tionicLoading.hide()\n\n\t\t\t\tlet customError = this.resolveErrorMessage(error)\n\t\t\t\tif (customError) {\n\t\t\t\t\tthis.toastSimple(customError)\n\n\t\t\t\t} else if (errorTranslateKey) {\n\t\t\t\t\tthis.toastSimpleTranslate(errorMessage)\n\n\t\t\t\t} else if (errorMessage) {\n\t\t\t\t\tthis.toastSimple(errorMessage)\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.toastSimple(this.translations['REQUEST_FAILED'])\n\t\t\t\t}\n\t\t\t\tthis.$log.error('Error in blocking call ' + JSON.stringify(error))\n\t\t\t})\n\t\t\treturn promise\n\t\t}\n\n\n\t\t/**\n\t\t * Converts an error into a human friendly message for particular error messages\n\t\t * @param error\n\t\t * @returns {string} if there is a custom error message, else null\n\t\t */\n\t\tresolveErrorMessage(error:any):string {\n\t\t\tthis.$log.error(JSON.stringify(error))\n\t\t\tif (error.code) {\n\t\t\t\t// https://parse.com/docs/js/api/symbols/Parse.Error.html\n\t\t\t\tswitch (error.code) {\n\t\t\t\t\tcase 100: // Parse.ErrorCode.CONNECTION_FAILED\n\t\t\t\t\t\treturn 'Request failed, try again'\n\t\t\t\t\tcase 155: // Parse.ErrorCode.REQUEST_LIMIT_EXCEEDED\n\t\t\t\t\t\treturn 'Server busy, try again later'\n\t\t\t\t\tcase 209: // Parse.ErrorCode.INVALID_SESSION_TOKEN\n\t\t\t\t\t\t// TODO force logout/login\n\t\t\t\t\t\treturn 'Invalid session. Log in again'\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null\n\t\t}\n\n\n\t\tstatic appUtilFactory($q, $ionicLoading, ionicToast, $translate, $log) {\n\t\t\treturn new AppUtil($q, $ionicLoading, ionicToast, $translate, $log)\n\t\t}\n\t}\n\n\tAppUtil.appUtilFactory.$inject = ['$q', '$ionicLoading', 'ionicToast', '$translate', '$log']\n\n\tangular.module('AppUtil', ['ionic', 'pascalprecht.translate', 'ionic-toast'])\n\t\t.factory('AppUtil', AppUtil.appUtilFactory);\n}\n","class GeoUtils {\r\n\r\n\r\n\t// Credit to http://stackoverflow.com/questions/27928/how-do-i-calculate-distance-between-two-latitude-longitude-points\r\n\tstatic getDistanceFromLatLonInKm(lat1:number, lon1:number, lat2:number, lon2:number):number {\r\n\t\tif (!lat1 || !lon1 || !lat2 || !lon2) {\r\n\t\t\tconsole.log('Not all params supplied for getDistanceFromLatLonInKm')\r\n\t\t\treturn null\r\n\t\t}\r\n\t\tvar R = 6371 // Radius of the earth in km\r\n\t\tvar dLat = this.degreesToRadians(lat2 - lat1)\r\n\t\tvar dLon = this.degreesToRadians(lon2 - lon1)\r\n\t\tvar a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n\t\t\tMath.cos(this.degreesToRadians(lat1)) * Math.cos(this.degreesToRadians(lat2)) *\r\n\t\t\tMath.sin(dLon / 2) * Math.sin(dLon / 2)\r\n\t\tvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\r\n\t\tvar d = R * c // Distance in km\r\n\t\treturn d\r\n\t}\r\n\r\n\tstatic degreesToRadians(degrees:number):number {\r\n\t\treturn degrees * (Math.PI / 180)\r\n\t}\r\n\r\n}\r\n","module app {\r\n\r\n\texport interface IImagesUtil {\r\n\t\tconvertImgUrlToBase64(url:string, outputFormat:string): ng.IPromise<string>\r\n\t\tconvertImgIdToBase64(imgId:string): string\r\n\t\tconvertImgToBase64(imgElement:HTMLImageElement): string\r\n\t}\r\n\r\n\texport class ImagesUtil implements IImagesUtil {\r\n\r\n\t\tconstructor(private $q:ng.IQService) {}\r\n\r\n\t\tpublic convertImgUrlToBase64(url:string, outputFormat:string):ng.IPromise<string> {\r\n\t\t\tlet q = this.$q.defer()\r\n\t\t\tlet canvas = <HTMLCanvasElement>document.createElement('CANVAS'),\r\n\t\t\t\tctx = canvas.getContext('2d'),\r\n\t\t\t\timg = new Image\r\n\t\t\timg.crossOrigin = 'Anonymous'\r\n\t\t\timg.onload = () => {\r\n\t\t\t\tlet dataURL:string\r\n\t\t\t\tcanvas.height = img.height\r\n\t\t\t\tcanvas.width = img.width\r\n\t\t\t\tctx.drawImage(img, 0, 0)\r\n\t\t\t\tdataURL = canvas.toDataURL(outputFormat)\r\n\t\t\t\tcanvas = null\r\n\t\t\t\tq.resolve(dataURL)\r\n\t\t\t}\r\n\t\t\timg.onerror = () => q.reject('Failed to load image ' + url)\r\n\r\n\t\t\timg.src = url\r\n\t\t\treturn q.promise\r\n\t\t}\r\n\r\n\r\n\r\n\t\tpublic convertImgIdToBase64(imgId: string): string {\r\n\t\t\tif (!imgId)\r\n\t\t\t\tthrow 'convertImgIdToBase64 requires imgId'\r\n\t\t\tvar img = <HTMLImageElement>document.getElementById(imgId)\r\n\t\t\tif (!img)\r\n\t\t\t\tthrow 'Could not find element with id ' + imgId\r\n\t\t\treturn this.convertImgToBase64(img)\r\n\t\t}\r\n\r\n\t\tpublic convertImgToBase64(imgElement:HTMLImageElement): string {\r\n\t\t\t// imgElem must be on the same server or,\r\n\t\t\t// the img element must have the crossorigin=\"anonymous\" attribute and the server set the otherwise CORS header\r\n\t\t\t// otherwise a cross-origin error will be thrown \"SECURITY_ERR: DOM Exception 18\"\r\n\t\t\tvar canvas = document.createElement('canvas')\r\n\t\t\tcanvas.width = imgElement.clientWidth\r\n\t\t\tcanvas.height = imgElement.clientHeight\r\n\t\t\tvar ctx = canvas.getContext('2d')\r\n\t\t\tctx.drawImage(imgElement, 0, 0)\r\n\t\t\tvar dataURL = canvas.toDataURL('image/png')\r\n\t\t\treturn dataURL.replace(/^data:image\\/(png|jpg);base64,/, '')\r\n\t\t}\r\n\r\n\t\tstatic imagesUtilFactory($q) {\r\n\t\t\treturn new ImagesUtil($q)\r\n\t\t}\r\n\t}\r\n\r\n\tImagesUtil.imagesUtilFactory.$inject = ['$q']\r\n\r\n\tangular.module('ImagesUtil', [])\r\n\t\t.factory('ImagesUtil', ImagesUtil.imagesUtilFactory)\r\n}\r\n"]}
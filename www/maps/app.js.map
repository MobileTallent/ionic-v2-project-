{"version":3,"sources":["util/socialSharing.js","service-user.js","service-parse.js","util/filters-util.js","app.js","util/directives-util.js","translations/en.js","translations/de.js","admin/admin-routes.js","3rdparty/date.format.js","service-localdb.js","route.js","patch.js","controller-signin.js","controller-swipe.js","controller-profile.js","controller-chat.js","constants.js"],"names":["onNotification","pnObj","appService","angular","element","document","body","injector","get","$log","log","JSON","stringify","type","synchronizeChatMessages","synchronizeMutualMatches","removeMatchNotification","matchId","userId","reloadProfile","logout","onNotificationOpen","state","message","match","id","go","enhance","prototype","fields","i","length","propName","proto","Object","defineProperty","this","set","value","module","factory","$q","$window","share","subject","file","link","plugins","socialsharing","reject","q","defer","resolve","promise","shareViaTwitter","shareViaWhatsApp","shareViaFacebook","shareViaFacebookWithPasteMessageHint","pasteMessageHint","shareViaSMS","commaSeparatedPhoneNumbers","shareViaEmail","toArr","ccArr","bccArr","fileArr","shareVia","via","canShareViaEmail","canShareVia","success","error","available","window","isAvailable","filter","text","replace","millisInWeek","date","now","Date","getTime","dateFormat","format","platformReady","fbJsSdkLoaded","app","run","$ionicPlatform","AppService","ImgCache","$rootScope","appName","env","gcpBrowserKey","ready","cordova","Keyboard","hideKeyboardAccessoryBar","StatusBar","styleDefault","init","warn","analytics","startTrackerWithId","console","getVersionNumber","then","version","info","appVersion","bsScript","createElement","src","location","hostname","async","appendChild","googleMapsScript","config","$translateProvider","translations","TRANSLATION_EN","TRANSLATION_DE","useLocalStorage","fallbackLanguage","registerAvailableLanguageKeys","en_*","de_*","useSanitizeValueStrategy","determinePreferredLanguage","$compileProvider","debugInfoEnabled","$ionicConfigProvider","backButton","previousTitleText","ionic","Platform","isWebView","isIOS","icon","jsScrolling","isAndroid","scrolling","ImgCacheProvider","setOptions","usePersistentCache","manualInit","directive","$timeout","$ionicScrollDelegate","$document","restrict","scope","offset","scrollDelegate","template","attr","keyboardShow","event","keyboardHeight","scrollDistance","offsetHeight","css","viewScroll","scrollBy","keyboardHide","scrollFromBottom","getScrollView","getScrollMax","top","getScrollPosition","scrollBottom","$getByHandle","offsetElement","getElementById","addEventListener","$on","removeEventListener","returnClose","onReturn","onFocus","onBlur","bind","e","which","blur","OK","SAVE","SEND","CANCEL","DELETE","EDIT","LOADING","REMOVE","REPORT","LOG_IN","LOGOUT","EMAIL","REGISTER","ADMIN","SENDING","RESEND","ACCEPT","REJECT","CALLING","VERSION","INVALID_EMAIL_PASSWORD","ACCOUNT_BANNED","PULL_TO_REFRESH","LANGUAGE","PASSWORD","RESET_PASSWORD","PASSWORD_RESET_SENT","PASSWORD_LENGTH","INVALID_EMAIL","LOGGING_IN_TO_FB","LOGGING_IN_TO_LINKEDIN","LOADING_PROFILE","LOADING_FB_PROFILE","CREATING_ACCOUNT","WAITING_FOR_GPS","LOGIN_ERROR","VERIFY_EMAIL_MESSAGE","CHECK_EMAIL_VERIFICATION","EMAIL_NOT_VERIFIED","FIRST_NAME_REQUIRED","SURNAME_REQUIRED","BIRTH_DAY_REQUIRED","BIRTH_MONTH_REQUIRED","BIRTH_YEAR_REQUIRED","GENDER_REQUIRED","TERMS_OF_USE","MENU_PROFILE","MENU_MATCHES","MENU_CHAT","MENU_LIKED_ME","MENU_DISCOVERY","MENU_SETTINGS","MENU_CONTACT","MENU_SHARE","MENU_CO_PARENTS","ABOUT_JUST_A_BABY","FAQ","SHARE_VIDEO","PROFILE_SETUP_MSG","BIRTH_DAY","BIRTH_MONTH","BIRTH_YEAR","FIRST_NAME","GENDER","MALE","FEMALE","PROFILE_TITLE","ABOUT","FRIENDS_USING","MY_INTERESTS","EDIT_PROFILE_TITLE","ABOUT_YOU","AWAY","SELECT_PHOTO_SOURCE","TAKE_PHOTO","GALLERY","PHOTO_ERROR","ALBUMS","NO_FB_ALBUMS","ADD_A_PHOTO","CROP_YOUR_PHOTO","DISCOVERY_TITLE","DISCOVERABLE","SHOW_ME","GUYS","GIRLS","SEARCH_DISTANCE","AGED_BETWEEN","SETTINGS_TITLE","NOTIFICATION_SOUND","NEW_MATCH","NEW_MESSAGE","SHOW_DISTANCES_IN","NOT_DISCOVERABLE","ENABLE_DISCOVERY_TO_MEET","ENABLE_DISCOVERY","FINDING_PEOPLE","NO_ONE_NEW","SEARCH_AGAIN","LIKE","NOT_LIKE","LOCATION","SET_LOCATION","USE_GPS_LOCATION","GPS_ERROR","SET_MAP_LOCATION","NO_MATCHES","START_SWIPING","MATCHES_LOAD_ERROR","ITS_A_MATCH","LIKED_EACH_OTHER","SEND_MESSAGE","KEEP_SEARCHING","MATCHED_ON","REMOVE_MATCH","MATCH_OPTIONS","REMOVE_MATCH_ERROR","UNMATCHED","MATCH_REPORTED","WANT_TO_REMOVE_MATCH","INAPPROPRIATE_CONTENT","COPY_TEXT","SAVE_IMAGE","DELETE_MESSAGE","FAILED_TO_SEND","TYPE_YOUR_MESSAGE","MESSAGE_NOT_SENT","INCOMING_CALL_FROM","HANG_UP","WAITING_FOR_REPLY","VIDEO_SERVICE_ERROR","VIDEO_START_ERROR","NO_LIKES","SETTINGS_SAVE_ERROR","REQUEST_FAILED","GIVE_US_FEEDBACK","DELETE_ACCOUNT","","$stateProvider","url","views","menuContent","templateUrl","controller","token","timezone","timezoneClip","pad","val","len","String","mask","utc","dF","arguments","toString","call","test","undefined","isNaN","SyntaxError","masks","slice","_","d","D","m","y","H","M","s","L","o","getTimezoneOffset","flags","dd","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","Math","round","t","tt","T","TT","Z","pop","floor","abs","S","$0","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","_typeof","Symbol","iterator","obj","constructor","$http","$cordovaFacebook","$cordovaGeolocation","$cordovaMedia","$state","$ionicHistory","ParseService","LocalDB","$localStorage","$interval","$translate","adMob","$cordovaBadge","all","server","facebookLogin","facebookResponse","user","service","postLogin","linkedInLogin","authData","signUp","email","password","logIn","autoLogin","reloadUser","setUserId","trackView","getProfiles","profiles","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","profile","profileCache","err","getMatches","dbMatches","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","otherProfile","getMatch","matches","push","refreshUnreadCount","admin","isAdmin","getTwilioToken","result","twilioAccessToken","$broadcast","initInAppPurchases","initAdMob","getUnreadChats","unreadChats","unreadChatsCount","keys","AdMob","adMobIds","navigator","userAgent","android","banner","interstitial","ios","createBanner","adId","position","AD_POSITION","BOTTOM_CENTER","autoShow","store","initCurrentUserProfile","birthdate","age","getFullYear","isEmailVerified","emailVerified","termsOfUseAgreed","when","requestPasswordReset","loadProfile","getProfile","getProfileOfSelectedUser","profileId","getProfileByMatchId","debug","find","refreshedAt","getProfileForMatch","refreshedProfile","assign","getProfileById","getProfileByUserId","goToNextLoginState","status","facebookConnected","isProfileValid","isAcntNew","about","startSynchronisation","nextViewOptions","historyRoot","disableBack","syncFunction","syncCount","MATCH_SYNC_RATIO","synchronizeInterval","CHAT_SYNC_INTERVAL","name","gender","requestLocationServices","locationAccuracy","request","code","ERROR_USER_DISAGREED","confirm","diagnostic","switchToLocationSettings","REQUEST_PRIORITY_HIGH_ACCURACY","getCurrentPosition","timeout","locationServices","geolocation","coords","latitude","longitude","geoPoint","convertLocation","priority","geolocFail","timer","cancel","maximumAge","enableHighAccuracy","saveSettings","mods","notifyMatch","notifyMessage","distanceType","distance","copyFacebookProfile","enableDiscovery","saveProfile","enabled","profileChanges","saveProfileForApplyBadge","fbId","activeChatMatchId","activeChatMessages","localStorage","clear","$reset","isAcntDelete","deleteDb","fbAccessToken","clearCache","deleteAccount","deleteUnmatched","processMatch","liked","processProfile","processMatchFromAdmin","forceConnect","processPregnancy","impregnate","removeMatch","deleteMatch","remove","uid1","uid2","getProfileSearchResults","profileSearchResults","updateProfileSearchResults","searchProfiles","getProfilesWhoLikeMe","getProfilesWhoWantsToHaveARelationshipWithMe","clearProfileSearchResults","getMutualMatches","matchSyncInProgress","matchSyncInRequested","toAdd","matchesChanged","localMatchIds","pluck","serverMatchIds","toRemove","difference","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","removeId","newMatches","rebuildMatches","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","lastMessage","createdAt","read","unshift","saveMatch","playSound","chatSyncInProgress","chatSyncInRequested","matchesById","indexBy","lastChatSyncTime","newMessage","loadChatMessages","messages","saveActions","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","saveNewMessage","results","max","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","newMsg","newActiveMessage","activeMsgsById","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","msg","sort","msg1","msg2","saveChatMessage","isNew","updatedAt","lastMessageAt","sender","getUserId","setChatRead","a","b","getActiveChat","getChatMessages","isBoolean","getUnreadChatsCount","resetBadge","sendChatMessage","imageBase64","audioBase64","ChatMessage","senderName","savedMessage","reportProfile","reason","sendContactMessage","setPhoto","base64data","saveFile","profileUpdate","MODERATE_PROFILE_PHOTOS","photosInReview","photos","saveBirthdate","ageFrom","ageTo","testPushNotification","getReportedUsers","getBannedUsers","getApplyBadgeUsers","getReportedUserDetails","report","deletePhoto","reportId","photoUrl","banUser","closeReport","action","searchUsersByEmail","searchUsersByName","loadUser","deleteUser","getProfilesWithPhotosToReview","reviewPhoto","fileUrl","approved","addClinicsQuestion","clinicQuestion","getClinicsQuestion","delClinicsQuestion","addFindUs","findUs","getFindUs","delFindUs","addFindUsReport","findUsVotes","getFindUsReport","delFindUsReport","addAboutJab","getAboutJab","getMatchesReport","numDays","getChatMessageReport","getProfileNew","filePath","media","Media","play","playAudioWhenScreenIsLocked","isLoggedIn","userFields","profileFields","Profile","Parse","extend","className","attrs","matchFields","Match","chatMessageFields","reportFields","Report","contactMessageFields","ContactMessage","clinicsQuestionFields","ClinicsQuestion","findUsFields","FindUs","aboutJabFields","AboutJab","findUsReportFields","FindUsReport","User","image","audio","photo","_url","isFunction","isString","otherProfileId","current","profile2","profile1","Promise","callback","always","fail","parseAppId","serverUrl","parseMount","parseFbAuth","fbResponse","authResponse","userID","access_token","accessToken","expiryDate","setSeconds","getSeconds","expiresIn","expiration_date","toISOString","username","registerPush","FacebookUtils","Cloud","sessionToken","become","_unwrapError","ParsePushPlugin","getInstallationId","channel","subscribe","on","pushNotification","setPremium","premium","product","addCredits","fetch","getEmail","fromJSON","GeoPoint","save","map","__type","filename","base64","imgFile","File","otherUserId","uid","searchParameters","searchParams","matchIds","messagesQuery","Query","createWithoutData","equalTo","toPointer","ascending","limit","fromDate","greaterThan","reportedBy","reportedUser","contactMessage","unsubscribe","logOut","reports","toId","profileLocal","object","objectId","isNumber","startsWith","parse","initialize","serverURL","convertError","_mapMatchResultSet","sqlResultSet","rows","row","item","jsonObj","iso","updated_at","last_message","_mapChatMessageResultSet","json","chat_message","chatMessage","_mapProfileResultSet","databaseName","sqlitePlugin","db","openDatabase","iosDatabaseLocation","Migrator","migration","tx","executeSql","execute","deferred","transaction","readTransaction","matchJson","toJSON","chatId","msgJson","rowsAffected","readValue","doMigration","number","migrations","MIGRATOR_TABLE","migrateStartingWith","ver","ensureMigrationTable","getCurrentVersion","func","$urlRouterProvider","params","abstract","matchProfile","$stateParams","otherwise","$provide","isSafari","vendor","decorator","scopePrototype","getPrototypeOf","originalScopeNew","$new","apply","$scope","$ionicPopup","$ionicModal","$ionicLoading","AppUtil","SocialAuth","linkedInId","linkedInSecret","resetStyles","showForm","showLogo","logo","setLoggingInStyles","validateEmailPassword","validateEmail","validatePassword","credentials","toastSimpleTranslate","re","checkProfile","profilePromise","gps","proceed","toastSimple","ensureFb","FACEBOOK_APP_ID","class","showResetPassword","showResetPasswordForm","hideResetPasswordForm","resetPassword","blockingCall","emailRegister","setTimeout","emailLogin","linkedIn","httpResponse","connectToFacebook","_handleFacebookLoginError","alert","title","getLoginStatus","statusResult","login","loginResult","isLinked","$ionicSideMenuDelegate","TDCardDelegate","startTime","noOneAround","elapsed","MIN_SEARCH_TIME","translationsResult","profilePhoto","deleteUnmatchedSwipes","searchAgain","fromTemplateUrl","animation","modal","newMatch","show","closeNewMatch","hide","messageNewMatch","openNewMatch","viewDetails","accept","topProfile","accepted","rejected","cardDestroyed","index","splice","cardTransitionLeft","cardTransitionRight","$ionicActionSheet","profileOptions","subTitle","cssClass","buttons","onTap","verified","$ionicPopover","$sce","update","showcase","clinicSettings","clinicQuestions","refreshClinics","questions","$event","popover","fromTemplate","closePopover","trustSrcurl","data","trustAsResourceUrl","settings","showItem","itemShown","refreshAbout","refreshFindUs","findUsList","forEach","checked","skip","votes","closeModal","birthYear","birthMonth","birthDay","getMonth","getDay","months","years","yearsFrom","yearsTo","yearFrom","yearTo","trim","UTC","changes","latLng","google","maps","LatLng","mapOptions","center","zoom","zoomControlOptions","ControlPosition","RIGHT_TOP","mapTypeId","MapTypeId","ROADMAP","mapTypeControl","streetViewControl","disableDoubleClickZoom","Map","setCenter","marker","Marker","draggable","addListener","setPosition","setLocation","pos","getPosition","lat","lng","checkLocation","agree","albums","api","getBase64FromImageUrl","URL","img","Image","crossOrigin","onload","canvas","width","height","ctx","getContext","drawImage","dataURL","toDataURL","cropPhoto","albumId","selectPhoto","source","myImage","croppedImage","goBack","crop","dataURI","split","indexOf","unescape","viewHistory","backView","stateName","history","histories","currentView","historyId","stack","cursor","doDelete","showDiscovery","clone","showMI","showKM","dType","setLanguage","key","use","ceil","pick","inAppPurchasesAvailable","buyPro","order","buySubscription","destructiveText","titleText","cancelText","destructiveButtonClicked","getProfilesNew","openModal","filterInfoPopup","infoPopup","contact","sendMessage","useGPS","myLatlng","useGPSchanged","setDraggable","gpsLocation","gpsLatLng","$cordovaCapture","$cordovaCamera","recordVideo","options","duration","captureVideo","videoData","currentVideoPath","fullPath","$cordovaSocialSharing","$cordovaFileTransfer","getCorrectFilePath","fileName","substring","doUploadToYoutube","videoPath","content","showBackdrop","showDelay","fileKey","chunkedMode","mimeType","upload","response","res","progress","vid_height","innerHeight","vid_width","innerWidth","video","uniq","chats","chatSettings","sortBy","sorted","chat","toLowerCase","sortByOrder","sortByUpdated","newSort","$ionicNavBarDelegate","$cordovaFile","ImagesUtil","okText","unmatch","sendImage","sourceType","quality","destinationType","Camera","DestinationType","DATA_URL","allowEdit","encodingType","EncodingType","PNG","targetWidth","targetHeight","saveToPhotoAlbum","getPicture","imageData","sendingMessage","sentAt","sendingMessages","sentMessage","failedMessages","cancelRecording","audioRecorderAPI","stop","savedFilePath","directory","documentsDirectory","externalRootDirectory","removeFile","dataDirectory","saveRecording","readAsDataURL","moveFile","resendMessage","keepKeyboardOpen","keyboardShowHandler","keyboardHideHandler","scroller","style","bottom","footerBar","clientHeight","messageCheckTimer","txtInput","loadChatDataPromise","classList","add","activeMessages","disableScroll","noBackdrop","delay","doneLoading","input","querySelector","removeItem","isDefined","chatOptions","buttonClicked","showKeyboard","sendMessageForm","imageFromCamera","PictureSourceType","CAMERA","imageFromLibrary","PHOTOLIBRARY","recordPopup","recordAudio","record","close","playAudio","Audio","onMessageHold","itemIndex","instant","convertImgIdToBase64","base64ToGallery","clipboard","$cordovaClipboard","copy","onFailedMessageHold","ta","taHeight","newFooterHeight","device","platform","constant"],"mappings":"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","file":"../app.js","sourcesContent":["// From https://github.com/driftyco/ng-cordova/blob/master/src/plugins/socialSharing.js\n\n// install   :      cordova plugin add https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin.git\n// link      :      https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin\n\n// NOTE: shareViaEmail -> if user cancels sharing email, success is still called\n// TODO: add support for iPad\n\nangular.module('ngCordova.plugins.socialSharing', [])\n\n\t.factory('$cordovaSocialSharing', ['$q', '$window', function ($q, $window) {\n\n\t\treturn {\n\t\t\tshare: function (message, subject, file, link) {\n\t\t\t\tif(!$window.plugins || !$window.plugins.socialsharing)\n\t\t\t\t\treturn $q.reject('socialsharing plugin not found')\n\n\t\t\t\tvar q = $q.defer();\n\t\t\t\tsubject = subject || null;\n\t\t\t\tfile = file || null;\n\t\t\t\tlink = link || null;\n\t\t\t\t$window.plugins.socialsharing.share(message, subject, file, link, function () {\n\t\t\t\t\tq.resolve(true);\n\t\t\t\t}, function () {\n\t\t\t\t\tq.reject(false);\n\t\t\t\t});\n\t\t\t\treturn q.promise;\n\t\t\t},\n\n\t\t\tshareViaTwitter: function (message, file, link) {\n\t\t\t\tvar q = $q.defer();\n\t\t\t\tfile = file || null;\n\t\t\t\tlink = link || null;\n\t\t\t\t$window.plugins.socialsharing.shareViaTwitter(message, file, link, function () {\n\t\t\t\t\tq.resolve(true);\n\t\t\t\t}, function () {\n\t\t\t\t\tq.reject(false);\n\t\t\t\t});\n\t\t\t\treturn q.promise;\n\t\t\t},\n\n\t\t\tshareViaWhatsApp: function (message, file, link) {\n\t\t\t\tvar q = $q.defer();\n\t\t\t\tfile = file || null;\n\t\t\t\tlink = link || null;\n\t\t\t\t$window.plugins.socialsharing.shareViaWhatsApp(message, file, link, function () {\n\t\t\t\t\tq.resolve(true);\n\t\t\t\t}, function () {\n\t\t\t\t\tq.reject(false);\n\t\t\t\t});\n\t\t\t\treturn q.promise;\n\t\t\t},\n\n\t\t\tshareViaFacebook: function (message, file, link) {\n\t\t\t\tvar q = $q.defer();\n\t\t\t\tmessage = message || null;\n\t\t\t\tfile = file || null;\n\t\t\t\tlink = link || null;\n\t\t\t\t$window.plugins.socialsharing.shareViaFacebook(message, file, link, function () {\n\t\t\t\t\tq.resolve(true);\n\t\t\t\t}, function () {\n\t\t\t\t\tq.reject(false);\n\t\t\t\t});\n\t\t\t\treturn q.promise;\n\t\t\t},\n\n\t\t\tshareViaFacebookWithPasteMessageHint: function (message, file, link, pasteMessageHint) {\n\t\t\t\tvar q = $q.defer();\n\t\t\t\tfile = file || null;\n\t\t\t\tlink = link || null;\n\t\t\t\t$window.plugins.socialsharing.shareViaFacebookWithPasteMessageHint(message, file, link, pasteMessageHint, function () {\n\t\t\t\t\tq.resolve(true);\n\t\t\t\t}, function () {\n\t\t\t\t\tq.reject(false);\n\t\t\t\t});\n\t\t\t\treturn q.promise;\n\t\t\t},\n\n\t\t\tshareViaSMS: function (message, commaSeparatedPhoneNumbers) {\n\t\t\t\tvar q = $q.defer();\n\t\t\t\t$window.plugins.socialsharing.shareViaSMS(message, commaSeparatedPhoneNumbers, function () {\n\t\t\t\t\tq.resolve(true);\n\t\t\t\t}, function () {\n\t\t\t\t\tq.reject(false);\n\t\t\t\t});\n\t\t\t\treturn q.promise;\n\t\t\t},\n\n\t\t\tshareViaEmail: function (message, subject, toArr, ccArr, bccArr, fileArr) {\n\t\t\t\tvar q = $q.defer();\n\t\t\t\ttoArr = toArr || null;\n\t\t\t\tccArr = ccArr || null;\n\t\t\t\tbccArr = bccArr || null;\n\t\t\t\tfileArr = fileArr || null;\n\t\t\t\t$window.plugins.socialsharing.shareViaEmail(message, subject, toArr, ccArr, bccArr, fileArr, function () {\n\t\t\t\t\tq.resolve(true);\n\t\t\t\t}, function () {\n\t\t\t\t\tq.reject(false);\n\t\t\t\t});\n\t\t\t\treturn q.promise;\n\t\t\t},\n\n\t\t\tshareVia: function (via, message, subject, file, link) {\n\t\t\t\tvar q = $q.defer();\n\t\t\t\tmessage = message || null;\n\t\t\t\tsubject = subject || null;\n\t\t\t\tfile = file || null;\n\t\t\t\tlink = link || null;\n\t\t\t\t$window.plugins.socialsharing.shareVia(via, message, subject, file, link, function () {\n\t\t\t\t\tq.resolve(true);\n\t\t\t\t}, function () {\n\t\t\t\t\tq.reject(false);\n\t\t\t\t});\n\t\t\t\treturn q.promise;\n\t\t\t},\n\n\t\t\tcanShareViaEmail: function () {\n\t\t\t\tvar q = $q.defer();\n\t\t\t\t$window.plugins.socialsharing.canShareViaEmail(function () {\n\t\t\t\t\tq.resolve(true);\n\t\t\t\t}, function () {\n\t\t\t\t\tq.reject(false);\n\t\t\t\t});\n\t\t\t\treturn q.promise;\n\t\t\t},\n\n\t\t\tcanShareVia: function (via, message, subject, file, link) {\n\t\t\t\tvar q = $q.defer();\n\t\t\t\t$window.plugins.socialsharing.canShareVia(via, message, subject, file, link, function (success) {\n\t\t\t\t\tq.resolve(success);\n\t\t\t\t}, function (error) {\n\t\t\t\t\tq.reject(error);\n\t\t\t\t});\n\t\t\t\treturn q.promise;\n\t\t\t},\n\n\t\t\tavailable: function () {\n\t\t\t\tvar q = $q.defer();\n\t\t\t\twindow.plugins.socialsharing.available(function (isAvailable) {\n\t\t\t\t\tif (isAvailable) {\n\t\t\t\t\t\tq.resolve();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tq.reject();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}]);","// Callback for push notifications, which passes it into the Angular code\r\nfunction onNotification(pnObj) {\r\n    var appService = angular.element(document.body).injector().get('AppService')\r\n    var $log = angular.element(document.body).injector().get('$log')\r\n    $log.log(\"Received push notification: \" + JSON.stringify(pnObj))\r\n\r\n    if (pnObj.type == 'message')\r\n        appService.synchronizeChatMessages()\r\n    else if (pnObj.type == 'match')\r\n        appService.synchronizeMutualMatches()\r\n    else if (pnObj.type == 'removeMatch')\r\n        appService.removeMatchNotification(pnObj.matchId, pnObj.userId)\r\n    else if (pnObj.type == 'reloadProfile')\r\n        appService.reloadProfile()\r\n    else if (pnObj.type == 'accountBanned')\r\n        appService.logout()\r\n    else if (pnObj.type == 'test')\r\n        $log.log('Test push notification received')\r\n}\r\n\r\nfunction onNotificationOpen(pnObj) {\r\n    var state = angular.element(document.body).injector().get('$state')\r\n    var $log = angular.element(document.body).injector().get('$log')\r\n    $log.log(\"Opened push notification: \" + JSON.stringify(pnObj))\r\n\r\n    if (pnObj.type === 'message') {\r\n        $log.log('going to menu.chat ' + pnObj.message.match.id)\r\n        state.go('menu.chat', { matchId: pnObj.message.match.id })\r\n    } else if (pnObj.type === 'match') {\r\n        $log.log('going to menu.match-profile ' + pnObj.matchId)\r\n        state.go('menu.match-profile', { matchId: pnObj.matchId })\r\n    } else if (pnObj.type === 'newLikes') {\r\n        $log.log('going to menu.likedMe')\r\n        state.go('menu.likedMe')\r\n    }\r\n}\r\n\r\n\r\n(function() {\r\n\r\n    angular.module('service.app', ['ngCordova', 'service.parse', 'service.localdb'])\r\n        .factory('AppService', function($rootScope, $timeout, $http, $cordovaFacebook, $cordovaGeolocation, $cordovaMedia,\r\n            $log, $state, $q, $ionicHistory, ParseService, LocalDB, $localStorage, $interval,\r\n            $translate, adMob, $cordovaBadge) {\r\n\r\n            var server = ParseService\r\n\r\n            // keep a reference to the mutual matches so we can update when a push notification arrives for a new match\r\n            var matches = []\r\n\r\n            // Contains the match/chat ids which have unread chat messages as properties\r\n            var unreadChats = {}\r\n                // The total number of matches/chats that have unread messages. This must be updated when unreadChats is updated\r\n            var unreadChatsCount = 0\r\n\r\n            var profileCache = {}\r\n\r\n            // keep a reference to the current chat messages so we can update when a push notification arrives\r\n            var activeChatMatchId = null\r\n            var activeChatMessages = null\r\n\r\n            // If true then photos need to be approved by an admin before they are visible on the users public profile\r\n            var MODERATE_PROFILE_PHOTOS = false\r\n\r\n            // Variables for the polling when push notifications haven't been detected\r\n            const CHAT_SYNC_INTERVAL = 5000\r\n            const MATCH_SYNC_RATIO = 2 // After how many chat syncs we should also sync the matches\r\n            var syncCount = 0\r\n            var synchronizeInterval = null\r\n\r\n            var matchSyncInProgress = false\r\n            var matchSyncInRequested = false\r\n            var chatSyncInProgress = false\r\n            var chatSyncInRequested = false\r\n            var isAcntDelete = false\r\n            var isAcntNew = false\r\n\r\n            var service = {\r\n                // fields\r\n                isLoggedIn: false,\r\n                user: null,\r\n                userId: '',\r\n                fbId: '',\r\n                profile: null,\r\n                profileSearchResults: null,\r\n                twilioAccessToken: null,\r\n                // methods\r\n                init: init,\r\n                facebookLogin: facebookLogin,\r\n                linkedInLogin: linkedInLogin,\r\n                signUp: signUp,\r\n                logIn: logIn,\r\n                autoLogin: autoLogin,\r\n                reloadUser: reloadUser,\r\n                reloadProfile: reloadProfile,\r\n                isEmailVerified: isEmailVerified,\r\n                termsOfUseAgreed: termsOfUseAgreed,\r\n                requestPasswordReset: requestPasswordReset,\r\n                goToNextLoginState: goToNextLoginState,\r\n                loadProfile: loadProfile,\r\n                getProfile: getProfile,\r\n                getProfileOfSelectedUser: getProfileOfSelectedUser,\r\n                getProfileById: getProfileById,\r\n                getProfileByUserId: getProfileByUserId,\r\n                getProfileByMatchId: getProfileByMatchId,\r\n                saveBirthdate: saveBirthdate,\r\n                saveProfile: saveProfile,\r\n                saveProfileForApplyBadge: saveProfileForApplyBadge,\r\n                saveSettings: saveSettings,\r\n                enableDiscovery: enableDiscovery,\r\n                requestLocationServices: requestLocationServices,\r\n                getCurrentPosition: getCurrentPosition,\r\n                copyFacebookProfile: copyFacebookProfile,\r\n                setPhoto: setPhoto,\r\n                getProfileSearchResults: getProfileSearchResults,\r\n                updateProfileSearchResults: updateProfileSearchResults,\r\n                getProfilesWhoLikeMe: getProfilesWhoLikeMe,\r\n                getProfilesWhoWantsToHaveARelationshipWithMe: getProfilesWhoWantsToHaveARelationshipWithMe,\r\n                clearProfileSearchResults: clearProfileSearchResults,\r\n                removeMatchNotification: removeMatchNotification,\r\n                deleteUnmatched: deleteUnmatched,\r\n                processMatch: processMatch,\r\n                processMatchFromAdmin: processMatchFromAdmin,\r\n                processPregnancy: processPregnancy,\r\n                getMutualMatches: getMutualMatches,\r\n                getMatch: getMatch,\r\n                getActiveChat: getActiveChat,\r\n                setChatRead: setChatRead,\r\n                getUnreadChatsCount: getUnreadChatsCount,\r\n                sendChatMessage: sendChatMessage,\r\n                removeMatch: removeMatch,\r\n                reportProfile: reportProfile,\r\n                synchronizeMutualMatches: synchronizeMutualMatches,\r\n                synchronizeChatMessages: synchronizeChatMessages,\r\n                resetBadge: resetBadge,\r\n                sendContactMessage: sendContactMessage,\r\n                logout: logout,\r\n                deleteAccount: deleteAccount,\r\n\r\n                testPushNotification: testPushNotification,\r\n\r\n                // Admin functions\r\n                getReportedUsers: getReportedUsers,\r\n                getBannedUsers: getBannedUsers,\r\n                getApplyBadgeUsers: getApplyBadgeUsers,\r\n                getReportedUserDetails: getReportedUserDetails,\r\n                deletePhoto: deletePhoto,\r\n                banUser: banUser,\r\n                closeReport: closeReport,\r\n                getProfilesWithPhotosToReview: getProfilesWithPhotosToReview,\r\n                reviewPhoto: reviewPhoto,\r\n                searchUsersByEmail: searchUsersByEmail,\r\n                searchUsersByName: searchUsersByName,\r\n                loadUser: loadUser,\r\n                deleteUser: deleteUser,\r\n                addClinicsQuestion: addClinicsQuestion,\r\n                getClinicsQuestion: getClinicsQuestion,\r\n                delClinicsQuestion: delClinicsQuestion,\r\n                getFindUs: getFindUs,\r\n                addFindUs: addFindUs,\r\n                delFindUs: delFindUs,\r\n                addFindUsReport: addFindUsReport,\r\n                getFindUsReport: getFindUsReport,\r\n                delFindUsReport: delFindUsReport,\r\n                addAboutJab: addAboutJab,\r\n                getAboutJab: getAboutJab,\r\n                getMatchesReport: getMatchesReport,\r\n                getChatMessageReport: getChatMessageReport,\r\n\r\n                getProfileNew: getProfileNew\r\n            }\r\n\r\n            return service\r\n\r\n\r\n            function init() {\r\n                return $q.all(\r\n                    LocalDB.init(), server.init()\r\n                )\r\n            }\r\n\r\n            function facebookLogin(facebookResponse) {\r\n                //$analytics.eventTrack('facebookLogin')\r\n                return server.facebookLogin(facebookResponse).then(user => {\r\n                    service.userId = user.id\r\n                    return postLogin(user)\r\n                })\r\n            }\r\n\r\n            function linkedInLogin(authData) {\r\n                //$analytics.eventTrack('linkedInLogin')\r\n                return server.linkedInLogin(authData).then(user => {\r\n                    service.userId = user.id\r\n                    return postLogin(user)\r\n                })\r\n            }\r\n\r\n            function signUp(email, password) {\r\n                //$analytics.eventTrack('signupEmail')\r\n                return server.signUp(email, password).then(user => {\r\n                    service.userId = user.id\r\n                    return postLogin(user)\r\n                })\r\n            }\r\n\r\n            function logIn(email, password) {\r\n                //$analytics.eventTrack('loginEmail')\r\n                return server.logIn(email, password).then(user => {\r\n                    service.userId = user.id\r\n                    return postLogin(user)\r\n                })\r\n            }\r\n\r\n            function autoLogin() {\r\n                // TODO should reload the user and handle errors in the caller\r\n                var user = server.autoLogin()\r\n                reloadUser()\r\n                postLogin(user)\r\n            }\r\n\r\n            /**\r\n             * @returns {Promise<IUser>|IUser}\r\n             */\r\n            function postLogin(user) {\r\n                service.user = user\r\n                LocalDB.userId = user.id\r\n                if (typeof analytics !== 'undefined') {\r\n                    analytics.setUserId(user.id)\r\n                    analytics.trackView(\"UserLogin Controller\")\r\n                }\r\n                LocalDB.getProfiles().then(profiles => {\r\n                    for (let profile of profiles)\r\n                        profileCache[profile.id] = profile\r\n\r\n                    return LocalDB.getMatches()\r\n                }).then(dbMatches => {\r\n                    for (let match of dbMatches) {\r\n                        // TODO GROUP_CHAT for group chat get the profile of the latest sender\r\n                        match.otherProfile = profileCache[match.get('otherProfileId')]\r\n                        if (!getMatch(match.id))\r\n                            matches.push(match)\r\n                        else\r\n                            $log.error('Found duplicate when loading matches from LocalDB')\r\n                    }\r\n\r\n                    return refreshUnreadCount()\r\n                }).then(null, error => $log.error('Error loading local db data ' + JSON.stringify(error)))\r\n\r\n                if (user.admin)\r\n                    $rootScope.isAdmin = true\r\n                $log.log('logged in with ' + JSON.stringify(user))\r\n\r\n                server.getTwilioToken().then(\r\n                    result => {\r\n                        if (result) {\r\n                            $log.info('Aquired twilio token')\r\n                            service.twilioAccessToken = result.token\r\n                            $rootScope.$broadcast('twilioAccessToken', result.token)\r\n                        } else {\r\n                            $log.info('Twilio is not configured. getTwilioToken returned null')\r\n                        }\r\n\r\n                    },\r\n                    error => {\r\n                        if (error === 'NOT_CONFIGURED') // This is legacy now. Returns successfull empty/null if not configured\r\n                            $log.info('Twilio not configured')\r\n                        else\r\n                            $log.error('Error getting twilio token ' + JSON.stringify(error))\r\n                    }\r\n                )\r\n\r\n                initInAppPurchases()\r\n                initAdMob()\r\n\r\n                return user\r\n            }\r\n\r\n            function refreshUnreadCount() {\r\n                LocalDB.getUnreadChats().then(function(result) {\r\n                    console.log('LocalDB.getUnreadChats() ' + JSON.stringify(result))\r\n                    unreadChats = result\r\n                    unreadChatsCount = _.keys(unreadChats).length\r\n                    $log.log('unread count ' + unreadChatsCount)\r\n                    $rootScope.$broadcast('unreadChatsCountUpdated')\r\n                    if (typeof cordova !== 'undefined')\r\n                        $cordovaBadge.set(unreadChatsCount).then(null, error => $log.info(error))\r\n                    return unreadChatsCount\r\n                })\r\n            }\r\n\r\n            function initAdMob() {\r\n                if (typeof AdMob === 'undefined') {\r\n                    $log.info('AdMob plugin is not installed')\r\n                    return\r\n                }\r\n                // AdMob code\r\n                $log.info('Checking AdMob configuration...')\r\n                    // select the right Ad Id according to platform\r\n                let adMobIds = null\r\n                if (/(android)/i.test(navigator.userAgent)) { // for android & amazon-fireos\r\n                    if (adMob.android && adMob.android.banner && adMob.android.interstitial) {\r\n                        adMobIds = adMob.android\r\n                        $log.info('Using Android AdMob ids')\r\n                    }\r\n                } else if (/(ipod|iphone|ipad)/i.test(navigator.userAgent)) { // for ios\r\n                    if (adMob.ios && adMob.ios.banner && adMob.ios.interstitial) {\r\n                        adMobIds = adMob.ios\r\n                        $log.info('Using iOS AdMob ids')\r\n                    }\r\n                } else { // for windows phone\r\n                    // Possibly support in the future\r\n                    //if (adMob.wp && adMob.wp.banner && adMob.wp.interstitial) {\r\n                    //    adMobIds = adMob.wp\r\n                    //    $log.info('Using WP AdMob ids')\r\n                    //}\r\n                }\r\n                // AdMob is the AdMob plugin variable\r\n                if (adMobIds && AdMob) {\r\n                    $log.info('Creating AdMob banner')\r\n                    AdMob.createBanner({\r\n                        adId: adMobIds.banner,\r\n                        position: AdMob.AD_POSITION.BOTTOM_CENTER,\r\n                        autoShow: true\r\n                    })\r\n                }\r\n            }\r\n\r\n\r\n            function initInAppPurchases() {\r\n                if (typeof store === 'undefined') {\r\n                    $log.info('In-app purchase plugin is not installed')\r\n                    return\r\n                }\r\n\r\n                if (true) return // delete this line one you've configured your in-app purchases\r\n\r\n                // A consumable 100 credits product\r\n                store.register({\r\n                    id: 'com.company.product.consumable100',\r\n                    alias: '100 credits',\r\n                    type: store.CONSUMABLE\r\n                })\r\n\r\n                // A non-consumable (one-off) 'Full/Pro version' product\r\n                store.register({\r\n                    id: 'com.company.product.pro',\r\n                    alias: 'pro version',\r\n                    type: store.NON_CONSUMABLE\r\n                })\r\n\r\n                // A paid subscription 'subscription' product\r\n                store.register({\r\n                    id: 'com.company.product.subscription',\r\n                    alias: 'subscription',\r\n                    type: store.PAID_SUBSCRIPTION\r\n                })\r\n\r\n                // Now configure event listeners:\r\n                // ------------------------------\r\n\r\n                // When any product gets updated, its details are passed to your app\r\n                store.when('product').updated(product => {\r\n                    $log.log('store when product ' + JSON.stringify(product))\r\n                        // This is a good place to prepare or render the UI based on these refreshed details:\r\n                    if (product.valid) {\r\n                        var productId = product.id // call store.order(productId) to buy this product\r\n                        var title = product.title\r\n                        var description = product.description\r\n                        var canPurchase = product.canPurchase\r\n                        var price = p.price // in the currency of the users App Store account\r\n                    }\r\n                })\r\n\r\n                // You can also listen to the 'updated' event for individual products like this\r\n                store.when('subscription').updated(product => {\r\n                    $log.log('store updated subscription ' + JSON.stringify(product))\r\n\r\n                    server.setPremium(product.owned, product).then(() => {\r\n                        product.finish()\r\n                    })\r\n\r\n                    // the same details as the function above are passed in with the p object\r\n                })\r\n\r\n                // When the pro version is purchased\r\n                store.when('pro version').approved(product => {\r\n                    server.setPremium(true, product).then(() => {\r\n                        service.user.premium = true\r\n                        product.finish()\r\n                    })\r\n                    alert(\"You got an additional 100 coins!\")\r\n\r\n                })\r\n\r\n                // When the purchase of 100 coins is approved, show an alert\r\n                store.when('100 credits').approved(product => {\r\n                    server.addCredits(true, product).then(() => {\r\n                        service.user.credits = service.user.credits + 100\r\n                        product.finish()\r\n                    })\r\n                })\r\n\r\n                // When the store is ready all products are loaded and in their \"final\" state.\r\n                store.ready(() => {\r\n                    $log.log('In-app purchases store is ready')\r\n                })\r\n\r\n                store.error(error => {\r\n                    AppUtil.toastSimpleTranslate('IN_APP_PURCHASE_ERROR')\r\n                    $log.error('App Store error ' + error.code + ': ' + error.message)\r\n                })\r\n\r\n                // This will contact the server to check all registered products validity and ownership status.\r\n                // It's mostly fine to do this only at application startup but you can refresh it more often.\r\n                store.refresh()\r\n            }\r\n\r\n\r\n            /**\r\n             * Reload the user object from the server\r\n             * @returns {Promise<User>}\r\n             */\r\n            function reloadUser() {\r\n                return server.reloadUser()\r\n            }\r\n\r\n            /**\r\n             * Reload the profile from the server, e.g. for when its been modified server side\r\n             * @returns {Promise<IProfile>}\r\n             */\r\n            function reloadProfile() {\r\n                if (service.profile) {\r\n                    $log.log('reloading profile')\r\n                    return server.reloadProfile(service.profile).then(function(profile) {\r\n                        initCurrentUserProfile(profile)\r\n                        $log.log('reloaded profile to ' + JSON.stringify(profile))\r\n                        server.profile = profile\r\n                        return server.profile\r\n                    })\r\n                }\r\n            }\r\n\r\n            function initCurrentUserProfile(profile) {\r\n                // When returning search/match profiles the age is calculated server side and returned\r\n                // For the current user profile we need to calculate the age\r\n                if (profile.birthdate && !profile.age)\r\n                    profile.age = new Date(new Date - new Date(profile.birthdate)).getFullYear() - 1970\r\n            }\r\n\r\n            function isEmailVerified() {\r\n                return server.reloadUser().then(function(user) {\r\n                    return user.emailVerified === true\r\n                })\r\n            }\r\n\r\n\r\n            /**\r\n             * Set that the user has agreed to the terms of use\r\n             * @returns {IPromise<void>}\r\n             */\r\n            function termsOfUseAgreed() {\r\n                $localStorage.termsOfUseAgreed = true\r\n                return $q.when()\r\n            }\r\n\r\n            function requestPasswordReset(email) {\r\n                //$analytics.eventTrack('passwordReset')\r\n                return server.requestPasswordReset(email)\r\n            }\r\n\r\n            /**\r\n             * Loads the profile for the current user. Returns a promise as it will need call the serve the first time.\r\n             * @returns {Promise<IProfile>}\r\n             */\r\n            function loadProfile() {\r\n                if (service.profile)\r\n                    return $q.when(service.profile)\r\n\r\n                return server.getProfile()\r\n                    .then(function(result) {\r\n                        if (!result)\r\n                            return null\r\n\r\n                        initCurrentUserProfile(result)\r\n\r\n                        $log.log('AppService server.getProfile returned ' + JSON.stringify(result))\r\n                        service.profile = result\r\n                        return service.profile\r\n                    })\r\n            }\r\n\r\n            /**\r\n             * Get the profile for a unmatched selected user for reporting purposes.\r\n             * @returns {IProfile}\r\n             */\r\n            function getProfileOfSelectedUser(profileId) {\r\n                return server.getProfileOfSelectedUser(profileId)\r\n            }\r\n\r\n            /**\r\n             * Get the profile for the current user. loadProfile() must be called before this is called.\r\n             * @returns {IProfile}\r\n             */\r\n            function getProfile() {\r\n                return service.profile\r\n            }\r\n\r\n\r\n            /**\r\n             * Get the profile for a mutual match\r\n             * @param matchId the mutual match id\r\n             * @returns {Promise<IProfile>}\r\n             */\r\n            function getProfileByMatchId(matchId) {\r\n                $log.debug('getProfileByMatchId ' + matchId)\r\n\r\n                let match = _.find(matches, 'id', matchId)\r\n                if (match) {\r\n                    let profileId = match.get('otherProfileId')\r\n                    if (!profileId)\r\n                        profileId = match.profileId\r\n                    let profile = profileCache[profileId]\r\n                    if (profile) {\r\n                        // Refresh the profile asynchronously every hour at most\r\n                        if (!profile.refreshedAt || profile.refreshedAt < Date.now() - 1000 * 60 * 60) {\r\n                            server.getProfileForMatch(matchId).then(refreshedProfile => {\r\n                                $log.debug('refreshed profile ' + refreshedProfile.id + ' from the server')\r\n                                refreshedProfile.refreshedAt = Date.now()\r\n                                profileCache[refreshedProfile.id] = refreshedProfile\r\n                                _.assign(profile, refreshedProfile)\r\n                            })\r\n                        }\r\n                        return $q.when(profile)\r\n                    }\r\n                }\r\n\r\n                $log.log('getProfileByMatchId going to the server')\r\n                return server.getProfileForMatch(matchId).then(profile => {\r\n                    profileCache[profile.id] = profile\r\n                    return profile\r\n                })\r\n            }\r\n\r\n\r\n            function getProfileById(profileId) {\r\n                return profileCache[profileId]\r\n            }\r\n\r\n            function getProfileByUserId(userId) {\r\n                return _.find(profileCache, 'uid', userId)\r\n            }\r\n\r\n\r\n            function goToNextLoginState() {\r\n\r\n                var user = service.user\r\n\r\n                if (user.status == 'banned') {\r\n                    go('banned')\r\n                    return\r\n                }\r\n\r\n                // If users have authenticated with Facebook then don't require email verification\r\n                // Note: there are three states to emailVerified in Parse. undefined means it is not required, eg user signed up before email verification was enabled\r\n                if (!$rootScope.facebookConnected && user.emailVerified === false) {\r\n                    go('emailVerification')\r\n                    return\r\n                }\r\n\r\n                if (!isProfileValid()) {\r\n                    go('profileSetup')\r\n                    return\r\n                }\r\n\r\n                if (!getProfile().location) {\r\n                    go('locationSetup')\r\n                    return\r\n                }\r\n\r\n                if (isAcntNew) {\r\n                    isAcntNew = false\r\n                    go('walkthru')\r\n                    return\r\n                }\r\n\r\n                if (!$localStorage.termsOfUseAgreed) {\r\n                    go('termsOfUse')\r\n                    return\r\n                }\r\n\r\n                if (!service.profile.about) {\r\n                    $state.go('menu.profile-edit')\r\n                    return\r\n                }\r\n\r\n                // TODO welcome/intro slides\r\n\r\n                startSynchronisation()\r\n\r\n                go('menu.home')\r\n            }\r\n\r\n            function go(state) {\r\n                $ionicHistory.nextViewOptions({\r\n                    historyRoot: true,\r\n                    disableBack: true\r\n                })\r\n                $state.go(state)\r\n            }\r\n\r\n            /**\r\n             * Syncs to the server and starts the polling synchronization if required\r\n             */\r\n            function startSynchronisation() {\r\n\r\n                var syncFunction = () => {\r\n                    if (++syncCount === MATCH_SYNC_RATIO) {\r\n                        syncCount = 0\r\n                        synchronizeMutualMatches()\r\n                    } else {\r\n                        synchronizeChatMessages()\r\n                    }\r\n                }\r\n\r\n                // Sync on startup\r\n                $log.debug('Performing initial data sync')\r\n                synchronizeMutualMatches().finally(synchronizeChatMessages)\r\n\r\n                // Check if we need to start polling for updates\r\n                if (!synchronizeInterval) {\r\n                    $log.log('Starting data synchronization timer')\r\n                        // Start an interval timer to sync periodically\r\n                    synchronizeInterval = $interval(syncFunction, CHAT_SYNC_INTERVAL)\r\n                }\r\n            }\r\n\r\n\r\n            /**\r\n             * @returns {boolean} if the profile contains the all minimum data required to use the main application\r\n             */\r\n            function isProfileValid() {\r\n                return service.profile.birthdate && service.profile.name && service.profile.gender\r\n            }\r\n\r\n            /**\r\n             * Checks if the location services (Google Play Location services on Android) are enabled, and if not enabled then\r\n             * asks the user to enable it.\r\n             * @return Promise<void>\r\n             */\r\n            function requestLocationServices() {\r\n                $log.log('requestLocationServices()')\r\n\r\n                if (!ionic.Platform.isWebView())\r\n                    return $q.resolve()\r\n\r\n                var q = $q.defer()\r\n                $log.log('locationAccuracy.request()')\r\n                cordova.plugins.locationAccuracy.request(\r\n                    function() {\r\n                        $log.log(\"locationAccuracy.request() = success\")\r\n                        q.resolve()\r\n                    },\r\n                    function(error) {\r\n                        $log.log(\"locationAccuracy.request() = error: \" + JSON.stringify(error))\r\n                        if (error) {\r\n                            // Android only\r\n                            if (error.code !== cordova.plugins.locationAccuracy.ERROR_USER_DISAGREED) {\r\n                                if (window.confirm(\"Failed to automatically set Location Mode to 'High Accuracy'. Would you like to switch to the Location Settings page and do this manually?\")) {\r\n                                    $log.log('diagnostic.switchToLocationSettings()')\r\n                                    cordova.plugins.diagnostic.switchToLocationSettings()\r\n                                    $log.log('diagnostic.switchToLocationSettings() returned')\r\n                                }\r\n                            }\r\n                        }\r\n                        q.resolve()\r\n                    }, cordova.plugins.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY // REQUEST_PRIORITY_LOW_POWER //REQUEST_PRIORITY_BALANCED_POWER_ACCURACY // iOS will ignore this\r\n                )\r\n                return q.promise\r\n            }\r\n\r\n            /**\r\n             * Get the current location of the user. This check the app has permission to get the users location\r\n             * @return Promise<ILocation>\r\n             */\r\n            function getCurrentPosition() {\r\n                // see http://stackoverflow.com/questions/3397585/navigator-geolocation-getcurrentposition-sometimes-works-sometimes-doesnt\r\n                $log.log('getCurrentPosition()')\r\n                var timeout = 10000\r\n                var q = $q.defer()\r\n                    // If on Android then use the plugin which uses the Fused Location Provider\r\n                if (ionic.Platform.isAndroid() && typeof cordova !== 'undefined' && cordova.plugins.locationServices) {\r\n\r\n                    $log.log('locationServices.geolocation.getCurrentPosition()')\r\n                    cordova.plugins.locationServices.geolocation.getCurrentPosition(\r\n                        function(position) {\r\n                            $log.log('locationServices.geolocation.getCurrentPosition() = ' + JSON.stringify(position))\r\n                            if (!position || !position.coords) {\r\n                                q.reject('GEO_ERROR')\r\n                            } else {\r\n                                $log.log('latitude:' + position.coords.latitude + ', longitude: ' + position.coords.longitude)\r\n                                var geoPoint = server.convertLocation(position.coords.latitude, position.coords.longitude)\r\n                                q.resolve(geoPoint)\r\n                            }\r\n                        },\r\n                        function(error) {\r\n                            q.reject('GEO_ERROR')\r\n                            console.warn('locationServices error ' + JSON.stringify(error))\r\n                        }, {\r\n                            timeout: timeout,\r\n                            // priority: 102 // PRIORITY_BALANCED_POWER_ACCURACY\r\n                            // priority: 104 // PRIORITY_LOW_POWER\r\n                            priority: 100 // PRIORITY_HIGH_ACCURACY\r\n                        })\r\n                    return q.promise\r\n                }\r\n\r\n                $log.log('$cordovaGeolocation.getCurrentPosition()')\r\n                var geolocFail = function() {\r\n                    $log.log('$cordovaGeolocation.getCurrentPosition did not return within the timeout')\r\n                    q.reject('GEO_ERROR')\r\n                }\r\n                var timer = $timeout(geolocFail, timeout + 1000) // wait an extra second longer than the expected geo timeout\r\n\r\n                $cordovaGeolocation.getCurrentPosition().then(function(location) {\r\n                    $timeout.cancel(timer)\r\n                    $log.log('location ' + JSON.stringify(location))\r\n                    var geoPoint = server.convertLocation(location.coords.latitude, location.coords.longitude)\r\n                    q.resolve(geoPoint)\r\n                }, function(error) {\r\n                    $timeout.cancel(timer)\r\n                    $log.log('getCurrentPosition error: ' + JSON.stringify(error))\r\n\r\n                    //if(error.code == 1){\r\n                    //\talert('You have denied app access to location');\r\n                    //} else {\r\n                    //\talert('code: '    + error.code    + '\\n' +\r\n                    //\t'message: ' + error.message + '\\n');\r\n                    //}\r\n\r\n                    q.reject('GEO_ERROR')\r\n                }, { maximumAge: 3600000, timeout: timeout, enableHighAccuracy: true })\r\n\r\n                return q.promise\r\n\r\n                // simple way without wrapping in a timer\r\n                //return $cordovaGeolocation.getCurrentPosition().then(function(location){\r\n                //\t$log.log(JSON.stringify(location))\r\n                //\treturn server.convertLocation(location.coords.latitude, location.coords.longitude)\r\n                //}, function(error){\r\n                //\t$log.log('position error: ' + JSON.stringify(error))\r\n                //\treturn $q.reject(error)\r\n                //}, { maximumAge: 1000000, timeout: 2000, enableHighAccuracy: true })\r\n            }\r\n\r\n            function saveSettings(profile) {\r\n                var mods = { notifyMatch: profile.notifyMatch, notifyMessage: profile.notifyMessage, distanceType: profile.distanceType, distance: profile.distance }\r\n                return server.saveSettings(service.profile, mods)\r\n                    .then(function(result) {\r\n                        $log.log('saveSettings result:' + JSON.stringify(result))\r\n                        return service.profile\r\n                    })\r\n            }\r\n\r\n            /**\r\n             * Update the user profile with their Facebook profile data\r\n             * @returns {ng.IPromise<IProfile>} the user profile\r\n             */\r\n            function copyFacebookProfile() {\r\n                return server.copyFacebookProfile().then(profile => {\r\n                    isAcntNew = true\r\n                    service.profile = profile\r\n                    return service.profile\r\n                })\r\n            }\r\n\r\n            function enableDiscovery() {\r\n                return saveProfile({ enabled: true })\r\n            }\r\n\r\n            /**\r\n             *\r\n             * @param profileChanges the changes to save, or null if a new profile\r\n             * @returns {IPromise<TResult>}\r\n             */\r\n            function saveProfile(profileChanges) {\r\n                $log.log('saving profile')\r\n\r\n                return server.saveProfile(service.profile, profileChanges)\r\n                    .then(function(result) {\r\n                        return service.profile\r\n                    })\r\n            }\r\n\r\n            /**\r\n             * @param profile the profile of the user that is being edited by the admin\r\n             * @param profileChanges the changes to save, or null if a new profile\r\n             * @returns {IPromise<TResult>}\r\n             */\r\n            function saveProfileForApplyBadge(profile, profileChanges) {\r\n                $log.log('applying badge')\r\n                return server.saveProfileForApplyBadge(profile, profileChanges)\r\n            }\r\n\r\n            function logout() {\r\n                //$analytics.eventTrack('logout')\r\n                service.userId = null\r\n                service.fbId = null\r\n                service.profile = null\r\n                matches = []\r\n                profileCache = {}\r\n                activeChatMatchId = null\r\n                activeChatMessages = null\r\n                unreadChats = {}\r\n                unreadChatsCount = 0\r\n                if (synchronizeInterval) {\r\n                    $interval.cancel(synchronizeInterval)\r\n                    synchronizeInterval = null\r\n                }\r\n                // TODO wait for all the server/fb logout calls to complete before going to sign-in\r\n                server.logout()\r\n                localStorage.clear()\r\n                $localStorage.$reset()\r\n                if (isAcntDelete)\r\n                    LocalDB.deleteDb() //JUS-226\r\n                    // TODO do we need to clear the image cache?\r\n                if ($rootScope.facebookConnected) {\r\n                    $log.log('logging out of Facebook')\r\n                    $cordovaFacebook.logout().then(function(result) {\r\n                        $log.log('logged out of facebook')\r\n                        delete $rootScope.facebookConnected\r\n                        delete $rootScope.fbAccessToken\r\n                    }, function(error) {\r\n                        // possible message from FB JS: FB.logout() called without an access token.\r\n                        $log.log('error logging out of Facebook ' + JSON.stringify(error))\r\n                    })\r\n                }\r\n\r\n                $ionicHistory.clearCache()\r\n                $ionicHistory.nextViewOptions({\r\n                    disableBack: true\r\n                })\r\n                $state.go('signin')\r\n            }\r\n\r\n            function deleteAccount() {\r\n                //$analytics.eventTrack('deleteAccount')\r\n                isAcntDelete = true\r\n                return server.deleteAccount().then(\r\n                    () => {\r\n                        logout() // do a best effort logout now the user object is destroyed\r\n                        return\r\n                    }\r\n                )\r\n            }\r\n\r\n            function deleteUnmatched() {\r\n                return server.deleteUnmatched()\r\n            }\r\n\r\n            /**\r\n             * Process a like/pass on a profile\r\n             * @param profile\r\n             * @param {boolean} liked\r\n             * @returns {Promise.<T>}\r\n             */\r\n            function processMatch(profile, liked) {\r\n                return server.processProfile(profile, liked, false).then(function(match) {\r\n                    $log.log('processed match action')\r\n                    if (typeof analytics !== 'undefined') {\r\n                        analytics.trackView(\"Swipe Controller\")\r\n                    }\r\n                    // If it's a mutual match then run a mutual match sync\r\n                    if (match && match.state === 'M') {\r\n                        if (typeof analytics !== 'undefined') {\r\n                            analytics.trackView(\"Match Controller\")\r\n                        }\r\n                        synchronizeMutualMatches()\r\n                    }\r\n                }, function(error) {\r\n                    $log.error('error processing match ' + JSON.stringify(error))\r\n                })\r\n            }\r\n\r\n            /**\r\n             * Process a like/pass on a profile from an admin POV\r\n             * @param profile\r\n             * @param {boolean} liked\r\n             * @param {boolean} forceConnect\r\n             * @returns {Promise.<T>}\r\n             */\r\n            function processMatchFromAdmin(profile, liked, forceConnect) {\r\n                return server.processProfile(profile, liked, forceConnect).then(function(match) {\r\n                    $log.log('processed match action from admin')\r\n\r\n                    if (match && match.state === 'M') {\r\n                        synchronizeMutualMatches()\r\n                    }\r\n                }, function(error) {\r\n                    $log.error('error processing match from admin' + JSON.stringify(error))\r\n                })\r\n            }\r\n\r\n\r\n            /**\r\n             * Process a pregnancy invitation on a profile\r\n             * @param profile\r\n             * @param {boolean} impregnate\r\n             * @returns {Promise.<T>}\r\n             */\r\n            function processPregnancy(profile, impregnate) {\r\n                //$analytics.eventTrack('processPregnancy', { impregnate: impregnate ? 'true' : 'false' })\r\n                return server.processPregnancy(profile, impregnate).then(function(match) {\r\n                    $log.log('processed impregnate action' + match)\r\n                        // If it's a mutual match then run a mutual match sync\r\n                        // if(match && match.state === 'M') {\r\n                        // \tsynchronizeMutualMatches()\r\n                        // }\r\n                }, function(error) {\r\n                    $log.error('error processing pregnancy invitation ' + JSON.stringify(error))\r\n                })\r\n            }\r\n\r\n            /**\r\n             * Call when the this user removes a matched user\r\n             * @param matchId\r\n             */\r\n            function removeMatch(matchId) {\r\n                //$analytics.eventTrack('removeMatch')\r\n                $log.log('removeMatch ' + matchId)\r\n                return server.removeMatch(matchId).then(function(result) {\r\n                    // remove the match from our local db and memory copy\r\n                    LocalDB.deleteMatch(matchId)\r\n                    _.remove(matches, { id: matchId })\r\n                })\r\n            }\r\n\r\n\r\n            /**\r\n             * Called when the other user removes this user (either via push notification or server sync)\r\n             * Either matchId or userId must be provided\r\n             * @param matchId the id of the match\r\n             * @param userId the user if of the match to remove\r\n             */\r\n            function removeMatchNotification(matchId, userId) {\r\n                $log.log('removeMatchNotification matchId:' + matchId + ' userId:' + userId)\r\n                if (!matches)\r\n                    return\r\n                    // If we have the userId then lookup the matchId\r\n                if (userId && !matchId) {\r\n                    let match = _.find(matches, match => match.uid1 === userId || match.uid2 === userId)\r\n                    if (!match) {\r\n                        $log.error('Could not find match with userId ' + userId + ' to remove from notification')\r\n                        return\r\n                    }\r\n                    matchId = match.id\r\n                }\r\n\r\n                _.remove(matches, { id: matchId })\r\n                if (activeChatMatchId == matchId) {\r\n                    activeChatMatchId = null\r\n                    activeChatMessages = null\r\n                    $log.log('cleared active chat from remove notification')\r\n                }\r\n                LocalDB.deleteMatch(matchId)\r\n                $rootScope.$broadcast('chatsUpdated', matchId)\r\n            }\r\n\r\n\r\n            function getProfileSearchResults() {\r\n                return service.profileSearchResults\r\n            }\r\n\r\n            function updateProfileSearchResults() {\r\n                //$analytics.eventTrack('searchProfiles')\r\n                return server.searchProfiles(service.profile).then(function(profiles) {\r\n                    service.profileSearchResults = profiles\r\n                    $rootScope.$broadcast('newProfileSearchResults')\r\n                    return service.profileSearchResults\r\n                })\r\n            }\r\n\r\n            /**\r\n             *\r\n             * @returns {Promise.<IProfile[]>}\r\n             */\r\n            function getProfilesWhoLikeMe() {\r\n                return server.getProfilesWhoLikeMe()\r\n            }\r\n\r\n            /**\r\n             *\r\n             * @returns {Promise.<IProfile[]>}\r\n             */\r\n            function getProfilesWhoWantsToHaveARelationshipWithMe() {\r\n                return server.getProfilesWhoWantsToHaveARelationshipWithMe()\r\n            }\r\n\r\n            /**\r\n             * Clear the existing search results, e.g. when changing the search settings\r\n             */\r\n            function clearProfileSearchResults() {\r\n                service.profileSearchResults = null\r\n            }\r\n\r\n\r\n            function getMutualMatches() {\r\n                $log.log('getMutualMatches()')\r\n                return matches\r\n            }\r\n\r\n            /**\r\n             * Load the mutual matches from the server and update our local copy\r\n             * @returns {Promise<IMatch[]> any new mutual matches\r\n             */\r\n            function synchronizeMutualMatches() {\r\n\r\n                if (matchSyncInProgress) {\r\n                    $log.debug('Match sync already in progress. requesting...')\r\n                    matchSyncInRequested = true\r\n                    return $q.when()\r\n                }\r\n                matchSyncInProgress = true\r\n\r\n                var toAdd\r\n                var matchesChanged = false\r\n\r\n                $log.debug('synchronizeMutualMatches()')\r\n                    // Reloading the user refreshes the User.matches property which is the array of the mutual match id's\r\n                return server.reloadUser().then(user => {\r\n\r\n                    var localMatchIds = _.pluck(matches, 'id')\r\n                    var serverMatchIds = user.matches\r\n                    var toRemove = _.difference(localMatchIds, serverMatchIds)\r\n                    toAdd = _.difference(serverMatchIds, localMatchIds)\r\n                    matchesChanged = toAdd.length || toRemove.length\r\n                    $log.debug('Found ' + toRemove.length + ' mutual matches to remove')\r\n                    $log.debug('Found ' + toAdd.length + ' mutual matches to add')\r\n\r\n                    // Ok to remove these async in the background. It should complete by the following server call anyway.\r\n                    for (let removeId of toRemove)\r\n                        removeMatchNotification(removeId)\r\n\r\n                    return server.getMatches(toAdd)\r\n\r\n                }).then(newMatches => {\r\n                    $log.debug('loaded ' + newMatches.length + ' matches to sync')\r\n\r\n                    if (toAdd.length !== newMatches.length) { // if the User.matches is out of sync, then rebuilt it\r\n                        $log.info('Rebuilding matches')\r\n                        server.rebuildMatches()\r\n                    }\r\n\r\n                    for (let match of newMatches) {\r\n                        if (!getMatch(match.id)) {\r\n                            console.log('storing new match ' + match.id)\r\n                            let profile = match.profile\r\n                            match.lastMessage = 'Matched on ' + dateFormat(match.createdAt, 'd mmm')\r\n                            match.read = false\r\n                            matches.unshift(match)\r\n                            LocalDB.saveMatch(match, profile)\r\n                            profileCache[profile.id] = profile\r\n                        } else {\r\n                            $log.info('Match ' + match.id + ' already stored')\r\n                        }\r\n                    }\r\n\r\n                    if (newMatches.length) {\r\n                        $log.debug('broadcasting newMatch id:' + newMatches[0].id)\r\n                        $rootScope.$broadcast('newMatch', newMatches[0])\r\n\r\n                        if (service.profile.notifyMatch)\r\n                            playSound('audio/match-notification.mp3')\r\n                    }\r\n\r\n                    if (matchesChanged) {\r\n                        $rootScope.$broadcast('chatsUpdated')\r\n                        refreshUnreadCount()\r\n                    }\r\n\r\n                    return newMatches\r\n\r\n                }).then(newMatches => newMatches, error => {\r\n                    $log.error('Error synching matches ' + JSON.stringify(error))\r\n                    return $q.reject(error)\r\n                }).finally(() => {\r\n                    $log.log('Match sync complete')\r\n                    matchSyncInProgress = false\r\n                    if (matchSyncInRequested) {\r\n                        $log.log('Additional match sync requested')\r\n                        matchSyncInRequested = false\r\n                        $timeout(synchronizeMutualMatches)\r\n                    }\r\n                })\r\n            }\r\n\r\n            /**\r\n             * Loads the chat messages from the server since the date stored in $localStorage.lastChatSyncTime, or from the\r\n             * beginning if there is no local storage value yet\r\n             */\r\n            function synchronizeChatMessages() {\r\n\r\n                if (matches.length === 0)\r\n                    return $q.when()\r\n\r\n                if (chatSyncInProgress) {\r\n                    $log.debug('Chat sync already in progress. requesting...')\r\n                    chatSyncInRequested = true\r\n                    return $q.when()\r\n                }\r\n                chatSyncInProgress = true\r\n\r\n                let matchesById = _.indexBy(matches, 'id')\r\n                let lastChatSyncTime = $localStorage.lastChatSyncTime\r\n\r\n                // On Android lastChatSyncTime was changing from an object to a string, causing the sync query to return no result\r\n                // Merely logging it (investigating my hunch) appears to keep it as an object. Quick fix for now. Needs more investigation.\r\n                $log.info('typeof ' + typeof lastChatSyncTime)\r\n\r\n                let newMessage = false // if there are any new messages (which we didn't already have locally) from this sync\r\n                $log.info('synchronizing chat messages' + (lastChatSyncTime ? ' from ' + lastChatSyncTime : ''))\r\n\r\n                if (typeof lastChatSyncTime === 'string')\r\n                    lastChatSyncTime = new Date(lastChatSyncTime)\r\n\r\n                return server.loadChatMessages(lastChatSyncTime)\r\n                    .then(function(messages) {\r\n                        $log.info('Found ' + messages.length + ' chat messages to synchronize')\r\n                        var saveActions = []\r\n                        for (let message of messages) {\r\n                            // Note: match may be null if its been removed by either user, or if it is a chat message\r\n                            // from a new match which we haven't synced yet.\r\n                            saveActions.push(saveNewMessage(matchesById[message.match.id], message))\r\n                        }\r\n\r\n                        $q.all(saveActions).then(results => {\r\n                            // Store where we have synced up to (i.e. the maximum createdAt in the messages array)\r\n                            if (messages.length)\r\n                                $localStorage.lastChatSyncTime = _.max(_.pluck(messages, 'createdAt'))\r\n\r\n                            refreshUnreadCount()\r\n\r\n                            // see if any of the message were new and saved to the db\r\n                            for (let newMsg of results)\r\n                                newMessage |= newMsg\r\n\r\n                            if (newMessage && service.profile.notifyMessage)\r\n                                playSound('audio/chat-notification.mp3')\r\n\r\n                        }, error => $log.error('Error saving chat messages ' + JSON.stringify(error)))\r\n\r\n                        // Update the active chat messages\r\n                        let newActiveMessage = null\r\n                        let activeMsgsById = _.indexBy(activeChatMessages, 'id')\r\n\r\n                        for (let msg of messages) {\r\n                            // If the msg belongs to the active match and not in the active msg array, then add it\r\n                            if (msg.match.id == activeChatMatchId && !activeMsgsById[msg.id]) {\r\n                                activeChatMessages.push(msg)\r\n                                activeChatMessages.sort(\r\n                                    function(msg1, msg2) { return msg1.createdAt.getTime() - msg2.createdAt.getTime() }\r\n                                )\r\n                                newActiveMessage = msg\r\n                            }\r\n                        }\r\n                        // Notify the chat controller to scroll down\r\n                        if (newActiveMessage !== null) {\r\n                            $log.log('broadcasting newMessage')\r\n                            $rootScope.$broadcast('newMessage', newActiveMessage)\r\n                        }\r\n\r\n                    }).finally(() => {\r\n                        $log.log('Chat sync complete')\r\n                        chatSyncInProgress = false\r\n                        if (chatSyncInRequested) {\r\n                            $log.log('Additional chat sync requested')\r\n                            chatSyncInRequested = false\r\n                            $timeout(synchronizeMutualMatches)\r\n                        }\r\n                    })\r\n            }\r\n\r\n\r\n            /**\r\n             * Saves a new chat message locally, and updates the Match object (lastMessage, lastUpdate, read), and re-sorts the matches\r\n             * @param matchId\r\n             * @param message\r\n             * @returns ng.Promise<boolean> If the message was new inserted into the database\r\n             */\r\n            function saveNewMessage(match, message) {\r\n\r\n                return LocalDB.saveChatMessage(message).then(\r\n                    (isNew) => {\r\n                        if (isNew && match) {\r\n                            match.lastMessage = message.lastMessage\r\n\r\n                            if (message.createdAt.getTime() > match.updatedAt.getTime())\r\n                                match.lastMessageAt = message.createdAt\r\n\r\n                            if (message.sender !== server.getUserId())\r\n                                setChatRead(match.id, false)\r\n\r\n                            $rootScope.$broadcast('chatsUpdated')\r\n\r\n                            matches.sort(function(a, b) {\r\n                                if (a.updatedAt.getTime() === b.updatedAt.getTime()) return 0\r\n                                return a.updatedAt.getTime() > b.updatedAt.getTime() ? -1 : 1\r\n                            })\r\n                        }\r\n                        return isNew\r\n                    })\r\n            }\r\n\r\n\r\n            /**\r\n             * Get a mutual match\r\n             * @param matchId\r\n             * @returns {IMatch}\r\n             */\r\n            function getMatch(matchId) {\r\n                return _.find(matches, 'id', matchId)\r\n            }\r\n\r\n\r\n\r\n            /**\r\n             * Sets and return the active chat. New messages will be added to the array returned\r\n             * @param matchId\r\n             * @returns {IPromise<IChatMessage[]>}\r\n             */\r\n            function getActiveChat(matchId) {\r\n                $log.log('getActiveChat ' + matchId)\r\n\r\n                if (matchId === activeChatMatchId)\r\n                    return $q.when(activeChatMessages)\r\n\r\n                return LocalDB.getChatMessages(matchId).then(function(messages) {\r\n                    activeChatMatchId = matchId\r\n                    activeChatMessages = messages\r\n                    return activeChatMessages\r\n                })\r\n            }\r\n\r\n\r\n\r\n            /**\r\n             * Update the read flag on a chat\r\n             * @param matchId the match/chat id\r\n             * @param read {boolean} the new read value\r\n             */\r\n            function setChatRead(matchId, read) {\r\n                if (!_.isBoolean(read))\r\n                    throw 'read must be a boolean'\r\n\r\n                var match = _.find(matches, { 'id': matchId })\r\n                if (match != null && match.read != read) {\r\n                    match.read = read\r\n                    LocalDB.setChatRead(matchId, read).then(() => refreshUnreadCount())\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Gets the number of chats that have unread messages. Can be used to check if there are any unread chats\r\n             * (for example to change or decorate a chat icon)\r\n             * @returns {number}\r\n             */\r\n            function getUnreadChatsCount() {\r\n                return unreadChatsCount\r\n            }\r\n\r\n            /**\r\n             * Reset the notification badge number (for iOS)\r\n             * See http://blog.parse.com/announcements/badge-management-for-ios/\r\n             * @returns\r\n             */\r\n            function resetBadge() {\r\n                return server.resetBadge()\r\n            }\r\n\r\n\r\n            function sendChatMessage(matchId, text, imageBase64, audioBase64) {\r\n                //$analytics.eventTrack('chatMessage')\r\n                if (typeof analytics !== 'undefined') {\r\n                    analytics.trackView(\"SendMessage Controller\")\r\n                }\r\n                var match = _.find(matches, { 'id': matchId })\r\n                match.id = matchId\r\n                var message = new ChatMessage()\r\n                message.match = match\r\n                if (text)\r\n                    message.text = text\r\n                message.senderName = service.profile.name\r\n\r\n                return server.sendChatMessage(message, imageBase64, audioBase64).then(function(savedMessage) {\r\n                    $log.log('sent chat message for match ' + matchId)\r\n                    if (activeChatMatchId === matchId) {\r\n                        $log.log('adding to active chat messages')\r\n                        activeChatMessages.push(savedMessage)\r\n                        activeChatMessages.sort(\r\n                            function(msg1, msg2) { return msg1.createdAt.getTime() - msg2.createdAt.getTime() }\r\n                        )\r\n                    }\r\n                    saveNewMessage(match, savedMessage)\r\n\r\n                    return savedMessage\r\n                })\r\n            }\r\n\r\n\r\n            function reportProfile(reason, profile, match) {\r\n                //$analytics.eventTrack('reportProfile')\r\n                $log.log('reporting profile ' + JSON.stringify(profile))\r\n                return server.reportProfile(reason, profile, match)\r\n            }\r\n\r\n\r\n\r\n            function sendContactMessage(message) {\r\n                //$analytics.eventTrack('contactMessage')\r\n                return server.sendContactMessage(message)\r\n            }\r\n\r\n\r\n            function setPhoto(base64data) {\r\n\r\n                return server.saveFile(\"photo.png\", base64data).then(file => {\r\n                    $log.log('photo saved. saving to profile...')\r\n                    var profileUpdate = {}\r\n\r\n                    if (MODERATE_PROFILE_PHOTOS) {\r\n                        profileUpdate.photosInReview = service.profile.photosInReview\r\n                        if (!profileUpdate.photosInReview) {\r\n                            profileUpdate.photosInReview = []\r\n                        }\r\n                        profileUpdate.photosInReview.push(file)\r\n                    } else {\r\n                        profileUpdate.photos = service.profile.photos\r\n                        if (!profileUpdate.photos) {\r\n                            profileUpdate.photos = []\r\n                        }\r\n                        profileUpdate.photos.push(file)\r\n                    }\r\n\r\n                    return server.saveProfile(service.profile, profileUpdate)\r\n                }).then(result => {\r\n                    $log.log(\"saved profile with photo\")\r\n                    return result\r\n                }, error => {\r\n                    $log.log(\"error saving photo file to profile \" + JSON.stringify(error))\r\n                    return $q.reject(error)\r\n                })\r\n            }\r\n\r\n            function saveBirthdate(birthdate) {\r\n                service.profile.birthdate = birthdate\r\n                service.profile.ageFrom = 18 //service.profile.age - 5\r\n                if (service.profile.ageFrom < 18) service.profile.ageFrom = 18\r\n                service.profile.ageTo = 55 //service.profile.age + 5\r\n                return server.saveProfile(service.profile, service.profile)\r\n            }\r\n\r\n            function convertImgToBase64(url, outputFormat) {\r\n                var q = $q.defer()\r\n                var canvas = document.createElement('CANVAS'),\r\n                    ctx = canvas.getContext('2d'),\r\n                    img = new Image\r\n                img.crossOrigin = 'Anonymous'\r\n                img.onload = function() {\r\n                    var dataURL\r\n                    canvas.height = img.height\r\n                    canvas.width = img.width\r\n                    ctx.drawImage(img, 0, 0)\r\n                    dataURL = canvas.toDataURL(outputFormat)\r\n                    canvas = null\r\n                    q.resolve(dataURL)\r\n                }\r\n                img.onerror = function() { q.reject('Failed to load image ' + url) }\r\n                img.src = url\r\n                return q.promise\r\n            }\r\n\r\n\r\n            function testPushNotification() {\r\n                return server.testPushNotification()\r\n            }\r\n\r\n            // Admin user functions\r\n\r\n            function getReportedUsers() {\r\n                return server.getReportedUsers()\r\n            }\r\n\r\n            function getBannedUsers() {\r\n                return server.getBannedUsers()\r\n            }\r\n\r\n            function getApplyBadgeUsers() {\r\n                return server.getApplyBadgeUsers()\r\n            }\r\n\r\n            function getReportedUserDetails(report) {\r\n                return server.getReportedUserDetails(report)\r\n            }\r\n\r\n            function deletePhoto(reportId, photoUrl) {\r\n                return server.deletePhoto(reportId, photoUrl)\r\n            }\r\n\r\n            function banUser(userId) {\r\n                return server.banUser(userId)\r\n            }\r\n\r\n            function closeReport(reportId, action) {\r\n                return server.closeReport(reportId, action)\r\n            }\r\n\r\n            function searchUsersByEmail(email) {\r\n                return server.searchUsersByEmail(email)\r\n            }\r\n\r\n            function searchUsersByName(name) {\r\n                return server.searchUsersByName(name)\r\n            }\r\n\r\n            function loadUser(userId) {\r\n                return server.loadUser(userId)\r\n            }\r\n\r\n            function deleteUser(userId) {\r\n                return server.deleteUser(userId)\r\n            }\r\n\r\n            function getProfilesWithPhotosToReview() {\r\n                return server.getProfilesWithPhotosToReview()\r\n            }\r\n\r\n            function reviewPhoto(profileId, fileUrl, approved) {\r\n                $log.log('reviewPhoto', profileId, fileUrl, approved)\r\n                if (!profileId) throw 'profileId is required'\r\n                if (!fileUrl) throw 'fileUrl is required'\r\n                return server.reviewPhoto(profileId, fileUrl, approved)\r\n            }\r\n\r\n            function addClinicsQuestion(clinicQuestion) {\r\n                return server.addClinicsQuestion(clinicQuestion)\r\n            }\r\n\r\n            function getClinicsQuestion() {\r\n                if (typeof analytics !== 'undefined') {\r\n                    analytics.trackView(\"Become A Parent Controller\")\r\n                }\r\n                return server.getClinicsQuestion()\r\n            }\r\n\r\n            function delClinicsQuestion(id) {\r\n                return server.delClinicsQuestion(id)\r\n            }\r\n\r\n            function addFindUs(findUs) {\r\n                return server.addFindUs(findUs)\r\n            }\r\n\r\n            function getFindUs() {\r\n                return server.getFindUs()\r\n            }\r\n\r\n            function delFindUs(id) {\r\n                return server.delFindUs(id)\r\n            }\r\n\r\n            function addFindUsReport(findUsVotes) {\r\n                return server.addFindUsReport(findUsVotes)\r\n            }\r\n\r\n            function getFindUsReport() {\r\n                return server.getFindUsReport()\r\n            }\r\n\r\n            function delFindUsReport(id) {\r\n                return server.getFindUsReport(id)\r\n            }\r\n\r\n            function addAboutJab(about) {\r\n                return server.addAboutJab(about)\r\n            }\r\n\r\n            function getAboutJab() {\r\n                return server.getAboutJab()\r\n            }\r\n\r\n            function getMatchesReport(numDays) {\r\n                return server.getMatchesReport(numDays)\r\n            }\r\n\r\n            function getChatMessageReport(numDays) {\r\n                return server.getChatMessageReport(numDays)\r\n            }\r\n\r\n            function getProfileNew() {\r\n                return server.getProfileNew(service.profile)\r\n            }\r\n\r\n            // Util functions\r\n\r\n            function filePath(file) {\r\n                if (ionic.Platform.isIOS())\r\n                    return file\r\n                else if (ionic.Platform.isAndroid())\r\n                    return '/android_asset/www/' + file\r\n                else\r\n                    return file\r\n            }\r\n\r\n            function playSound(file) {\r\n                if (ionic.Platform.isWebView()) { // Avoid an error when running in a desktop browser\r\n                    var media = new Media(filePath(file))\r\n                    media.play({ playAudioWhenScreenIsLocked: false })\r\n                }\r\n            }\r\n        })\r\n\r\n})(); // end IIFE","/**\r\n * @typedef {Object} User\r\n * @property {boolean} emailVerified - the match object\r\n * @property {boolean} admin - if the user is an admin user\r\n * @property {string} status - the status of the account, e.g. banned\r\n * @property {string[]} matches - an array of the ids of the Match objects that are a mutual match\r\n * @property {boolean} premium - if the user has a premium account (e.g. from in-app purchase/subscription)\r\n * @property {number} credits - the number of credits the user has (e.g. from in-app purchase)\r\n */\r\nvar userFields = [\r\n    'emailVerified', 'admin', 'matches', 'profile', 'status', 'premium', 'credits'\r\n]\r\n\r\n// See IProfile in data-model.ts\r\nvar profileFields = [\r\n    'uid',\r\n    'name',\r\n    'birthdate', 'age',\r\n    'about',\r\n    'photos', 'photosInReview',\r\n    'notifyMatch', 'notifyMessage',\r\n    'distance', 'distanceType',\r\n    'location', 'gps',\r\n    'enabled',\r\n    'gender', 'guys', 'girls',\r\n    'ageFrom', 'ageTo',\r\n    'personCategory', 'personType', 'personSperm', 'personEgg', 'personWomb', 'personEmbryo', 'personHelpLevel', 'hasSelfId',\r\n    'LFSperm', 'LFEggs', 'LFWomb', 'LFEmbryo', 'LFNot', 'LFHelpM', 'LFHelpO', 'thingsIHave', 'LFSelfId'\r\n]\r\n\r\nvar Profile = Parse.Object.extend({\r\n    className: \"Profile\",\r\n    attrs: profileFields\r\n})\r\n\r\n\r\n/**\r\n * @typedef {Object} Match\r\n * @property {string} uid1 - the id of the user 1 in the match (being the lowest ordered id of the two)\r\n * @property {string} uid2 - the id of the user 2 in the match (being the highest ordered id of the two)\r\n * @property {string} uid1action - the action the user with uid1 took. L for like, R for reject, or O if the other user rejected first\r\n * @property {string} uid2action - the action the user with uid2 took. L for like, R for reject, or O if the other user rejected first\r\n * @property {string} state - the state of the match. P if one user has liked. R if one user has rejected. M if a mutual match.\r\n *                           D if one user has removed what was previously a mutual match, or a user has deleted their account\r\n * @property {Profile} profile1 - if a mutual match then the profile of user with uid1\r\n * @property {Profile} profile2 - if a mutual match then the profile of user with uid2\r\n */\r\nvar matchFields = ['uid1', 'uid2', 'uid1action', 'uid2action', 'state', 'profile1', 'profile2', 'lastMessage', 'read', 'matchedDate']\r\nvar Match = Parse.Object.extend({\r\n        className: \"Match\",\r\n        attrs: matchFields\r\n    })\r\n    // Match also has the fields lastMessage and read in the local copy\r\n\r\n/**\r\n * @typedef {Object} ChatMessage\r\n * @property {Object} match - the match object\r\n * @property {string[]} userIds - an array of the user ids who are in this chat. This allows indexing all chats by user for efficient loading of the latest messages for a user\r\n * @property {string} text - the message text\r\n * @property {IFile} image - If an image message then the image file\r\n * @property {IFile} audio - If an audio message then the image file\r\n * @property {string} sender - the user id of the sender\r\n * @property {Date} createdAt - the date this message was created\r\n */\r\n// senderName is de-normalised here to avoid an API call in the ChatMessage.afterSave hook\r\nvar chatMessageFields = ['match', 'userIds', 'text', 'image', 'audio', 'sender', 'senderName']\r\nvar ChatMessage = Parse.Object.extend({\r\n    className: \"ChatMessage\",\r\n    attrs: chatMessageFields\r\n})\r\n\r\n/**\r\n * @typedef {Object} Report\r\n * @property {Object} reportedBy - the user who submitted the report\r\n * @property {Object} reportedUser - the user who was reported\r\n * @property {Object} match - (optional) the Match/Chat being reported about if already a mutual match\r\n * @property {Object} profile - the Profile being reported\r\n * @property {string} photo - (optional) the photo being reported\r\n * @property {string} reason - The reason for reporting ('S' spam, 'O' offensive)\r\n * @property {string} actionTaken - The action taken from this report (delete item and warn user, suspend/delete user, ignore)\r\n * @property {Object} actionUser - The admin user who took the action\r\n * @property {Date} updatedAt - the date this report was last updated\r\n * @property {Date} createdAt - the date this report was created\r\n */\r\nvar reportFields = ['matchId', 'reportedBy', 'reportedUser', 'match', 'profile', 'photo', 'reason', 'actionTaken', 'actionUser']\r\nvar Report = Parse.Object.extend({\r\n    className: \"Report\",\r\n    attrs: reportFields\r\n})\r\n\r\n\r\n/**\r\n * @typedef {Object} ContactMessage\r\n * @property {Object} user - the user who sent the message\r\n * @property {string} message - the message\r\n * @property {Date} updatedAt - the date this message was last updated\r\n * @property {Date} createdAt - the date this message was created\r\n */\r\nvar contactMessageFields = ['user', 'message']\r\nvar ContactMessage = Parse.Object.extend({\r\n    className: \"ContactMessage\",\r\n    attrs: contactMessageFields\r\n})\r\n\r\n/**\r\n * @typedef {Object} ClinicsQuestion\r\n * @property {string} answer - the answer\r\n * @property {string} question - the question\r\n * @property {number} position - the position of the question\r\n * @property {string} type - the type if for male , female or generic question\r\n * @property {string} video - URL of Youtube video\r\n */\r\nvar clinicsQuestionFields = ['answer', 'question', 'position', 'type', 'video']\r\nvar ClinicsQuestion = Parse.Object.extend({\r\n    className: \"ClinicsQuestion\",\r\n    attrs: clinicsQuestionFields\r\n})\r\n\r\n/**\r\n * @typedef {Object} FindUs\r\n * @property {string} name - the name\r\n */\r\nvar findUsFields = ['name']\r\nvar FindUs = Parse.Object.extend({\r\n    className: \"FindUs\",\r\n    attrs: findUsFields\r\n})\r\n\r\n/**\r\n * @typedef {Object} AboutJab\r\n * @property {string} message - the message\r\n * @property {string} videoId - the video ID\r\n */\r\nvar aboutJabFields = ['message', 'videoId']\r\nvar AboutJab = Parse.Object.extend({\r\n    className: \"AboutJab\",\r\n    attrs: aboutJabFields\r\n})\r\n\r\n/**\r\n * @typedef {Object} FindUsReport\r\n * @property {string} username - the name of the person\r\n * @property {string} name - the name of the group\r\n */\r\nvar findUsReportFields = ['username', 'name', 'checked']\r\nvar FindUsReport = Parse.Object.extend({\r\n    className: \"FindUsReport\",\r\n    attrs: findUsReportFields\r\n})\r\n\r\n\r\nenhance(Parse.User.prototype, userFields)\r\nenhance(Profile.prototype, profileFields)\r\nenhance(Match.prototype, matchFields)\r\nenhance(ChatMessage.prototype, chatMessageFields)\r\nenhance(Report.prototype, reportFields)\r\nenhance(ContactMessage.prototype, contactMessageFields)\r\nenhance(ClinicsQuestion.prototype, clinicsQuestionFields)\r\nenhance(FindUs.prototype, findUsFields)\r\nenhance(FindUsReport.prototype, findUsReportFields)\r\nenhance(AboutJab.prototype, aboutJabFields)\r\n\r\nfunction enhance(prototype, fields) {\r\n    for (var i = 0; i < fields.length; i++) {\r\n        (function() {\r\n            var propName = fields[i]\r\n            var proto = prototype\r\n            Object.defineProperty(proto, propName, {\r\n                get: function() {\r\n                    return this.get(propName)\r\n                },\r\n                set: function(value) {\r\n                    this.set(propName, value)\r\n                }\r\n            })\r\n        })()\r\n    }\r\n}\r\n\r\n\r\nObject.defineProperty(ChatMessage.prototype, 'lastMessage', {\r\n    get: function() {\r\n        if (this.text)\r\n            return this.text\r\n                // These values will be converted to images by the emoji filter\r\n        if (this.image)\r\n            return ':rice_scene:'\r\n        if (this.audio)\r\n            return ':speaker:'\r\n        return ''\r\n    }\r\n})\r\n\r\nObject.defineProperty(Profile.prototype, 'photoUrl', {\r\n    get: function() {\r\n        if (this.photos && this.photos.length) {\r\n            var photo = this.photos[0]\r\n            if (photo._url)\r\n                return photo._url\r\n            if (angular.isFunction(photo.url))\r\n                return photo.url()\r\n            if (angular.isString(photo.url))\r\n                return photo.url\r\n        }\r\n\r\n        return 'img/generic_avatar.jpg'\r\n    }\r\n})\r\n\r\nObject.defineProperty(Match.prototype, 'profileId', {\r\n    get: function() {\r\n        if (this.otherProfileId != null)\r\n            return this.otherProfileId\r\n        if (this.otherProfile)\r\n            return this.otherProfile.id\r\n        if (this.uid1 == Parse.User.current().id)\r\n            return this.profile2.id\r\n        if (this.uid2 == Parse.User.current().id)\r\n            return this.profile1.id\r\n        return null\r\n    }\r\n})\r\n\r\nObject.defineProperty(Match.prototype, 'profile', {\r\n    get: function() {\r\n        if (this.otherProfile)\r\n            return this.otherProfile\r\n        if (this.otherProfileId)\r\n            return this.otherProfileId == this.profile1.id ? this.profile1 : this.profile2\r\n        if (this.uid1 == Parse.User.current().id)\r\n            return this.profile2\r\n        if (this.uid2 == Parse.User.current().id)\r\n            return this.profile1\r\n        return null\r\n    },\r\n    set: function(obj) {\r\n        this.otherProfile = obj\r\n    }\r\n})\r\n\r\n// Alias the functions so the Parse promise matches the Angular API\r\nParse.Promise.prototype.finally = function(callback) {\r\n    return this.always(callback)\r\n}\r\nParse.Promise.prototype.catch = function(callback) {\r\n    return this.fail(callback)\r\n}\r\n\r\n\r\nangular.module('service.parse', ['constants', 'parse-angular'])\r\n\r\n.factory('ParseService', function($q, $log, parseAppId, serverUrl, parseMount) {\r\n\r\n    $log.log('Initializing Parse at ' + serverUrl + parseMount + '  App Id:' + parseAppId)\r\n    Parse.initialize(parseAppId, 'unused')\r\n    Parse.serverURL = serverUrl + parseMount\r\n\r\n    var service = {\r\n        // methods\r\n        init: init,\r\n        facebookLogin: facebookLogin,\r\n        linkedInLogin: linkedInLogin,\r\n        signUp: signUp,\r\n        logIn: logIn,\r\n        autoLogin: autoLogin,\r\n        registerPush: registerPush,\r\n        getTwilioToken: getTwilioToken,\r\n        rebuildMatches: rebuildMatches,\r\n        setPremium: setPremium,\r\n        addCredits: addCredits,\r\n        reloadUser: reloadUser,\r\n        reloadProfile: reloadProfile,\r\n        requestPasswordReset: requestPasswordReset,\r\n        copyFacebookProfile: copyFacebookProfile,\r\n        getUserId: getUserId,\r\n        getProfile: getProfile,\r\n        getProfileOfSelectedUser: getProfileOfSelectedUser,\r\n        getProfileForMatch: getProfileForMatch,\r\n        convertLocation: convertLocation,\r\n        saveSettings: saveSettings,\r\n        saveProfile: saveProfile,\r\n        saveProfileForApplyBadge: saveProfileForApplyBadge,\r\n        saveFile: saveFile,\r\n        searchProfiles: searchProfiles,\r\n        getProfilesWhoLikeMe: getProfilesWhoLikeMe,\r\n        getProfilesWhoWantsToHaveARelationshipWithMe: getProfilesWhoWantsToHaveARelationshipWithMe,\r\n        processProfile: processProfile,\r\n        processPregnancy: processPregnancy,\r\n        deleteUnmatched: deleteUnmatched,\r\n        getMatches: getMatches,\r\n        getChatMessages: getChatMessages,\r\n        loadChatMessages: loadChatMessages,\r\n        sendChatMessage: sendChatMessage,\r\n        removeMatch: removeMatch,\r\n        reportProfile: reportProfile,\r\n        sendContactMessage: sendContactMessage,\r\n        resetBadge: resetBadge,\r\n        logout: logout,\r\n        deleteAccount: deleteAccount,\r\n\r\n        testPushNotification: testPushNotification,\r\n\r\n        // admin functions\r\n        getReportedUsers: getReportedUsers,\r\n        getBannedUsers: getBannedUsers,\r\n        getApplyBadgeUsers: getApplyBadgeUsers,\r\n        getReportedUserDetails: getReportedUserDetails,\r\n        deletePhoto: deletePhoto,\r\n        banUser: banUser,\r\n        closeReport: closeReport,\r\n        getProfilesWithPhotosToReview: getProfilesWithPhotosToReview,\r\n        reviewPhoto: reviewPhoto,\r\n        searchUsersByEmail: searchUsersByEmail,\r\n        searchUsersByName: searchUsersByName,\r\n        loadUser: loadUser,\r\n        deleteUser: deleteUser,\r\n        addClinicsQuestion: addClinicsQuestion,\r\n        getClinicsQuestion: getClinicsQuestion,\r\n        delClinicsQuestion: delClinicsQuestion,\r\n        getFindUs: getFindUs,\r\n        addFindUs: addFindUs,\r\n        delFindUs: delFindUs,\r\n        addFindUsReport: addFindUsReport,\r\n        getFindUsReport: getFindUsReport,\r\n        delFindUsReport: delFindUsReport,\r\n        addAboutJab: addAboutJab,\r\n        getAboutJab: getAboutJab,\r\n        getMatchesReport: getMatchesReport,\r\n        getChatMessageReport: getChatMessageReport,\r\n\r\n        getProfileNew: getProfileNew\r\n    }\r\n\r\n    return service\r\n\r\n\r\n    // Constructs the argument for the Parse login from the Facebook response\r\n    function parseFbAuth(fbResponse) {\r\n        var parseFbAuth = {}\r\n        parseFbAuth.id = fbResponse.authResponse.userID\r\n        parseFbAuth.access_token = fbResponse.authResponse.accessToken\r\n        var expiryDate = new Date()\r\n        expiryDate.setSeconds(expiryDate.getSeconds() + fbResponse.authResponse.expiresIn)\r\n        parseFbAuth.expiration_date = expiryDate.toISOString()\r\n        return parseFbAuth\r\n    }\r\n\r\n\r\n    function init() {\r\n        // $log.info('ParseService.init')\r\n    }\r\n\r\n    /**\r\n     * Registers a new user with their email and password\r\n     * @param {string} email\r\n     * @param {string} password\r\n     * @returns {Promise} a promise which resolves if the signup is a success\r\n     */\r\n    function signUp(email, password) {\r\n        // we are using email as the username\r\n        // Parse actually has a separate email field, but you can use an email as the username\r\n\r\n        var username = email\r\n\r\n        return Parse.User.signUp(username, password, { email: email }).then(function(result) {\r\n            registerPush()\r\n            return result\r\n        }, function(error) {\r\n            // {\"code\":202,\"message\":\"username user@domain.com already taken\"}\r\n            // TODO transform to our own app error\r\n            return Parse.Promise.error(error)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Logs in a user with their email and password\r\n     * @param {string} email\r\n     * @param {string} password\r\n     * @returns {Promise} a promise which resolves if the login is a success\r\n     */\r\n    function logIn(email, password) {\r\n        return Parse.User.logIn(email, password).then(function(result) {\r\n            registerPush()\r\n            return result\r\n        }, function(error) {\r\n            // {\"code\":101,\"message\":\"invalid login parameters\"}\r\n            // TODO transform to our own app error\r\n            return Parse.Promise.error(error)\r\n        })\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param facebookResponse the JSON returned from a Facebook call to getLoginStatus() or login()\r\n     * that has a status of 'connected'\r\n     * @returns {Promise} a promise which will resolve if the user is successfully authenticated\r\n     */\r\n    function facebookLogin(facebookResponse) {\r\n        return Parse.FacebookUtils.logIn(parseFbAuth(facebookResponse)).then(function(result) {\r\n            registerPush()\r\n            return result\r\n        })\r\n    }\r\n\r\n\r\n    function linkedInLogin(authData) {\r\n        return Parse.Cloud.run('LoadLinkedInMember', { authData: authData })\r\n            .then(sessionToken => Parse.User.become(sessionToken))\r\n            .catch(_unwrapError)\r\n    }\r\n\r\n    /**\r\n     * Copies the users Facebook profile data to their Profile object\r\n     * @returns {Promise<IProfile>} A promise resolving to the updates to users profile (to update the cached profile without another server call)\r\n     */\r\n    function copyFacebookProfile() {\r\n        return Parse.Cloud.run('CopyFacebookProfile').catch(_unwrapError)\r\n    }\r\n\r\n    function autoLogin() {\r\n        registerPush()\r\n        return Parse.User.current()\r\n    }\r\n\r\n    function rebuildMatches() {\r\n        return Parse.Cloud.run('RebuildMatches').catch(_unwrapError)\r\n    }\r\n\r\n    /**\r\n     * Gets a Twilio access token\r\n     * @returns {Promise<String>} A promise resolving to the Twilio access token\r\n     */\r\n    function getTwilioToken() {\r\n        return Parse.Cloud.run('GetTwilioToken').catch(_unwrapError)\r\n    }\r\n\r\n    /**\r\n     * Registers for the Parse Push notifications by subscribing to a channel named user_<user_id>\r\n     */\r\n    function registerPush() {\r\n        // On a successful authentication register the push notifications\r\n        if (typeof ParsePushPlugin === 'undefined') return // ignore when developing in the browser\r\n\r\n        ParsePushPlugin.getInstallationId(\r\n            id => $log.log('Parse Push InstallationId ' + id),\r\n            error => $log.error('ParsePushPlugin getInstallationId error ' + error)\r\n        )\r\n\r\n        const channel = 'user_' + Parse.User.current().id\r\n        ParsePushPlugin.subscribe(channel,\r\n            () => $log.log('Subscribed to parse push channel ' + channel),\r\n            error => $log.error('Parse Push subscribe error ' + error)\r\n        )\r\n\r\n        ParsePushPlugin.on('receivePN', pushNotification => onNotification(pushNotification))\r\n        ParsePushPlugin.on('openPN', pushNotification => onNotificationOpen(pushNotification))\r\n    }\r\n\r\n    /**\r\n     * Set (or un-set) the premium account flag on the user from an in-app purchase\r\n     * @param premium boolean - the premium value to set\r\n     * @param product - the product object returned from the app store. Only required if setting premium to true\r\n     */\r\n    function setPremium(premium, product) {\r\n        if (premium && !product)\r\n            throw 'product must be provided if setting premium to true'\r\n        return Parse.Cloud.run('SetPremium', { premium: premium, product: product }).catch(_unwrapError)\r\n    }\r\n\r\n    /**\r\n     * Set (or un-set) the premium account flag on the user from an in-app purchase\r\n     * @param premium boolean - the premium value to set\r\n     * @param product - the product object returned from the app store. Only required if setting premium to true\r\n     */\r\n    function addCredits(product) {\r\n        if (!product)\r\n            throw 'product must be provided'\r\n        return Parse.Cloud.run('SetPremium', { premium: premium, product: product }).catch(_unwrapError)\r\n    }\r\n\r\n\r\n    /**\r\n     * Reload the user from the server\r\n     * @returns {Promise<User>} A promise which resolves to the current user\r\n     */\r\n    function reloadUser() {\r\n        return Parse.User.current().fetch()\r\n    }\r\n\r\n    /**\r\n     * Reload the profile from the server\r\n     * @returns {Promise<IProfile>} A promise which resolves to the profile\r\n     */\r\n    function reloadProfile(profile) {\r\n        return profile.fetch()\r\n    }\r\n\r\n    /**\r\n     * @param email the email address for the user to lookup to reset, or if null the current users email\r\n     * @returns {Promise} A promise which resolves if the request to the server completed\r\n     */\r\n    function requestPasswordReset(email) {\r\n        if (!email && Parse.User.current() != null)\r\n            email = Parse.User.current().getEmail()\r\n        return Parse.User.requestPasswordReset(email)\r\n    }\r\n\r\n    /**\r\n     * @returns {string} the id of the current user\r\n     */\r\n    function getUserId() {\r\n        return Parse.User.current().id\r\n    }\r\n\r\n    /**\r\n     * Loads the profile for the current user, and attempts to create one if it doesn't exist by re-saving the user\r\n     * @returns {IPromise<Profile>} A promise which resolves to the profile of the current user, or null if unavailable\r\n     */\r\n    function getProfile() {\r\n        var user = Parse.User.current()\r\n        var profile = user.profile\r\n        if (profile)\r\n            return profile.fetch() // reload from the server (TODO or cache in localStorage for faster login?)\r\n\r\n        $log.debug('Calling LinkProfileToUser')\r\n\r\n        return Parse.Cloud.run('LinkProfileToUser')\r\n            .then(profile => {\r\n                profile = fromJSON(profile, 'Profile')\r\n                user.profile = profile\r\n                return profile\r\n            }).catch(_unwrapError)\r\n    }\r\n\r\n    /**\r\n     * Loads the profile for the selected unmatched user, and attempts to create one if it doesn't exist by re-saving the user\r\n     * @param profileId the profileId to lookup \r\n     * @returns {IPromise<Profile>} A promise which resolves to the profile of the selected unmatched user, or null if unavailable for reporting\r\n     */\r\n    function getProfileOfSelectedUser(profileId) {\r\n        return Parse.Cloud.run('GetProfileOfSelectedUser', { profileId: profileId })\r\n            .then(profile => {\r\n                profile = fromJSON(profile, 'Profile')\r\n                return profile\r\n            }).catch(_unwrapError)\r\n    }\r\n\r\n\r\n    /**\r\n     * Loads a profile for a mutual match\r\n     * @param id the mutual match id\r\n     * @returns {Promise<IProfile>} a promise which resolves to the profile\r\n     */\r\n    function getProfileForMatch(matchId) {\r\n        return Parse.Cloud.run('GetProfileForMatch', { matchId: matchId })\r\n            .then(profile => fromJSON(profile, 'Profile'))\r\n            .catch(_unwrapError)\r\n    }\r\n\r\n    /**\r\n     * Converts a latitude and longitude into a Geo object used by the backend, and reducing accuracy for privacy\r\n     * @see http://ngcordova.com/docs/plugins/geolocation/\r\n     * @param location\r\n     * @returns {Parse.GeoPoint}\r\n     */\r\n    function convertLocation(latitude, longitude) {\r\n        // Rounds the locations from the GPS service to 2 decimal places (~1km) for privacy\r\n        // http://stackoverflow.com/questions/7167604/how-accurately-should-i-store-latitude-and-longitude\r\n        // http://blog.includesecurity.com/2014/02/how-i-was-able-to-track-location-of-any.html\r\n        return new Parse.GeoPoint({ latitude: Math.round(latitude * 100) / 100, longitude: Math.round(longitude * 100) / 100 })\r\n    }\r\n\r\n\r\n    function saveSettings(profile, profileChanges) {\r\n        var mods = { notifyMatch: profileChanges.notifyMatch, notifyMessage: profileChanges.notifyMessage, distanceType: profileChanges.distanceType, distance: profileChanges.distance }\r\n        return profile.save(mods)\r\n    }\r\n\r\n    function saveProfile(profile, profileChanges) {\r\n\r\n        if (profileChanges && profileChanges.location) {\r\n            // Convert to the Parse GeoPoint type\r\n            profileChanges.location = convertLocation(profileChanges.location.latitude, profileChanges.location.longitude)\r\n        }\r\n\r\n        // Workaround for re-saving file objects. Is this still required?\r\n        // See http://stackoverflow.com/questions/25297590/saving-javascript-object-that-has-an-array-of-parse-files-causes-converting-cir\r\n        if (profileChanges && profileChanges.photos) {\r\n            profileChanges.photos = _.map(profileChanges.photos, file => {\r\n                return { name: file.name, url: file.url(), __type: 'File' }\r\n            })\r\n        }\r\n        if (profileChanges && profileChanges.photosInReview) {\r\n            profileChanges.photosInReview = _.map(profileChanges.photosInReview, file => {\r\n                return { name: file.name, url: file.url(), __type: 'File' }\r\n            })\r\n        }\r\n\r\n        return profile.save(profileChanges)\r\n    }\r\n\r\n    function saveProfileForApplyBadge(profile, profileChanges) {\r\n        return Parse.Cloud.run('SaveProfileForApplyBadge', { id: profile.id, profileChanges: profileChanges }).catch(_unwrapError)\r\n    }\r\n\r\n    /**\r\n     * Saves a file\r\n     * @param filename the name of the file\r\n     * @param base64 the file data encoded with base64\r\n     * @returns {Promise} a promise which resolves to the file object\r\n     */\r\n    function saveFile(filename, base64) {\r\n        var imgFile = new Parse.File(filename, {\r\n            base64: base64\r\n        })\r\n        $log.log('saving file ' + filename)\r\n        return imgFile.save()\r\n    }\r\n\r\n\r\n    /**\r\n     * Processes a like/pass of a profile. If its a mutual match, then the Match object will be returned\r\n     * @param {Profile} profile\r\n     * @param {boolean} liked true if the user liked the profile, false if the user passed/rejected\r\n     * @param {boolean} forceConnect true if the action is from an admin wishing to establish connection\r\n     * @returns {Promise<Match>} a promise resolving to a Match if it was a mutual match, else null\r\n     */\r\n    function processProfile(profile, liked, forceConnect) {\r\n        // TODO rename cloud function to ProcessProfile\r\n        return Parse.Cloud.run('ProcessMatch', { otherUserId: profile.uid, liked: liked, forceConnect: forceConnect })\r\n            .then(match => fromJSON(match, 'Match')).catch(_unwrapError)\r\n    }\r\n\r\n    /**\r\n     * Processes a impregnate action of a profile. If its a mutual match, then the Match object will be returned\r\n     * @param {Profile} profile\r\n     * @param {boolean} impregnate true if the user sends the pregnancy invitation, false if the user passed/rejected\r\n     * @returns {Promise<Match>} a promise resolving to a Match if it was a mutual match, else null\r\n     */\r\n    function processPregnancy(profile, impregnate) {\r\n        return Parse.Cloud.run('ProcessPregnancy', { otherUserId: profile.uid, impregnate: impregnate })\r\n            .then(match => fromJSON(match, 'Match')).catch(_unwrapError)\r\n    }\r\n\r\n\r\n    /**\r\n     * Queries for profiles which:\r\n     * 1. Match the search criteria from the current users profile\r\n     * 2. Haven't been liked/passed by the current user\r\n     * 3. Haven't been passed by the other user\r\n     * @param {IProfile} searchParameters the search criteria\r\n     * @returns {Promise<Profile[]>} a promise resolving to an array of profiles\r\n     */\r\n    function searchProfiles(searchParameters) {\r\n        if (!searchParameters)\r\n            $log.error('search parameters were not provided')\r\n            // Can't use a Parse object as a param, so copy the fields. Could copy only the required search fields.\r\n        var searchParams = {};\r\n        for (var i = 0; i < profileFields.length; i++)\r\n            searchParams[profileFields[i]] = searchParameters[profileFields[i]]\r\n        return Parse.Cloud.run('GetMatches', searchParams).catch(_unwrapError)\r\n    }\r\n\r\n    /**\r\n     * Loads the mutual matches for the given ids\r\n     * @param {string[]} matchIds An array of the match ids\r\n     * @returns {Promise<IMatch[]>} an array of the mutual matches\r\n     */\r\n    function getMatches(matchIds) {\r\n        if (matchIds.length === 0)\r\n            return $q.when([])\r\n\r\n        return Parse.Cloud.run('GetMutualMatches', { matchIds: matchIds })\r\n            // Convert the JSON objects into the proper Parse objects\r\n            .then(matches => _.map(matches, match => {\r\n                let profile = fromJSON(match.otherProfile, 'Profile')\r\n                match = fromJSON(match, 'Match')\r\n                match.otherProfile = profile\r\n                return match\r\n            }))\r\n            .catch(_unwrapError)\r\n    }\r\n\r\n    /**\r\n     * Loads the mutual matches for the given ids\r\n     * @returns {Promise<IProfile[]>} an array of the mutual matches\r\n     */\r\n    function getProfilesWhoLikeMe() {\r\n        return Parse.Cloud.run('GetProfilesWhoLikeMe').catch(_unwrapError)\r\n    }\r\n\r\n    /**\r\n     * Loads the Profiles who wants to have a relationship with current user.\r\n     * @returns {Promise<IProfile[]>} an array of the mutual matches\r\n     */\r\n    function getProfilesWhoWantsToHaveARelationshipWithMe() {\r\n        return Parse.Cloud.run('GetProfilesWhoWantsToHaveARelationshipWithMe').catch(_unwrapError)\r\n    }\r\n\r\n\r\n    /**\r\n     * Loads the chat message for a mutual match\r\n     * @param {Match} match\r\n     * @returns {Promise<ChatMessage[]>} a promise resolving to an array of the ChatMessage's\r\n     */\r\n    function getChatMessages(matchId) {\r\n        var messagesQuery = new Parse.Query(\"ChatMessage\")\r\n        var match = Match.createWithoutData(matchId)\r\n        messagesQuery.equalTo(\"match\", match.toPointer())\r\n        messagesQuery.ascending('createdAt')\r\n        messagesQuery.limit(1000) // TODO handle more than 1000\r\n        return messagesQuery.find()\r\n    }\r\n\r\n\r\n    /**\r\n     * Loads all the chat messages for the match/chats the user is a member of.\r\n     * A date can be provided to load the most recent messages\r\n     * @param {Date} from the date to load the latest messages from, or null to load all\r\n     * @returns {Promise<ChatMessage[]>} a promise resolving to an array of the ChatMessage's\r\n     */\r\n    function loadChatMessages(fromDate) {\r\n        var messagesQuery = new Parse.Query(\"ChatMessage\")\r\n        messagesQuery.equalTo('userIds', getUserId()) // Find where the userIds array contains user.id\r\n        if (fromDate)\r\n            messagesQuery.greaterThan('createdAt', fromDate)\r\n        messagesQuery.ascending('createdAt')\r\n        messagesQuery.limit(1000)\r\n            // TODO handle if more than 1000? If a user logs into an existing account then just loading most recent 1000 could be enough\r\n        return messagesQuery.find()\r\n    }\r\n\r\n\r\n    /**\r\n     * Send a chat message. This sends a push notification to the recipient.\r\n     * @param {ChatMessage} message\r\n     * @param {string} imageBase64 an image in base64 encoding\r\n     * @param {string} audioBase64 an m4a audio file in base64 encoding\r\n     * @returns {Promise<ChatMessage>} a promise which resolves to the saved/sent message\r\n     */\r\n    function sendChatMessage(message, imageBase64, audioBase64) {\r\n        if (imageBase64 && audioBase64)\r\n            $log.error('Can only attach one of image or audio')\r\n\r\n        if (imageBase64) {\r\n            return new Parse.File('chat.png', { base64: imageBase64 }).save()\r\n                .then(function(file) {\r\n                    message.image = file\r\n                    return message.save()\r\n                })\r\n        }\r\n\r\n        if (audioBase64) {\r\n            $log.log('saving audio file')\r\n            return new Parse.File('chat.m4a', { base64: audioBase64 }).save()\r\n                .then(function(file) {\r\n                    message.audio = file\r\n                    return message.save()\r\n                })\r\n        }\r\n\r\n        return message.save() // text only message\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Unmatches an existing mutual match.  Sends a push notification to other user so this match can be removed from their matches too\r\n     * @param {string} matchId the id of the match to remove\r\n     * @returns {Promise} a promise which resolves when the remove is complete\r\n     */\r\n    function removeMatch(matchId) {\r\n        return Parse.Cloud.run('RemoveMatch', { matchId: matchId }).catch(_unwrapError)\r\n    }\r\n\r\n    /**\r\n     * Reports a match for spam or inappropriate images/chat\r\n     * @param {Object} profile the profile of the user to report\r\n     * @param {Object} match (optional) the related Match to report about\r\n     * @returns {Promise} a promise which resolves when the match has been reported\r\n     */\r\n    function reportProfile(reason, profile, match) {\r\n        var report = new Report()\r\n        report.reportedBy = getUserId()\r\n        report.reportedUser = profile.uid\r\n        report.profile = profile\r\n        report.reason = reason\r\n        report.match = match\r\n            // $log.log('saving report ' + report.toJSON())\r\n        return report.save()\r\n    }\r\n\r\n    function getProfileNew(searchParameters) {\r\n        if (!searchParameters)\r\n            $log.error('search parameters were not provided')\r\n            // Can't use a Parse object as a param, so copy the fields. Could copy only the required search fields.\r\n        var searchParams = {};\r\n        for (var i = 0; i < profileFields.length; i++)\r\n            searchParams[profileFields[i]] = searchParameters[profileFields[i]]\r\n        return Parse.Cloud.run('GetProfilesSpecial', searchParams).catch(_unwrapError)\r\n    }\r\n\r\n    /**\r\n     * This is only for test purposes.\r\n     * Delete all the Match objects where only one person has liked or either have rejected\r\n     * @returns {Promise} a promise which resolves when the matches have been deleted\r\n     */\r\n    function deleteUnmatched() {\r\n        return Parse.Cloud.run('DeleteUnmatched').catch(_unwrapError)\r\n    }\r\n\r\n    /**\r\n     * Sends a message to the admin/staff\r\n     * @param {string} message - the message from the user\r\n     * @returns {Promise} a promise which resolves when the message has been sent\r\n     */\r\n    function sendContactMessage(message) {\r\n        var contactMessage = new ContactMessage()\r\n        contactMessage.message = message\r\n        return contactMessage.save()\r\n    }\r\n\r\n    /**\r\n     * Reset the notification badge number (for iOS)\r\n     * See http://blog.parse.com/announcements/badge-management-for-ios/\r\n     * @returns\r\n     */\r\n    function resetBadge() {\r\n        // if (typeof ParsePushPlugin !== 'undefined' && ionic.Platform.isIOS())\r\n        //     ParsePushPlugin.resetBadge(\r\n        //         () => $log.info('notification badge reset'),\r\n        //         error => $log.error('error resetting badge ' + JSON.stringify(error))\r\n        //     )\r\n    }\r\n\r\n    /**\r\n     * Deletes all the matches, messages and profile data for this users account\r\n     * @returns {Promise} a promise which resolves when all the data has been deleted\r\n     */\r\n    function deleteAccount() {\r\n        return Parse.Cloud.run('DeleteAccount').catch(_unwrapError)\r\n    }\r\n\r\n    /**\r\n     * Logs the user out and un-subscribes from Push notifications\r\n     */\r\n    function logout() {\r\n        if (typeof ParsePushPlugin != 'undefined' && Parse.User.current()) {\r\n            ParsePushPlugin.unsubscribe('user_' + Parse.User.current().id, function(msg) {\r\n                $log.log('ParsePush unsubscribed')\r\n            }, function(e) {\r\n                $log.log('ParsePush unsubscribe error ' + e)\r\n            })\r\n        }\r\n        return Parse.User.logOut()\r\n    }\r\n\r\n\r\n    // Debug functions\r\n\r\n    function testPushNotification() {\r\n        return Parse.Cloud.run('TestPushNotification').catch(_unwrapError)\r\n    }\r\n\r\n\r\n    // Admin user functions\r\n\r\n    function getReportedUsers() {\r\n        return Parse.Cloud.run('GetReportedUsers')\r\n            .then(reports => _.map(reports, toId))\r\n            .catch(_unwrapError)\r\n    }\r\n\r\n    function getBannedUsers() {\r\n        return Parse.Cloud.run('GetBannedUsers')\r\n            .then(reports => _.map(reports, toId))\r\n            .catch(_unwrapError)\r\n    }\r\n\r\n    function getApplyBadgeUsers() {\r\n        return Parse.Cloud.run('GetApplyBadgeUsers')\r\n            .then(profiles => _.map(profiles, profile => {\r\n                let profileLocal = fromJSON(profile, 'Profile')\r\n                return profileLocal\r\n            }))\r\n            .catch(_unwrapError)\r\n    }\r\n\r\n    function getReportedUserDetails(report) {\r\n        return Parse.Cloud.run('GetReportedUserDetails', { reportedBy: report.reportedBy.id, reportedUser: report.reportedUser.id })\r\n            .then(report => toId)\r\n            .catch(_unwrapError)\r\n    }\r\n\r\n    function deletePhoto(reportId, photoUrl) {\r\n        return Parse.Cloud.run('DeletePhoto', { reportId: reportId, photoUrl: photoUrl }).catch(_unwrapError)\r\n    }\r\n\r\n    function banUser(userId) {\r\n        return Parse.Cloud.run('BanUser', { userId: userId }).catch(_unwrapError)\r\n    }\r\n\r\n    function closeReport(reportId, action) {\r\n        return Parse.Cloud.run('CloseReport', { reportId: reportId, action: action }).catch(_unwrapError)\r\n    }\r\n\r\n    function searchUsersByEmail(email) {\r\n        return Parse.Cloud.run('SearchUsersByEmail', { email: email }).catch(_unwrapError)\r\n    }\r\n\r\n    function searchUsersByName(name) {\r\n        return Parse.Cloud.run('SearchUsersByName', { name: name }).catch(_unwrapError)\r\n    }\r\n\r\n    function loadUser(userId) {\r\n        return Parse.Cloud.run('LoadUser', { userId: userId }).catch(_unwrapError)\r\n    }\r\n\r\n    function deleteUser(userId) {\r\n        return Parse.Cloud.run('DeleteUser', { userId: userId }).catch(_unwrapError)\r\n    }\r\n\r\n    function getProfilesWithPhotosToReview() {\r\n        return Parse.Cloud.run('GetProfilesWithPhotosToReview')\r\n            .then(profiles => _.map(profiles, toId))\r\n            .catch(_unwrapError)\r\n    }\r\n\r\n    function reviewPhoto(profileId, fileUrl, approved) {\r\n        return Parse.Cloud.run('ReviewPhoto', { profileId: profileId, fileUrl: fileUrl, approved: approved }).catch(_unwrapError)\r\n    }\r\n\r\n    function addClinicsQuestion(clinicQuestion) {\r\n        return Parse.Cloud.run('AddClinicsQuestion', { clinicQuestion: clinicQuestion }).catch(_unwrapError)\r\n    }\r\n\r\n    function getClinicsQuestion() {\r\n        return Parse.Cloud.run('GetClinicsQuestion').catch(_unwrapError)\r\n    }\r\n\r\n    function delClinicsQuestion(id) {\r\n        return Parse.Cloud.run('DelClinicsQuestion', { id: id }).catch(_unwrapError)\r\n    }\r\n\r\n    function addFindUs(findUs) {\r\n        return Parse.Cloud.run('AddFindUs', { findUs: findUs }).catch(_unwrapError)\r\n    }\r\n\r\n    function getFindUs() {\r\n        return Parse.Cloud.run('GetFindUs').catch(_unwrapError)\r\n    }\r\n\r\n    function delFindUs(id) {\r\n        return Parse.Cloud.run('DelFindUs', { id: id }).catch(_unwrapError)\r\n    }\r\n\r\n    function addFindUsReport(findUsVotes) {\r\n        return Parse.Cloud.run('AddFindUsReport', { findUsVotes: findUsVotes }).catch(_unwrapError)\r\n    }\r\n\r\n    function getFindUsReport() {\r\n        return Parse.Cloud.run('GetFindUsReport').catch(_unwrapError)\r\n    }\r\n\r\n    function delFindUsReport(id) {\r\n        return Parse.Cloud.run('DelFindUsReport', { id: id }).catch(_unwrapError)\r\n    }\r\n\r\n    function addAboutJab(about) {\r\n        return Parse.Cloud.run('AddAboutJab', { about: about }).catch(_unwrapError)\r\n    }\r\n\r\n    function getAboutJab() {\r\n        return Parse.Cloud.run('GetAboutJab').catch(_unwrapError)\r\n    }\r\n\r\n    function getMatchesReport(numDays) {\r\n        return Parse.Cloud.run('GetMatchesReport', { numDays: numDays }).catch(_unwrapError)\r\n    }\r\n\r\n    function getChatMessageReport(numDays) {\r\n        return Parse.Cloud.run('GetChatMessageReport', { numDays: numDays }).catch(_unwrapError)\r\n    }\r\n\r\n    // Private functions\r\n\r\n    /**\r\n     * Converts a Parse object in the JSON format (i.e. whats returned from ParseObject.toJSON()) back to the\r\n     * full Parse object\r\n     */\r\n    function fromJSON(object, className) {\r\n        if (!object) {\r\n            $log.debug('fromJSON object is null for ' + className)\r\n            return null\r\n        }\r\n        object.className = className\r\n        return Parse.Object.fromJSON(object)\r\n    }\r\n\r\n    /**\r\n     * Converts the internal mongo objectId to the Parse id\r\n     * @param object\r\n     * @returns {*}\r\n     */\r\n    function toId(object) {\r\n        object.id = object.objectId\r\n        return object\r\n    }\r\n\r\n    /**\r\n     * Parse cloud functions only return a string as an error.  If we have returned a JSON string from response.error()\r\n     * then try to return the parsed object\r\n     * @param error an error from a cloud function\r\n     * @returns {*}\r\n     */\r\n    function _unwrapError(error) {\r\n        $log.debug('unwrapping ' + JSON.stringify(error))\r\n\r\n        // 141 is SCRIPT_ERROR, including when response.error() was called\r\n        if (error.code === 141) {\r\n            if (_.isNumber(error.message.code)) {\r\n                // An error object was returned as the message\r\n                error = error.message\r\n            } else if (_.isString(error.message) && error.message.startsWith('{')) {\r\n                // There's an error object as a string\r\n                try {\r\n                    error = JSON.parse(error.message)\r\n                    return $q.reject(error)\r\n                } catch (e) {\r\n                    $log.debug('Error parsing unwrapped error ' + e)\r\n                }\r\n            }\r\n            if (error.message == 'function not found')\r\n                $log.error('Cloud function not found. Is the latest Cloud Code deployed?')\r\n        }\r\n        return $q.reject(error)\r\n    }\r\n\r\n\r\n});","angular.module('filters', [])\n\n\t.filter('escapeHTML', function() {\n\t\treturn function(text) {\n\t\t\tif (text) {\n\t\t\t\treturn text.\n\t\t\t\t\treplace(/&/g, '&amp;').\n\t\t\t\t\treplace(/</g, '&lt;').\n\t\t\t\t\treplace(/>/g, '&gt;').\n\t\t\t\t\treplace(/'/g, '&#39;').\n\t\t\t\t\treplace(/\"/g, '&quot;')\n\t\t\t}\n\t\t\treturn ''\n\t\t}\n\t})\n\n\n\t.filter('chatDateFormat', function() {\n\t\tvar millisInWeek = 1000 * 60 * 60 * 24 * 7\n\t\treturn function(date) {\n\t\t\tif (!date)\n\t\t\t\treturn ''\n\n\t\t\t// If the date is less than a week ago then output the Day and time e.g. Fri 3:30 pm\n\t\t\t// Else print the date and time e.g. Oct 12 6:30am\n\n\t\t\tvar now = Date.now()\n\t\t\tif(now - date.getTime() < millisInWeek)\n\t\t\t\treturn dateFormat(date, 'ddd h:MM TT')\n\t\t\telse\n\t\t\t\treturn dateFormat(date, 'd mmm h:MM TT')\n\n\t\t}\n\t})\n\n\t.filter('dateFormat', function() {\n\t\treturn function(date, format) {\n\t\t\tif (!date)\n\t\t\t\treturn ''\n\n\t\t\treturn dateFormat(date, format)\n\t\t}\n\t})\n","var platformReady, fbJsSdkLoaded\r\n\r\nvar app = angular.module('ionicApp', ['constants', 'ionic', 'AppUtil', 'ImagesUtil', 'templates', 'controllers', 'controllers.share', 'service.app',\r\n        'ui.slider', 'ngImgCrop', 'ngAnimate', 'pascalprecht.translate', 'emoji', 'ImgCache', 'monospaced.elastic',\r\n        'ngStorage', 'SocialAuth', 'ngCookies', 'filters', 'chart.js'\r\n        // Add your own extra dependencies on the line below with the comma first to make merging updates easier\r\n\r\n    ])\r\n    .run(function($ionicPlatform, AppService, ImgCache, $rootScope, $log, appName, env, gcpBrowserKey) {\r\n             \r\n        $rootScope.appName = appName\r\n\r\n        $ionicPlatform.ready(function() {\r\n\r\n                /* FCMPlugin.onTokenRefresh(function(token){\r\n                  console.log( token );\r\n                });\r\n\r\n                FCMPlugin.getToken(function(token){\r\n                    window.localStorage.setItem('device_id', token);\r\n                  console.log( token );\r\n                  });*/\r\n                \r\n            $log.log('ionicPlatform.ready')\r\n            $log.log('env: ' + env)\r\n\r\n            // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard\r\n            // for form inputs)\r\n            if (window.cordova && window.cordova.plugins.Keyboard) {\r\n                cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true)\r\n            }\r\n            if (window.StatusBar) {\r\n                // org.apache.cordova.statusbar required\r\n                StatusBar.styleDefault()\r\n            }\r\n\r\n            ImgCache.init(function() {\r\n                $log.log('ImgCache init: success!')\r\n            }, function() {\r\n                $log.warn('ImgCache init: error! Check the log for errors')\r\n            })\r\n\r\n            if (typeof analytics !== 'undefined') {\r\n                analytics.startTrackerWithId(\"UA-94067520-1\")\r\n            } else {\r\n                console.log(\"Google Analytics Unavailable\")\r\n            }\r\n\r\n            // Store the app version in the root scope\r\n            if (window.cordova && window.cordova['getAppVersion'])\r\n                window.cordova['getAppVersion'].getVersionNumber().then(version => {\r\n                    $log.info('App version: ' + version)\r\n                    $rootScope.appVersion = version\r\n                })\r\n            else\r\n                $log.info('cordova.getAppVersion is not available')\r\n\r\n            // In development mode inject the javascript for Browser Sync\r\n            if (env === 'dev') {\r\n                var bsScript = document.createElement('script')\r\n                bsScript.id = '__bs_script__'\r\n                bsScript.src = 'http://HOST:3000/browser-sync/browser-sync-client.2.12.12.js'.replace('HOST', location.hostname)\r\n                bsScript.async = true\r\n                document.body.appendChild(bsScript)\r\n            }\r\n\r\n            var googleMapsScript = document.createElement('script')\r\n            googleMapsScript.src = 'https://maps.googleapis.com/maps/api/js?key=' + gcpBrowserKey\r\n            googleMapsScript.async = true\r\n            document.body.appendChild(googleMapsScript)\r\n\r\n            AppService.init()\r\n            platformReady = true\r\n        })\r\n    })\r\n\r\n.config(['$translateProvider', function($translateProvider) {\r\n    // TRANSLATION_EN etc are the global variables defined in /app/js/translations/\r\n    $translateProvider\r\n        .translations('en', TRANSLATION_EN)\r\n        .translations('de', TRANSLATION_DE)\r\n        .useLocalStorage()\r\n        .fallbackLanguage('en')\r\n        .registerAvailableLanguageKeys(['en', 'de'], {\r\n            'en_*': 'en',\r\n            'de_*': 'de'\r\n        })\r\n        .useSanitizeValueStrategy('sanitizeParameters')\r\n        .determinePreferredLanguage()\r\n}])\r\n\r\n.config(function($compileProvider, env) {\r\n    // See https://docs.angularjs.org/guide/production\r\n    if (env === 'prod') {\r\n        console.log('Disabling $compileProvider debug info')\r\n        $compileProvider.debugInfoEnabled(false)\r\n    }\r\n})\r\n\r\n.config(function($ionicConfigProvider) {\r\n    $ionicConfigProvider.backButton.text('').previousTitleText(false)\r\n\r\n    if (!ionic.Platform.isWebView() || ionic.Platform.isIOS()) {\r\n        // we are using iconicons 2.0 which doesn't include the iOS back button icon used by Ionic beta-14\r\n        $ionicConfigProvider.backButton.text('').icon('ion-ios-arrow-back')\r\n    }\r\n\r\n    // Enable native scrolling for Android\r\n    var jsScrolling = ionic.Platform.isAndroid() ? false : true\r\n    $ionicConfigProvider.scrolling.jsScrolling(jsScrolling)\r\n})\r\n\r\n.config(function(ImgCacheProvider) {\r\n    ImgCacheProvider.setOptions({\r\n            //debug: true,\r\n            usePersistentCache: true\r\n        })\r\n        // Set this option to init imgcache.js manually after device is ready\r\n    ImgCacheProvider.manualInit = true\r\n})\r\n\r\n// TODO this is already in filters-util.js. Need to delete this duplicate and test\r\n.filter('escapeHTML', function() {\r\n    return function(text) {\r\n        if (text) {\r\n            return text.\r\n            replace(/&/g, '&amp;').\r\n            replace(/</g, '&lt;').\r\n            replace(/>/g, '&gt;').\r\n            replace(/'/g, '&#39;').\r\n            replace(/\"/g, '&quot;');\r\n        }\r\n        return '';\r\n    }\r\n});","/**\n * Util directives which don't contain any app domain model/services specific functionality\n */\nangular.module('ionicApp')\n\n\t/**\n\t * This directive should be added as the last element in a scrollable ion-content.\n\t * When the native keyboard shows it will add a space the size of the keyboard at the\n\t * end of the scroll page and scroll down so what was displaying at the bottom of the\n\t * screen will display at the top of the keyboard.\n\t *\n\t * scrollDelegate - the id of the ionicScrollDelegate to adjust\n\t * offset - (optional) the id of an element to reduce the adjustment by. For example a sub-footer bar which\n\t *            is hidden when the keyboard displays\n\t */\n\t.directive('keyboardScrollSpacer', function($log, $timeout, $ionicScrollDelegate, $document) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: {\n\t\t\t\t'offset': '@',\n\t\t\t\t'scrollDelegate': '@',\n\t\t\t},\n\t\t\ttemplate: '<div style=\"height:0\"></div>',\n\t\t\tlink: function(scope, element, attr) {\n\n\t\t\t\tvar viewScroll = $ionicScrollDelegate.$getByHandle(scope.scrollDelegate)\n\t\t\t\t// The height of the keyboard, which will get set the first time there is a native.keyboardshow event\n\t\t\t\tvar keyboardHeight\n\t\t\t\t// How far to scroll, allowing for an offset\n\t\t\t\tvar scrollDistance\n\n\t\t\t\t// Get the height of the offset element if provided\n\t\t\t\tvar offsetHeight = 0\n\t\t\t\tif(scope.offset) {\n\t\t\t\t\tvar offsetElement = $document[0].getElementById(scope.offset)\n\t\t\t\t\tif(offsetElement)\n\t\t\t\t\t\toffsetHeight = offsetElement.offsetHeight\n\t\t\t\t\telse\n\t\t\t\t\t\t$log.warn('keyboardScrollSpacer could not find element with id scope.offset')\n\t\t\t\t}\n\n\t\t\t\tfunction keyboardShow(event) {\n\t\t\t\t\tkeyboardHeight = event.keyboardHeight\n\t\t\t\t\t// Add add the empty space and scroll up so the content moves up with keyboard\n\t\t\t\t\tscrollDistance = event.keyboardHeight - offsetHeight\n\t\t\t\t\telement.css('height', scrollDistance)\n\t\t\t\t\tviewScroll.scrollBy(0, scrollDistance, false)\n\t\t\t\t}\n\n\t\t\t\tfunction keyboardHide(event) {\n\t\t\t\t\tvar scrollFromBottom = viewScroll.getScrollView().getScrollMax().top - viewScroll.getScrollPosition().top\n\n\t\t\t\t\t// Remove the empty space so the visible content move down as the keyboard closes\n\t\t\t\t\telement.css('height', 0)\n\t\t\t\t\tif(scrollFromBottom <= keyboardHeight) // It doesn't like scrolling more than possible, so just call scrollBottom\n\t\t\t\t\t\t$timeout(() => viewScroll.scrollBottom(false))\n\t\t\t\t\telse\n\t\t\t\t\t\t$timeout(() => viewScroll.scrollBy(0, -scrollDistance, false))\n\t\t\t\t}\n\n\t\t\t\twindow.addEventListener('native.keyboardshow', keyboardShow)\n\t\t\t\twindow.addEventListener('native.keyboardhide', keyboardHide)\n\n\t\t\t\tscope.$on('$destroy', () => {\n\t\t\t\t\twindow.removeEventListener('native.keyboardshow', keyboardShow)\n\t\t\t\t\twindow.removeEventListener('native.keyboardhide', keyboardHide)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t})\n\n\n\t// For example this can be used so a chat message is sent when the user presses return on the keyboard\n\t.directive('return-on-enter', function($timeout) {\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tscope: {\n\t\t\t\t'returnClose': '=',\n\t\t\t\t'onReturn': '&',\n\t\t\t\t'onFocus': '&',\n\t\t\t\t'onBlur': '&'\n\t\t\t},\n\t\t\tlink: function(scope, element, attr) {\n\t\t\t\telement.bind('focus', function(e) {\n\t\t\t\t\tif(scope.onFocus) {\n\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\tscope.onFocus()\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\telement.bind('blur', function(e) {\n\t\t\t\t\tif(scope.onBlur) {\n\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\tscope.onBlur()\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\telement.bind('keydown', function(e) {\n\t\t\t\t\tif(e.which == 13) {\n\t\t\t\t\t\tif(scope.returnClose) element[0].blur()\n\t\t\t\t\t\tif(scope.onReturn) {\n\t\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\t\tscope.onReturn()\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t})","var TRANSLATION_EN = {\r\n\r\n    // Actions and Processes\r\n    'OK': 'Ok',\r\n    'SAVE': 'Save',\r\n    'SEND': 'Send',\r\n    'CANCEL': 'Cancel',\r\n    'DELETE': 'Delete',\r\n    'EDIT': 'Edit',\r\n    'LOADING': 'Loading',\r\n    'REMOVE': 'Remove',\r\n    'REPORT': 'Report',\r\n    'LOG_IN': 'Log in',\r\n    'LOGOUT': 'Logout',\r\n    'EMAIL': 'Email',\r\n    'REGISTER': 'Register',\r\n    'ADMIN': 'Admin',\r\n    'SENDING': 'Sending',\r\n    'RESEND': 'Resend',\r\n    'ACCEPT': 'Accept',\r\n    'REJECT': 'Reject',\r\n    'CALLING': 'Calling',\r\n    'VERSION': 'Version',\r\n\r\n    // Auth, form and location.\r\n    'INVALID_EMAIL_PASSWORD': 'Invalid email/password',\r\n    'ACCOUNT_BANNED': 'This account has been disabled',\r\n    'PULL_TO_REFRESH': 'Pull to refresh...',\r\n    'LANGUAGE': 'Language',\r\n    'PASSWORD': 'Password',\r\n    'RESET_PASSWORD': 'Reset password',\r\n    'PASSWORD_RESET_SENT': 'Password reset link emailed',\r\n    'PASSWORD_LENGTH': 'Password must be at least 6 characters',\r\n    'INVALID_EMAIL': 'Enter a valid email',\r\n    'LOGGING_IN_TO_FB': 'Logging into Facebook',\r\n    'LOGGING_IN_TO_LINKEDIN': 'Logging into LinkedIn',\r\n    'LOADING_PROFILE': 'Loading profile',\r\n    'LOADING_FB_PROFILE': 'Loading Facebook profile',\r\n    'CREATING_ACCOUNT': 'Creating account',\r\n    'WAITING_FOR_GPS': 'Waiting for GPS location',\r\n    'LOGIN_ERROR': 'Error logging in. Try again later',\r\n    'VERIFY_EMAIL_MESSAGE': 'Check your inbox for an email to verify your address, then come back and click the button below',\r\n    'CHECK_EMAIL_VERIFICATION': 'Check Email Verification',\r\n    'EMAIL_NOT_VERIFIED': 'Email is not verified',\r\n    'FIRST_NAME_REQUIRED': 'First name is required',\r\n    'SURNAME_REQUIRED': 'Surname is required',\r\n    'BIRTH_DAY_REQUIRED': 'Birth day is required',\r\n    'BIRTH_MONTH_REQUIRED': 'Birth month is required',\r\n    'BIRTH_YEAR_REQUIRED': 'Birth year is required',\r\n    'GENDER_REQUIRED': 'Gender is required',\r\n    'TERMS_OF_USE': 'Terms of Use',\r\n\r\n    //Menu\r\n    'MENU_PROFILE': 'My Profile',\r\n    'MENU_MATCHES': 'Find Matches',\r\n    'MENU_CHAT': 'Chat',\r\n    'MENU_LIKED_ME': 'People Who Liked Me',\r\n    'MENU_DISCOVERY': 'Discovery Preferences',\r\n    'MENU_SETTINGS': 'Settings',\r\n    'MENU_CONTACT': 'Send Your Feedback',\r\n    'MENU_SHARE': 'Invite My Friends',\r\n    'MENU_CO_PARENTS': 'My Co-Parents Shortlist',\r\n    'ABOUT_JUST_A_BABY': 'About Just a Baby',\r\n    'FAQ': 'FAQ',    \r\n    'SHARE_VIDEO': 'Share A Video',\r\n    \r\n    // Profile\r\n    'PROFILE_SETUP_MSG': 'We need a couple more details',\r\n    'BIRTH_DAY': 'Birth day',\r\n    'BIRTH_MONTH': 'Birth month',\r\n    'BIRTH_YEAR': 'Birth year',\r\n    'FIRST_NAME': 'First name',\r\n    'GENDER': 'Gender',\r\n    'MALE': 'Male',\r\n    'FEMALE': 'Female',\r\n\r\n    'PROFILE_TITLE': 'My Profile',\r\n    'ABOUT': 'About',\r\n    'FRIENDS_USING': 'My Friends',\r\n    'MY_INTERESTS': 'My Interests',\r\n\r\n    'EDIT_PROFILE_TITLE': 'Edit Profile',\r\n    'ABOUT_YOU': \"Tell us your story, your vision. Be open and let people know what you're looking for.\",\r\n\r\n\r\n    'AWAY': 'away', // for \"5km away\"\r\n\r\n    'SELECT_PHOTO_SOURCE': 'Select photo source',\r\n    'TAKE_PHOTO': 'Take photo',\r\n    'GALLERY': 'Gallery',\r\n    'PHOTO_ERROR': 'An error occurred getting the photo',\r\n    'ALBUMS': 'Albums',\r\n    'NO_FB_ALBUMS': 'You don\\'t have any Facebook albums',\r\n    'ADD_A_PHOTO': 'Add a photo',\r\n    'CROP_YOUR_PHOTO': 'Crop your photo',\r\n\r\n    // Settings\r\n    'DISCOVERY_TITLE': 'Discovery Preferences',\r\n    'DISCOVERABLE': 'Discoverable',\r\n    'SHOW_ME': 'Show me',\r\n    'GUYS': 'Guys',\r\n    'GIRLS': 'Girls',\r\n    'SEARCH_DISTANCE': 'Search distance',\r\n    'AGED_BETWEEN': 'Aged between',\r\n    'SETTINGS_TITLE': 'App Settings',\r\n    'NOTIFICATION_SOUND': 'Notification Sound',\r\n    'NEW_MATCH': 'New match',\r\n    'NEW_MESSAGE': 'New message',\r\n    'SHOW_DISTANCES_IN': 'Show distances in',\r\n    'NOT_DISCOVERABLE': 'You\\'re not discoverable',\r\n    'ENABLE_DISCOVERY_TO_MEET': 'Enable discovery to meet new people nearby',\r\n    'ENABLE_DISCOVERY': 'Enable Discovery',\r\n    'FINDING_PEOPLE': 'Finding people near you',\r\n    'NO_ONE_NEW': 'There\\'s no one new around you',\r\n    'SEARCH_AGAIN': 'Search',\r\n    'LIKE': 'Like',\r\n    'NOT_LIKE': 'Nope',\r\n\r\n    'LOCATION': 'Location',\r\n    'SET_LOCATION': 'Set Location',\r\n    'USE_GPS_LOCATION': 'Use GPS location',\r\n    'GPS_ERROR': 'Unable to get GPS location',\r\n    'SET_MAP_LOCATION': 'Please set your location on the map and press save',\r\n\r\n    'NO_MATCHES': 'You don\\'t have any matches yet.',\r\n    'START_SWIPING': 'Start swiping',\r\n    'MATCHES_LOAD_ERROR': 'Unable to load matches',\r\n    // New Match\r\n    'ITS_A_MATCH': 'It\\'s A Match',\r\n    'LIKED_EACH_OTHER': 'You and {{name}} have liked each other',\r\n    'SEND_MESSAGE': 'Send Message',\r\n    'KEEP_SEARCHING': 'Keep Searching',\r\n\r\n    'MATCHED_ON': 'You matched on',\r\n    'REMOVE_MATCH': 'Remove match',\r\n    'MATCH_OPTIONS': 'Match options',\r\n    'REMOVE_MATCH_ERROR': 'Error removing match. Try again later',\r\n    'UNMATCHED': 'You were unmatched',\r\n    'MATCH_REPORTED': 'Match reported',\r\n    'WANT_TO_REMOVE_MATCH': 'Do you want to remove this match?',\r\n    'INAPPROPRIATE_CONTENT': 'Report user for inappropriate content',\r\n\r\n    'COPY_TEXT': 'Copy text',\r\n    'SAVE_IMAGE': 'Save image',\r\n    'DELETE_MESSAGE': 'Delete message',\r\n    'FAILED_TO_SEND': 'Failed to send',\r\n    'TYPE_YOUR_MESSAGE': 'Type your message',\r\n    'MESSAGE_NOT_SENT': 'Message not sent. Try again',\r\n    'INCOMING_CALL_FROM': 'Incoming call from',\r\n    'HANG_UP': 'Hang Up',\r\n    'WAITING_FOR_REPLY': 'Waiting for reply',\r\n    'VIDEO_SERVICE_ERROR': 'An error occurred with the video service',\r\n    'VIDEO_START_ERROR': 'Unable to start the video call',\r\n\r\n    'NO_LIKES': 'Check back soon, no likes yet',\r\n\r\n    'SETTINGS_SAVE_ERROR': 'Error saving settings. Try again later',\r\n    'REQUEST_FAILED': 'Request failed',\r\n\r\n    'GIVE_US_FEEDBACK': 'Just a Baby is built for you. We want your suggestions and your feedback so that we can make it better! Tell us what you like, what you hate, and how we could improve the experience. If you include your email address we\\'ll endeavour to reply. Thanks in advance.',\r\n    // 'THANKS_FEEDBACK' : 'Thanks in advance! The Just-a-Baby Team',\r\n\r\n    'DELETE_ACCOUNT': 'Delete your account',\r\n\r\n    '': ''\r\n}","var TRANSLATION_DE = {\r\n\r\n\r\n    'OK': 'Ok',\r\n    'SAVE': 'Sparen',\r\n    'SEND': 'Senden',\r\n    'CANCEL': 'Absagen',\r\n    'LOGOUT': 'Abmelden',\r\n    'LANGUAGE': 'Sprache',\r\n    'REGISTER': 'Sich einschreiben',\r\n\r\n\r\n    'LOGGING_IN_TO_FB': 'Anmelden bei Facebook',\r\n    'LOADING_PROFILE': 'Laden profil',\r\n\r\n\r\n    'SETTINGS_TITLE': 'Einstellungen',\r\n    'NOTIFICATION_SOUND': 'Benachrichtigung klingen',\r\n    'NEW_MATCH': 'Neues spiel',\r\n    'NEW_MESSAGE': 'Neues nachricht',\r\n    'SHOW_DISTANCES_IN': 'Zeigt Entfernungen in',\r\n    'DELETE_ACCOUNT': 'Mitgliedskonto löschen',\r\n}\r\n","angular.module('ionicApp').config(function($stateProvider) {\n    $stateProvider\n        .state('menu.adminMenu', {\n            url: \"/admin\",\n            views: {\n                'menuContent': {\n                    templateUrl: \"admin/adminMenu.html\"\n                }\n            }\n        })\n        .state('menu.reportedUsers', {\n            url: \"/reportedUsers\",\n            views: {\n                'menuContent': {\n                    templateUrl: \"admin/reportedUsers.html\",\n                    controller: \"ReportedUsers\"\n                }\n            }\n        })\n        .state('menu.bannedUsers', {\n            url: \"/bannedUsers\",\n            views: {\n                'menuContent': {\n                    templateUrl: \"admin/bannedUsers.html\",\n                    controller: \"BannedUsers\"\n                }\n            }\n        })\n        .state('menu.applyBadges', {\n            url: \"/applyBadges\",\n            views: {\n                'menuContent': {\n                    templateUrl: \"admin/applyBadges.html\",\n                    controller: \"ApplyBadges\"\n                }\n            }\n        })\n        .state('menu.adminEmailSearch', {\n            url: \"/adminEmailSearch\",\n            views: {\n                'menuContent': {\n                    templateUrl: \"admin/adminEmailSearch.html\"\n                }\n            }\n        })\n        .state('menu.adminNameSearch', {\n            url: \"/adminNameSearch\",\n            views: {\n                'menuContent': {\n                    templateUrl: \"admin/adminNameSearch.html\"\n                }\n            }\n        })\n        .state('menu.userAdmin', {\n            url: \"/userAdmin/:userId\",\n            views: {\n                'menuContent': {\n                    templateUrl: \"admin/userAdmin.html\"\n                }\n            }\n        })\n        .state('menu.adminPhotoReview', {\n            url: \"/adminPhotoReview/\",\n            views: {\n                'menuContent': {\n                    templateUrl: \"admin/photo-review.html\"\n                }\n            }\n        })\n        .state('menu.adminClinics', {\n            url: \"/adminClinics/\",\n            views: {\n                'menuContent': {\n                    templateUrl: \"admin/clinics-question.html\"\n                }\n            }\n        })\n        .state('menu.adminAbout', {\n            url: \"/adminAbout/\",\n            views: {\n                'menuContent': {\n                    templateUrl: \"admin/about-jab.html\"\n                }\n            }\n        })\n        .state('menu.adminWhereUHeardUs', {\n            url: \"/adminWhereUHeardUs/\",\n            views: {\n                'menuContent': {\n                    templateUrl: \"admin/where-u-heard.html\"\n                }\n            }\n        })\n        .state('menu.adminVoteReport', {\n            url: \"/adminVoteReport/\",\n            views: {\n                'menuContent': {\n                    templateUrl: \"admin/vote-report.html\"\n                }\n            }\n        })\n        .state('menu.adminGraph', {\n            url: \"/adminGraph/\",\n            views: {\n                'menuContent': {\n                    templateUrl: \"admin/graph.html\"\n                }\n            }\n        })\n})","/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\nvar dateFormat = function () {\n\tvar\ttoken = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZ]|\"[^\"]*\"|'[^']*'/g,\n\t\ttimezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\n\t\ttimezoneClip = /[^-+\\dA-Z]/g,\n\t\tpad = function (val, len) {\n\t\t\tval = String(val);\n\t\t\tlen = len || 2;\n\t\t\twhile (val.length < len) val = \"0\" + val;\n\t\t\treturn val;\n\t\t};\n\n\t// Regexes and supporting functions are cached through closure\n\treturn function (date, mask, utc) {\n\t\tvar dF = dateFormat;\n\n\t\t// You can't provide utc if you skip other args (use the \"UTC:\" mask prefix)\n\t\tif (arguments.length == 1 && Object.prototype.toString.call(date) == \"[object String]\" && !/\\d/.test(date)) {\n\t\t\tmask = date;\n\t\t\tdate = undefined;\n\t\t}\n\n\t\t// Passing date through Date applies Date.parse, if necessary\n\t\tdate = date ? new Date(date) : new Date;\n\t\tif (isNaN(date)) throw SyntaxError(\"invalid date\");\n\n\t\tmask = String(dF.masks[mask] || mask || dF.masks[\"default\"]);\n\n\t\t// Allow setting the utc argument via the mask\n\t\tif (mask.slice(0, 4) == \"UTC:\") {\n\t\t\tmask = mask.slice(4);\n\t\t\tutc = true;\n\t\t}\n\n\t\tvar\t_ = utc ? \"getUTC\" : \"get\",\n\t\t\td = date[_ + \"Date\"](),\n\t\t\tD = date[_ + \"Day\"](),\n\t\t\tm = date[_ + \"Month\"](),\n\t\t\ty = date[_ + \"FullYear\"](),\n\t\t\tH = date[_ + \"Hours\"](),\n\t\t\tM = date[_ + \"Minutes\"](),\n\t\t\ts = date[_ + \"Seconds\"](),\n\t\t\tL = date[_ + \"Milliseconds\"](),\n\t\t\to = utc ? 0 : date.getTimezoneOffset(),\n\t\t\tflags = {\n\t\t\t\td:    d,\n\t\t\t\tdd:   pad(d),\n\t\t\t\tddd:  dF.i18n.dayNames[D],\n\t\t\t\tdddd: dF.i18n.dayNames[D + 7],\n\t\t\t\tm:    m + 1,\n\t\t\t\tmm:   pad(m + 1),\n\t\t\t\tmmm:  dF.i18n.monthNames[m],\n\t\t\t\tmmmm: dF.i18n.monthNames[m + 12],\n\t\t\t\tyy:   String(y).slice(2),\n\t\t\t\tyyyy: y,\n\t\t\t\th:    H % 12 || 12,\n\t\t\t\thh:   pad(H % 12 || 12),\n\t\t\t\tH:    H,\n\t\t\t\tHH:   pad(H),\n\t\t\t\tM:    M,\n\t\t\t\tMM:   pad(M),\n\t\t\t\ts:    s,\n\t\t\t\tss:   pad(s),\n\t\t\t\tl:    pad(L, 3),\n\t\t\t\tL:    pad(L > 99 ? Math.round(L / 10) : L),\n\t\t\t\tt:    H < 12 ? \"a\"  : \"p\",\n\t\t\t\ttt:   H < 12 ? \"am\" : \"pm\",\n\t\t\t\tT:    H < 12 ? \"A\"  : \"P\",\n\t\t\t\tTT:   H < 12 ? \"AM\" : \"PM\",\n\t\t\t\tZ:    utc ? \"UTC\" : (String(date).match(timezone) || [\"\"]).pop().replace(timezoneClip, \"\"),\n\t\t\t\to:    (o > 0 ? \"-\" : \"+\") + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n\t\t\t\tS:    [\"th\", \"st\", \"nd\", \"rd\"][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10]\n\t\t\t};\n\n\t\treturn mask.replace(token, function ($0) {\n\t\t\treturn $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);\n\t\t});\n\t};\n}();\n\n// Some common format strings\ndateFormat.masks = {\n\t\"default\":      \"ddd mmm dd yyyy HH:MM:ss\",\n\tshortDate:      \"m/d/yy\",\n\tmediumDate:     \"mmm d, yyyy\",\n\tlongDate:       \"mmmm d, yyyy\",\n\tfullDate:       \"dddd, mmmm d, yyyy\",\n\tshortTime:      \"h:MM TT\",\n\tmediumTime:     \"h:MM:ss TT\",\n\tlongTime:       \"h:MM:ss TT Z\",\n\tisoDate:        \"yyyy-mm-dd\",\n\tisoTime:        \"HH:MM:ss\",\n\tisoDateTime:    \"yyyy-mm-dd'T'HH:MM:ss\",\n\tisoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\"\n};\n\n// Internationalization strings\ndateFormat.i18n = {\n\tdayNames: [\n\t\t\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\",\n\t\t\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"\n\t],\n\tmonthNames: [\n\t\t\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\",\n\t\t\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n\t]\n};\n\n// For convenience...\nDate.prototype.format = function (mask, utc) {\n\treturn dateFormat(this, mask, utc);\n};\n\n","(function() {\r\n\r\n    // SQL to model mapping\r\n    // match\r\n    // \t\tid (Match.id)\r\n    //\t\tlast_update (ChatMessage[last].createdAt)\r\n    //\t\tlast_message (ChatMessage[last].text\r\n    //\t\tname (Profile.name)\r\n    //\t\tprofile_id (Profile.id)\r\n    //\t\tphoto (Profile.photo1.url)\r\n    //\t\tread (managed locally)\r\n    //\r\n    // chat_message\r\n    //\t\tid (ChatMessage.id)\r\n    //\t\tchat_id (Match.id)\r\n    //\t\tdate (ChatMessage.createdAt)\r\n    //\t\tsender (ChatMessage.sender)\r\n    //\t\tmessage (ChatMessage.text)\r\n    //\t\timage (ChatMessage.image)\r\n\r\n    // See http://www.w3.org/TR/webdatabase/ for the database API\r\n    // And https://github.com/litehelpers/Cordova-sqlite-storage for implementation notes\r\n\r\n    angular.module('service.localdb', [])\r\n        .factory('LocalDB', function($q, $log, appName, env) {\r\n\r\n            var db\r\n\r\n            var service = {\r\n                // fields\r\n                userId: '',\r\n                // methods\r\n                init: init,\r\n                getMatches: getMatches,\r\n                saveMatch: saveMatch,\r\n                deleteMatch: deleteMatch,\r\n                getChatMessages: getChatMessages,\r\n                saveChatMessage: saveChatMessage,\r\n                setChatRead: setChatRead,\r\n                getUnreadChats: getUnreadChats,\r\n                getProfiles: getProfiles,\r\n                saveProfile: saveProfile,\r\n                deleteDb: deleteDb\r\n            }\r\n\r\n            return service\r\n\r\n\r\n            /**\r\n             * At least in Chrome, console.log on a SQLError/SQLException object outputs [Object object] and console.log on\r\n             * JSON.stringify(error) outputs {}. So extract the fields to a plain new object for nice logging\r\n             */\r\n            function convertError(e) {\r\n                return JSON.stringify({ code: e.code, message: e.message })\r\n            }\r\n\r\n\r\n            function _mapMatchResultSet(sqlResultSet) {\r\n                var len = sqlResultSet.rows.length\r\n                var result = []\r\n                    // id varchar primary key, other_user_id varchar, object match, updated_at integer, read integer\r\n                for (let i = 0; i < len; i++) {\r\n                    let row = sqlResultSet.rows.item(i)\r\n                    var jsonObj = JSON.parse(row.match)\r\n                    jsonObj.className = 'Match'\r\n                        // updated_at can be updated directly by sql when there's a new message, so use this value\r\n                    jsonObj.updatedAt = { __type: 'Date', iso: new Date(row.updated_at).toISOString() }\r\n                    let match = Parse.Object.fromJSON(jsonObj)\r\n                    match.lastMessage = row.last_message\r\n                    match.read = row.read === 1 ? true : false\r\n                    result.push(match)\r\n                }\r\n                return result\r\n            }\r\n\r\n            function _mapChatMessageResultSet(sqlResultSet) {\r\n                var len = sqlResultSet.rows.length\r\n                var result = []\r\n                    // (id varchar primary key, chat_id varchar, created_at integer, message text)\r\n                for (let i = 0; i < len; i++) {\r\n                    let row = sqlResultSet.rows.item(i)\r\n                    var json = JSON.parse(row.chat_message)\r\n                    json.className = 'ChatMessage'\r\n                    let chatMessage = Parse.Object.fromJSON(json)\r\n                    result.push(chatMessage)\r\n                }\r\n                return result\r\n            }\r\n\r\n            function _mapProfileResultSet(sqlResultSet) {\r\n                var len = sqlResultSet.rows.length\r\n                var result = []\r\n                    // (id varchar primary key, chat_id varchar, created_at integer, message text)\r\n                for (let i = 0; i < len; i++) {\r\n                    let row = sqlResultSet.rows.item(i)\r\n                    var json = JSON.parse(row.profile)\r\n                    json.className = 'Profile'\r\n                    var profile = Parse.Object.fromJSON(json)\r\n                    result.push(profile)\r\n                }\r\n                return result\r\n            }\r\n\r\n\r\n            // Service functions ----------------------\r\n\r\n            function init() {\r\n                var databaseName = appName + '-' + env\r\n                    // Use the native sqlite plugin if it exists\r\n                if (window.sqlitePlugin) {\r\n                    db = window.sqlitePlugin.openDatabase({ name: databaseName + '.db', iosDatabaseLocation: 'default' },\r\n                        () => $log.info('Opened sqlite database ' + databaseName),\r\n                        error => $log.error('Error opening sqlite database ' + JSON.stringify(error)))\r\n                } else {\r\n                    $log.debug('Opening HTML5 database')\r\n                    db = window.openDatabase(databaseName, '', 'LocalDB', 2 * 1024 * 1024)\r\n                }\r\n\r\n                const M = new Migrator(db)\r\n\r\n                // Set your migrations in the order that they need to occur\r\n                M.migration(1, tx => {\r\n                    // the pattern in the table columns is the id primary key, then the object JSON in a text, then the columns the table might be queried by\r\n                    tx.executeSql('CREATE TABLE profile (id varchar primary key, profile text, user_id varchar)')\r\n                    tx.executeSql('CREATE TABLE match (id varchar primary key, match text, other_user_id varchar, other_profile_id varchar, updated_at integer, last_message varchar, read integer)')\r\n                    tx.executeSql('CREATE TABLE chat_message (id varchar primary key, chat_message text, chat_id varchar, created_at integer)')\r\n                    tx.executeSql('CREATE INDEX chat_message_chat_id ON chat_message (chat_id)')\r\n                })\r\n\r\n                // Execute will do all the migrations required for the particular user (e.g., if they're at v1 take them to v2 and then v3)\r\n                return M.execute().then(function() {\r\n                    //now go about executing your SQL or whatever to load the page or site\r\n                    return $q.when()\r\n                })\r\n            }\r\n\r\n            /**\r\n             * Deletes data from the database tables\r\n             * @returns {Promise} when the tables have been truncated\r\n             */\r\n            function deleteDb() {\r\n                $log.log('Deleting database data')\r\n                var deferred = $q.defer()\r\n                db.transaction(function(tx) {\r\n                    tx.executeSql('DELETE FROM match')\r\n                    tx.executeSql('DELETE FROM profile')\r\n                    tx.executeSql('DELETE FROM chat_message')\r\n                }, function(e) {\r\n                    $log.error('Error delete database data: ' + e.message)\r\n                    deferred.reject(convertError(e))\r\n                }, function() {\r\n                    $log.log('Database data deleted')\r\n                    deferred.resolve()\r\n                })\r\n                return deferred.promise\r\n            }\r\n\r\n\r\n            function getMatches() {\r\n                var deferred = $q.defer()\r\n                db.readTransaction(function(tx) {\r\n                    tx.executeSql('SELECT * FROM match ORDER BY updated_at DESC', [], function(tx, sqlResultSet) {\r\n                        deferred.resolve(_mapMatchResultSet(sqlResultSet))\r\n                    })\r\n                }, function(e) {\r\n                    deferred.reject(convertError(e))\r\n                })\r\n                return deferred.promise\r\n            }\r\n\r\n\r\n            function getProfiles() {\r\n                var deferred = $q.defer()\r\n                db.readTransaction(function(tx) {\r\n                    tx.executeSql('SELECT * FROM profile', [], function(tx, sqlResultSet) {\r\n                        deferred.resolve(_mapProfileResultSet(sqlResultSet))\r\n                    })\r\n                }, function(e) {\r\n                    deferred.reject(convertError(e))\r\n                })\r\n                return deferred.promise\r\n            }\r\n\r\n            //function getProfile(profileId) {\r\n            //\tvar deferred = $q.defer()\r\n            //\tdb.readTransaction(function(tx) {\r\n            //\t\t\ttx.executeSql('SELECT * FROM profile where id=?', [profileId], function(tx, sqlResultSet) {\r\n            //\t\t\t\tdeferred.resolve(_mapProfileResultSet(sqlResultSet))\r\n            //\t\t\t})\r\n            //\t\t}, function(e) {\r\n            //\t\t\tdeferred.reject(convertError(e))\r\n            //\t\t}\r\n            //\t)\r\n            //\treturn deferred.promise\r\n            //}\r\n\r\n\r\n            function saveMatch(match, profile) {\r\n                var deferred = $q.defer()\r\n                    // Store the profile id as otherProfile on the match so the profile property works when we deserialise\r\n                    // Make a copy so we can remove the profile data which is saved in a different table\r\n                match.profile = profile\r\n                var matchJson = match.toJSON()\r\n                matchJson.otherProfileId = profile.id\r\n                delete matchJson.otherProfile // no need to waste space storing this here as we save it in the profile table. this does break the method Match.profile (cant get id of undefined if you try and call it)\r\n\r\n                db.transaction(function(tx) {\r\n                    // (id varchar primary key, match text, other_user_id varchar, other_profile_id varchar, updated_at integer, read integer)'\r\n                    tx.executeSql('INSERT OR REPLACE INTO match (id, match, other_user_id, other_profile_id, updated_at, read) ' +\r\n                        'VALUES (?,?,?,?,?,?)', [match.id, JSON.stringify(matchJson), profile.uid, profile.id, match.updatedAt.getTime(), 0])\r\n\r\n                    // (id varchar primary key, profile text, user_id varchar)\r\n                    tx.executeSql('INSERT OR REPLACE INTO profile (id, profile, user_id) ' +\r\n                        'VALUES (?,?,?)', [profile.id, JSON.stringify(profile.toJSON()), profile.uid])\r\n\r\n                }, function(e) {\r\n                    deferred.reject(convertError(e))\r\n                    $log.error('Error saving match: ' + e.message)\r\n                }, function() {\r\n                    deferred.resolve()\r\n                })\r\n                return deferred.promise\r\n            }\r\n\r\n\r\n            function saveProfile(profile) {\r\n                var deferred = $q.defer()\r\n\r\n                db.transaction(function(tx) {\r\n                    // console.log(`Saving profile ${profile.distance}` )\r\n                    // (id varchar primary key, profile text, user_id varchar)\r\n                    tx.executeSql('INSERT OR REPLACE INTO profile (id, profile, user_id) ' +\r\n                        'VALUES (?,?,?)', [profile.id, JSON.stringify(profile), profile.uid])\r\n                }, function(e) {\r\n                    deferred.reject(convertError(e))\r\n                    $log.error('Error saving profile: ' + e.message)\r\n                }, function() {\r\n                    deferred.resolve()\r\n                })\r\n                return deferred.promise\r\n            }\r\n\r\n\r\n            function deleteMatch(matchId) {\r\n                var deferred = $q.defer()\r\n                db.transaction(function(tx) {\r\n                    tx.executeSql('DELETE FROM match WHERE id=?', [matchId])\r\n                    tx.executeSql('DELETE FROM chat_message WHERE chat_id=?', [matchId])\r\n                }, function(e) {\r\n                    deferred.reject(convertError(e))\r\n                    $log.error('LocalDB Error deleting match: ' + e.message)\r\n                }, function() {\r\n                    deferred.resolve()\r\n                })\r\n                return deferred.promise\r\n            }\r\n\r\n\r\n            function getChatMessages(chatId) {\r\n                var deferred = $q.defer()\r\n                db.readTransaction(function(tx) {\r\n                    tx.executeSql('SELECT * FROM chat_message WHERE chat_id = ? ORDER BY created_at ASC', [chatId], function(tx, sqlResultSet) {\r\n                        deferred.resolve(_mapChatMessageResultSet(sqlResultSet))\r\n                    })\r\n                }, function(e) {\r\n                    deferred.reject(convertError(e))\r\n                })\r\n                return deferred.promise\r\n            }\r\n\r\n            /**\r\n             * Save a chat message (if it doesn't already exist)\r\n             * @param msg the chat message\r\n             * @returns {Promise<boolean>} A promise which resolves to if this was inserted or false if already in the database\r\n             */\r\n            function saveChatMessage(msg) {\r\n                var deferred = $q.defer()\r\n                var isNew = false\r\n                var msgJson = msg.toJSON()\r\n\r\n                db.transaction(function(tx) {\r\n                    // (id varchar primary key, chat_message text, chat_id varchar, created_at integer)\r\n                    tx.executeSql('INSERT OR IGNORE INTO chat_message ' +\r\n                        '(id, chat_message, chat_id, created_at) ' +\r\n                        'VALUES (?,?,?,?)', [msg.id, JSON.stringify(msgJson), msg.match.id, msg.createdAt.getTime()],\r\n                        function(tx, sqlResultSet) {\r\n                            isNew = sqlResultSet.rowsAffected > 0\r\n                        })\r\n\r\n                    // If the message is newer then update the match updated_at\r\n                    tx.executeSql('UPDATE match SET updated_at = ?, last_message = ? WHERE id = ? and ? > updated_at', [msg.createdAt.getTime(), msg.lastMessage, msg.match.id, msg.createdAt.getTime()])\r\n\r\n                    if (service.userId !== msg.sender && isNew) {\r\n                        // update the read flag to unread if the message doesn't exist in the local db\r\n                        tx.executeSql('UPDATE match SET read = 0 WHERE EXISTS (SELECT 1 FROM chat_message WHERE id = ?)', [msg.id])\r\n                    } else if (service.userId !== msg.sender && !isNew) {\r\n                        // update the read flag to unread if the message doesn't exist in the local db\r\n                        tx.executeSql('UPDATE match SET read = 0 WHERE NOT EXISTS (SELECT 1 FROM chat_message WHERE id = ?)', [msg.id])\r\n                    }\r\n\r\n                }, function(e) {\r\n                    deferred.reject(convertError(e))\r\n                    $log.error('Error saving chat message: ' + e.message)\r\n                }, function() {\r\n                    $log.debug('saved chat message new:' + isNew)\r\n                    deferred.resolve(isNew)\r\n                })\r\n                return deferred.promise\r\n            }\r\n\r\n            /**\r\n             * Marks a match/chat as read\r\n             * @param chatId\r\n             * @param {boolean} read the read flag\r\n             * @returns {Promise} A promise which resolves when the database transaction has completed\r\n             */\r\n            function setChatRead(chatId, read) {\r\n                if (!_.isBoolean(read)) {\r\n                    throw 'read must be a boolean. Was ' + read\r\n                }\r\n\r\n                // sqlite does not have a boolean value, use 0/1\r\n                var readValue = read ? 1 : 0\r\n\r\n                var deferred = $q.defer()\r\n                db.transaction(function(tx) {\r\n                    tx.executeSql('UPDATE match SET read = ? WHERE id = ?', [readValue, chatId])\r\n                }, function(e) {\r\n                    deferred.reject(convertError(e))\r\n                    $log.error('Error updating read flag: ' + e.message)\r\n                }, function() {\r\n                    deferred.resolve()\r\n                })\r\n                return deferred.promise\r\n            }\r\n\r\n            /**\r\n             * @returns {object} an object with the keys as the match id's which are unread\r\n             */\r\n            function getUnreadChats() {\r\n                var deferred = $q.defer()\r\n                db.readTransaction(function(tx) {\r\n                    tx.executeSql('SELECT * FROM match WHERE read = 0', [], function(tx, sqlResultSet) {\r\n                        var len = sqlResultSet.rows.length\r\n                        var unreadChats = {}\r\n                        for (let i = 0; i < len; i++) {\r\n                            let row = sqlResultSet.rows.item(i)\r\n                            unreadChats[row.id] = true\r\n                        }\r\n                        deferred.resolve(unreadChats)\r\n                    })\r\n                }, function(e) {\r\n                    deferred.reject(convertError(e))\r\n                })\r\n                return deferred.promise\r\n            }\r\n\r\n\r\n            function Migrator(db) {\r\n                // Pending migrations to run\r\n                var migrations = []\r\n\r\n                var state = 0\r\n\r\n                var MIGRATOR_TABLE = 'version'\r\n\r\n                // Use this method to actually add a migration.\r\n                // You'll probably want to start with 1 for the migration number.\r\n                this.migration = function(number, func) {\r\n                    migrations[number] = func\r\n                }\r\n\r\n                // Execute a given migration by index\r\n                function doMigration(number) {\r\n                    const deferred = $q.defer()\r\n                    if (migrations[number]) {\r\n                        db.transaction(t => {\r\n                            t.executeSql('update ' + MIGRATOR_TABLE + ' set version = ?', [number],\r\n                                t => {\r\n                                    $log.info('Beginning migration ' + number)\r\n                                    migrations[number](t)\r\n                                    $log.info('Completed migration ' + number)\r\n                                    doMigration(number + 1)\r\n                                        .then(() => deferred.resolve())\r\n                                }, (t, err) => {\r\n                                    $log.error('Error!: %o (while upgrading to %s from %s)', err.message, number)\r\n                                    deferred.reject(convertError(e))\r\n                                })\r\n                        })\r\n                    } else {\r\n                        $log.debug('Migrations complete.')\r\n                        state = 2\r\n                        deferred.resolve()\r\n                    }\r\n\r\n                    return deferred.promise\r\n                }\r\n\r\n                // helper that actually calls doMigration from doIt.\r\n                function migrateStartingWith(ver) {\r\n                    state = 1\r\n                    $log.debug('Main Migrator starting')\r\n                        //return doMigration(ver + 1)\r\n                    const deferred = $q.defer()\r\n\r\n                    try {\r\n                        return doMigration(ver + 1).then(() => deferred.resolve())\r\n                    } catch (e) {\r\n                        deferred.reject(e)\r\n                    }\r\n\r\n                    return deferred.promise\r\n                }\r\n\r\n\r\n                function ensureMigrationTable() {\r\n                    const deferred = $q.defer()\r\n                    $log.log('Ensuring migration table exists')\r\n                    db.transaction(t => {\r\n                        t.executeSql('create table if not exists ' + MIGRATOR_TABLE + ' (version integer)', [],\r\n                            (tx, sqlResultSet) => deferred.resolve(),\r\n                            (t, err) => deferred.reject('Error creating version table' + convertError(e))\r\n                        )\r\n                    })\r\n                    return deferred.promise\r\n                }\r\n\r\n                function getCurrentVersion() {\r\n                    const deferred = $q.defer()\r\n                    $log.log('Checking for existing migration version')\r\n                    db.transaction(t => {\r\n                        t.executeSql('SELECT VERSION FROM ' + MIGRATOR_TABLE, [],\r\n                            (tx, sqlResultSet) => {\r\n\r\n                                if (sqlResultSet.rows.length > 0)\r\n                                    return deferred.resolve(sqlResultSet.rows.item(0).version)\r\n\r\n                                $log.log('Inserting default migration version')\r\n                                t.executeSql('INSERT INTO ' + MIGRATOR_TABLE + ' values(0)', [],\r\n                                    (tx, sqlResultSet) => {\r\n                                        deferred.resolve(0)\r\n                                    },\r\n                                    (t, error) => deferred.reject('Error ensuring default version ' + convertError(error))\r\n                                )\r\n                            },\r\n                            (t, error) => deferred.reject('Error selecting version ' + convertError(error))\r\n                        )\r\n                    })\r\n                    return deferred.promise\r\n                }\r\n\r\n\r\n                this.execute = function() {\r\n                    if (state > 0)\r\n                        throw 'Migrator is only valid once -- create a new one if you want to do another migration.'\r\n\r\n                    return ensureMigrationTable()\r\n                        .then(() => getCurrentVersion())\r\n                        .then(version => migrateStartingWith(version))\r\n                        .catch(error => $log.error('SQL DB init error:', error))\r\n                }\r\n\r\n            }\r\n\r\n        })\r\n\r\n})(); // end IIFE","angular.module('ionicApp').config(function($stateProvider, $urlRouterProvider) {\r\n\r\n    $stateProvider\r\n        .state('signin', {\r\n            url: '/sign-in',\r\n            templateUrl: 'sign-in.html',\r\n            controller: 'SignInCtrl'\r\n        })\r\n        .state('emailVerification', {\r\n            url: '/emailVerification',\r\n            templateUrl: 'emailVerification.html',\r\n            controller: 'EmailVerificationCtrl'\r\n        })\r\n        .state('profileSetup', {\r\n            url: '/profileSetup',\r\n            templateUrl: 'profileSetup.html',\r\n            controller: 'ProfileSetupCtrl'\r\n        })\r\n        .state('walkthru', {\r\n            url: '/walkthru',\r\n            templateUrl: 'introWalkthrough.html',\r\n            controller: 'WalkThruCtrl'\r\n        })\r\n        .state('findUs', {\r\n            url: '/findUs',\r\n            templateUrl: \"findUs.html\",\r\n            controller: \"FindUsCtrl\",\r\n            params: {\r\n                username: null\r\n            }\r\n        })\r\n        .state('locationSetup', {\r\n            url: '/locationSetup',\r\n            templateUrl: 'locationSetup.html',\r\n            controller: 'LocationSetupCtrl'\r\n        })\r\n        .state('termsOfUse', {\r\n            url: '/termsOfUse',\r\n            templateUrl: 'termsOfUse.html',\r\n            controller: 'TermsOfUseCtrl'\r\n        })\r\n        .state('banned', {\r\n            templateUrl: 'banned.html'\r\n        })\r\n        .state('menu', {\r\n            url: \"/menu\",\r\n            abstract: true,\r\n            templateUrl: \"menu.html\"\r\n        })\r\n        .state('menu.home', {\r\n            url: \"/home\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"profile-search.html\",\r\n                    controller: \"ProfileSearch\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.sharevidhome', {\r\n            url: \"/sharevidhome\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"sharevidhome.html\",\r\n                    controller: \"ShareVidHomeCtrl\"\r\n                }\r\n            }\r\n        })\r\n         .state('menu.sharevidupload', {\r\n            url: \"/sharevidupload\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"sharevidupload.html\",\r\n                    controller: \"ShareVidUploadCtrl\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.search-profile-view', {\r\n            url: \"/search-profile-view\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"search/search-profile-view.html\"\r\n                }\r\n            },\r\n            params: {\r\n                profile: null\r\n            }\r\n        })\r\n        .state('menu.match-profile', {\r\n            url: \"/match-profile/:matchId/:profileId\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"matchProfile.html\",\r\n                    controller: \"MatchProfileCtrl\"\r\n                }\r\n            },\r\n            resolve: {\r\n                matchProfile: function(AppService, $stateParams) {\r\n                    if ($stateParams.matchId)\r\n                        return AppService.getProfileByMatchId($stateParams.matchId)\r\n                    else if ($stateParams.profileId)\r\n                        return AppService.getProfileById($stateParams.profileId)\r\n                }\r\n            }\r\n        })\r\n        .state('menu.chats', {\r\n            url: \"/chats\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"chats.html\",\r\n                    controller: \"ChatsCtrl\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.chat', {\r\n            url: \"/chat/:matchId\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"chat.html\",\r\n                    controller: \"ChatCtrl\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.likedMe', {\r\n            url: \"/likedMe\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"likedMe.html\",\r\n                    controller: \"LikedMe\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.relationship', {\r\n            url: \"/relationship\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"relationship.html\",\r\n                    controller: \"RelationshipCtrl\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.profile', {\r\n            url: \"/profile\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"profile/profile-view-current-user.html\",\r\n                    controller: \"ProfileViewCurrentUser\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.profile-edit', {\r\n            url: \"/profile-edit\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"profile/profile-edit.html\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.fb-albums', {\r\n            url: '/fb-albums',\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"fbAlbums.html\",\r\n                    controller: \"FbAlbumsCtrl\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.fb-album', {\r\n            url: '/fb-album/:albumId',\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"fbAlbum.html\",\r\n                    controller: \"FbAlbumCtrl\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.crop', {\r\n            url: '/crop',\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: 'crop.html',\r\n                    controller: 'PhotoCropCtrl'\r\n                }\r\n            }\r\n        })\r\n        .state('menu.discovery', {\r\n            url: \"/discovery\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"discovery.html\",\r\n                    controller: \"DiscoveryCtrl\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.location', {\r\n            url: \"/location\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"locationMap.html\",\r\n                    controller: \"LocationCtrl\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.clinics', {\r\n            url: \"/clinics\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"clinics.html\",\r\n                    controller: \"ClinicsCtrl\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.about', {\r\n            url: \"/about\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"about.html\",\r\n                    controller: \"AboutCtrl\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.settings', {\r\n            url: \"/settings\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"settings.html\",\r\n                    controller: \"SettingsCtrl\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.contact', {\r\n            url: \"/contact\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"contact.html\",\r\n                    controller: \"ContactCtrl\"\r\n                }\r\n            }\r\n        })\r\n    $urlRouterProvider.otherwise(\"/sign-in\")\r\n});","// monkey patch an IOS8 problem\n// https://github.com/angular/angular.js/issues/9128#issuecomment-120046653\n\napp.config(['$provide', function($provide){\n\t\t'use strict';\n\n\t\tvar isSafari = /Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor);\n\n\t\tif(isSafari) {\n\t\t\t$provide.decorator('$rootScope', ['$delegate', function($rootScope) {\n\t\t\t\tvar scopePrototype = Object.getPrototypeOf($rootScope);\n\t\t\t\tvar originalScopeNew = scopePrototype.$new;\n\t\t\t\tscopePrototype.$new = function () {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn originalScopeNew.apply(this, arguments);\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\treturn $rootScope;\n\t\t\t}]);\n\t\t}\n\t}]);","angular.module('controllers', ['service.app', 'ngAnimate', 'ngCordova', 'ionic.contrib.ui.tinderCards'])\r\n\r\n.controller('SignInCtrl', function($scope, $log, $rootScope, $state, $http, $timeout, $cordovaFacebook, $q, $ionicPopup,\r\n    $ionicModal, $ionicLoading, $ionicHistory, AppService, AppUtil, SocialAuth,\r\n    linkedInId, linkedInSecret) {\r\n\r\n    /**\r\n     * The SignInCtrl handle the flow for registering and authenticating a user. There are currently three entry points:\r\n     * 1. emailRegister() - registers a new user and logs them in\r\n     * 2. emailLogin() - logs in a previously registered user\r\n     * 3. facebookLogin() - logs in with facebook and creates a user if they didn't already exist\r\n     *\r\n     * All three call checkProfile() which starts the post-authentication login sequence that is mediated by\r\n     * AppService.goToNextLoginState()\r\n     */\r\n\r\n    // Data for the username/password form\r\n    $scope.credentials = { email: '', password: '' }\r\n\r\n    // These two properties are for dynamically updating the CSS classes on the logo and login form/button\r\n    $scope.logo = { class: '' }\r\n    $scope.showForm = false\r\n    $scope.showLogo = false\r\n    $scope.showResetPassword = false\r\n\r\n    // After an error resets the CSS styles so the login form/button displays\r\n    function resetStyles() {\r\n        $scope.showForm = true\r\n        $scope.showLogo = false\r\n        $scope.logo.class = ''\r\n        $scope.status = ''\r\n    }\r\n    // Hides the login form/buttons and displays the animated logo\r\n    function setLoggingInStyles() {\r\n        $scope.showForm = false\r\n        $scope.showLogo = true\r\n        $scope.logo.class = 'animated jello infinite'\r\n        $scope.status = '' // the translation key to display on the login screen\r\n    }\r\n\r\n\r\n    $scope.showResetPasswordForm = function() {\r\n        $scope.showForm = false\r\n        $scope.showResetPassword = true\r\n    }\r\n    $scope.hideResetPasswordForm = function() {\r\n        $scope.showForm = true\r\n        $scope.showResetPassword = false\r\n    }\r\n    $scope.resetPassword = function() {\r\n        if (validateEmail()) return\r\n\r\n        AppUtil.blockingCall(\r\n            AppService.requestPasswordReset($scope.credentials.email),\r\n            () => {\r\n                $scope.hideResetPasswordForm()\r\n                AppUtil.toastSimpleTranslate('PASSWORD_RESET_SENT')\r\n            }\r\n        )\r\n    }\r\n\r\n    $scope.emailRegister = function() {\r\n        if (validateEmailPassword()) return\r\n        setLoggingInStyles()\r\n        AppService.signUp($scope.credentials.email, $scope.credentials.password).then(function(result) {\r\n            $log.log('user signed up success')\r\n            checkProfile()\r\n        }, function(error) {\r\n            resetStyles()\r\n            $log.error('user signed up error ' + JSON.stringify(error))\r\n            setTimeout(() => AppUtil.toastSimple(error.message), 10)\r\n        })\r\n    }\r\n\r\n    $scope.emailLogin = function() {\r\n        if (validateEmailPassword()) return\r\n        setLoggingInStyles()\r\n        AppService.logIn($scope.credentials.email, $scope.credentials.password).then(function(result) {\r\n            $log.log('user login success')\r\n            checkProfile()\r\n        }, function(error) {\r\n            resetStyles()\r\n            if (error.code && error.code === 101) { // ParseError.OBJECT_NOT_FOUND = 101;. Message is 'invalid login parameters'\r\n                AppUtil.toastSimpleTranslate('INVALID_EMAIL_PASSWORD')\r\n                $log.warn(JSON.stringify(error))\r\n            } else {\r\n                AppUtil.toastSimpleTranslate('LOGIN_ERROR')\r\n                $log.error(JSON.stringify(error))\r\n            }\r\n        })\r\n    }\r\n\r\n    function validateEmailPassword() {\r\n        return validateEmail() || validatePassword()\r\n    }\r\n\r\n    function validatePassword() {\r\n        if ($scope.credentials.password.length < 6) {\r\n            AppUtil.toastSimpleTranslate('PASSWORD_LENGTH')\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    function validateEmail() {\r\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        if (!re.test($scope.credentials.email)) {\r\n            AppUtil.toastSimpleTranslate('INVALID_EMAIL')\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n\r\n    $scope.linkedInLogin = function() {\r\n        setLoggingInStyles()\r\n        $scope.status = 'LOGGING_IN_TO_LINKEDIN'\r\n        SocialAuth.linkedIn(linkedInId, linkedInSecret, ['r_basicprofile', 'r_emailaddress'], 'rtbwrtusgfxytr')\r\n            .then(httpResponse => AppService.linkedInLogin(httpResponse))\r\n            .then(\r\n                () => checkProfile(null),\r\n                error => {\r\n                    resetStyles()\r\n\r\n                    if (error.code && error.code === 203) { // ParseError.EMAIL_TAKEN = 203\r\n                        AppUtil.toastSimple(error.message)\r\n                        $log.warn(JSON.stringify(error))\r\n                    } else {\r\n                        AppUtil.toastSimple('LinkedIn login failed')\r\n                        $log.error(JSON.stringify(error))\r\n                    }\r\n                    AppService.logout()\r\n                }\r\n            )\r\n    }\r\n\r\n\r\n    $scope.facebookLogin = function() {\r\n        setLoggingInStyles()\r\n        $scope.status = 'LOGGING_IN_TO_FB'\r\n\r\n        connectToFacebook().then(function(result) {\r\n            return AppService.facebookLogin(result)\r\n        }).then(function(result) {\r\n            // Load the user profile\r\n            $scope.status = 'LOADING_PROFILE'\r\n            return AppService.loadProfile()\r\n        }).then(function(profile) {\r\n            // If we've logged in for the first time (i.e. profile.name isn't set) then copy the facebook profile\r\n            if (!profile.name) {\r\n                $log.log('Initialising profile with facebook profile')\r\n                $scope.status = 'LOADING_FB_PROFILE'\r\n                return AppService.copyFacebookProfile()\r\n            } else {\r\n                return profile // already logged in with FB\r\n            }\r\n        }).then(() => checkProfile(), $scope._handleFacebookLoginError)\r\n    }\r\n\r\n    $scope._handleFacebookLoginError = error => {\r\n        resetStyles()\r\n\r\n        if (error.code && error.code === 'MINIMUM_AGE_ERROR') {\r\n            $ionicPopup.alert({\r\n                    title: 'Error',\r\n                    template: 'You do not meet the age requirements for this app.'\r\n                }).then(() => AppService.logout())\r\n                //.then(() => ionic.Platform.exitApp())\r\n            return\r\n        }\r\n\r\n        // {\"code\":251,\"message\":\"The supplied Facebook session token is expired or invalid.\"}\r\n        $log.error('Facebook login error: ' + JSON.stringify(error))\r\n        AppService.logout()\r\n        AppUtil.toastSimpleTranslate('LOGIN_ERROR')\r\n    }\r\n\r\n\r\n    /**\r\n     * @param profile {IProfile} The user profile if it has already been loaded, else null\r\n     */\r\n    function checkProfile(profile) {\r\n        $log.log('checkProfile()')\r\n\r\n        var profilePromise = profile ? $q.when(profile) : AppService.loadProfile()\r\n\r\n        AppService.requestLocationServices()\r\n            .then(function() { return profilePromise })\r\n            .then(function(profile) {\r\n                if (!profile)\r\n                    return $q.reject('Unable to load Profile')\r\n\r\n                if (!profile.gps) // If we're not using the GPS for the users location then skip using the location services \r\n                    return null\r\n\r\n                $scope.status = 'WAITING_FOR_GPS'\r\n                return AppService.getCurrentPosition().then(\r\n                    function(result) { return result },\r\n                    function(error) {\r\n                        // if profile.location != null then could have a toast warning that we were unable to update the location\r\n                        return null\r\n                    }\r\n                )\r\n            }).then(function(location) {\r\n                var profile = AppService.getProfile()\r\n\r\n                // if the user is using a location from the map, or couldn't get the GPS location then skip trying to save the location\r\n                if (profile.gps === false || location === null) {\r\n                    proceed(profile)\r\n                    return\r\n                }\r\n\r\n                $log.log('updating location to ' + JSON.stringify(location))\r\n                AppService.saveProfile({ location: location })\r\n                    .finally(() => proceed(profile))\r\n\r\n            }, function(error) {\r\n                resetStyles()\r\n                AppService.logout()\r\n                $log.error('Error loging in: ' + JSON.stringify(error))\r\n                if (error.code === 209) { // Invalid session token\r\n                    AppUtil.toastSimple('Invalid session. Try again')\r\n                    return\r\n                }\r\n                AppUtil.toastSimpleTranslate('LOGIN_ERROR')\r\n            })\r\n    }\r\n\r\n    /**\r\n     * After a successful login proceed to the next screen\r\n     * @param profile\r\n     */\r\n    function proceed() {\r\n        $scope.status = ''\r\n        $scope.logo.class = 'animated zoomOutDown'\r\n        AppService.getMutualMatches() // load in the background\r\n            // disable the back button\r\n        $ionicHistory.nextViewOptions({\r\n            historyRoot: true,\r\n            disableBack: true\r\n        })\r\n\r\n        // the timeout is to give the drop CSS animation time\r\n        $timeout(() => AppService.goToNextLoginState(), 1000)\r\n    }\r\n\r\n\r\n\r\n    var connectToFacebook = function() {\r\n        var deferred = $q.defer()\r\n        $scope.status = 'LOGGING_IN_TO_FB'\r\n        $cordovaFacebook.getLoginStatus()\r\n            .then(function(statusResult) {\r\n                if (statusResult.status === 'connected') {\r\n                    $log.log('setting $rootScope.facebookConnected')\r\n                    $rootScope.facebookConnected = true\r\n                    $rootScope.fbAccessToken = statusResult.authResponse.accessToken\r\n                    deferred.resolve(statusResult)\r\n                } else {\r\n                    // If the user isn't connected then login\r\n                    $log.log('$cordovaFacebook.login')\r\n                    $cordovaFacebook.login([\"public_profile\", \"email\", \"user_birthday\", \"user_photos\", \"user_friends\", \"user_likes\"])\r\n                        .then(function(loginResult) {\r\n                            if (loginResult.status === 'connected') {\r\n                                $log.log('setting $rootScope.facebookConnected')\r\n                                $rootScope.facebookConnected = true\r\n                                $rootScope.fbAccessToken = loginResult.authResponse.accessToken\r\n                                deferred.resolve(loginResult)\r\n                            } else {\r\n                                deferred.reject(loginResult)\r\n                            }\r\n                        }, function(error) {\r\n                            return deferred.reject(error)\r\n                        })\r\n                }\r\n            }, function(error) {\r\n                deferred.reject(error)\r\n            })\r\n        return deferred.promise\r\n    }\r\n\r\n\r\n    // Waits for the Facebook plugin to be ready, if required\r\n    function ensureFb(callback) {\r\n        // Continue when the Ionic platform has initialised and:\r\n        // - Running in a WebView (i.e. using the native Facebook plugin if configured), or\r\n        // - Facebook authentication is not configured, or\r\n        // - The Facebook JavaScript SDK has loaded\r\n        if (platformReady && (window.cordova || !FACEBOOK_APP_ID || fbJsSdkLoaded)) {\r\n            if (callback) {\r\n                $timeout(callback, 50)\r\n            }\r\n        } else {\r\n            // Otherwise wait for the Facebook JavaScript SDK to load\r\n            console.debug('Waiting for Facebook Javascript SDK to load')\r\n            $timeout(function() { ensureFb(callback) }, 250)\r\n        }\r\n    }\r\n\r\n    var autoLogin = function() {\r\n        // TODO change the Parse.User.current() check to an AppService call\r\n        if (Parse.User.current() != null) {\r\n            $log.log('auto login')\r\n            setLoggingInStyles()\r\n            AppService.autoLogin()\r\n            if (Parse.FacebookUtils.isLinked(Parse.User.current())) {\r\n                $log.log('Checking facebook user')\r\n                connectToFacebook().then(function(result) {\r\n                    // TODO check the facebook id matches the cached Parse user, else force logout\r\n                    checkProfile(null)\r\n                }, function(error) {\r\n                    resetStyles()\r\n                    AppUtil.toastSimple('Facebook login error')\r\n                    $log.error('Facebook login error ' + JSON.stringify(error))\r\n                })\r\n            } else {\r\n                checkProfile(null)\r\n            }\r\n        } else {\r\n            resetStyles()\r\n        }\r\n    }\r\n\r\n    // Check if we need to wait for the Facebook JS plugin to initialise and then check for doing an auto-login\r\n    ensureFb(autoLogin)\r\n\r\n});","angular.module('controllers')\r\n\r\n    .controller('ProfileSearch', function ($log, $scope, $state, $timeout, $translate, $ionicSideMenuDelegate,\r\n        TDCardDelegate, AppService, AppUtil, $ionicModal, $ionicPopup) {\r\n\r\n        var translations\r\n        $translate(['MATCHES_LOAD_ERROR']).then(function (translationsResult) {\r\n            translations = translationsResult\r\n        })\r\n\r\n        // when $scope.profiles is null then we haven't done a search\r\n        // when $scope.profiles is an empty array then there are no new matches\r\n        $scope.profiles = null\r\n        $scope.noOneAround = false\r\n\r\n        var profile = $scope.profile = AppService.getProfile()\r\n        $scope.profilePhoto = profile.photoUrl\r\n\r\n\r\n        $scope.deleteUnmatchedSwipes = () => AppUtil.blockingCall(\r\n            AppService.deleteUnmatched(),\r\n            success => $log.log(success),\r\n            error => $log.error(error)\r\n        )\r\n\r\n        $scope.$on('$ionicView.enter', () => {\r\n            if (profile.enabled) {\r\n                // Check for any previously search results\r\n                $scope.profiles = AppService.getProfileSearchResults()\r\n                // If we haven't searched yet or we are coming back to the screen and there isn't any results then search for more\r\n                if (!$scope.profiles || $scope.profiles.length === 0)\r\n                    $scope.searchAgain()\r\n            }\r\n        })\r\n\r\n      \r\n\r\n        $scope.$on('newProfileSearchResults', () => $scope.profiles = AppService.getProfileSearchResults())\r\n\r\n        $scope.searchAgain = () => {\r\n            $scope.profiles = null\r\n            $scope.noOneAround = false\r\n            updateProfileSearchResults()\r\n        }\r\n\r\n\r\n        var MIN_SEARCH_TIME = 2000\r\n\r\n        function updateProfileSearchResults() {\r\n\r\n            var startTime = Date.now()\r\n            AppService.updateProfileSearchResults()\r\n                .then(result => {\r\n                    $log.log('CardsCtrl: found ' + result.length + ' profiles')\r\n                    $scope.noOneAround = result.length ? false : true\r\n                    result.map(profile => profile.image = profile.photoUrl)\r\n                    // Make the search screen show for at least a certain time so it doesn't flash quickly\r\n                    var elapsed = Date.now() - startTime\r\n                    if (elapsed < MIN_SEARCH_TIME)\r\n                        $timeout(() => $scope.profiles = result, MIN_SEARCH_TIME - elapsed)\r\n                    else\r\n                        $scope.profiles = result\r\n                }, error => {\r\n                    $log.log('updateProfileSearchResults error ' + JSON.stringify(error))\r\n                    $scope.profiles = []\r\n                    AppUtil.toastSimple(translations.MATCHES_LOAD_ERROR)\r\n                })\r\n        }\r\n\r\n        // Initialise the new match modal\r\n        $ionicModal.fromTemplateUrl('newMatch.html', {\r\n            scope: $scope,\r\n            animation: 'slide-in-up'\r\n        }).then(modal => $scope.modal = modal)\r\n        // Cleanup the modal when we're done with it!\r\n        $scope.$on('$destroy', () => $scope.modal.remove())\r\n\r\n        $scope.$on('newMatch', (event, match) => {\r\n            $log.log('CardsCtrl.newMatch ' + match.id)\r\n            $scope.newMatch = match\r\n            $scope.matchProfile = AppService.getProfileById(match.profileId)\r\n            $scope.modal.show()\r\n        })\r\n        $scope.closeNewMatch = () => $scope.modal.hide()\r\n\r\n        $scope.messageNewMatch = () => {\r\n            $scope.modal.hide()\r\n            $state.go('^.chat', { matchId: $scope.newMatch.id })\r\n        }\r\n        // a test function for viewing the new match modal screen\r\n        $scope.openNewMatch = () => {\r\n            $scope.newMatch = AppService.getMutualMatches()[0]\r\n            $scope.modal.show()\r\n        }\r\n\r\n        $scope.enableDiscovery = () => {\r\n            AppUtil.blockingCall(\r\n                AppService.enableDiscovery(),\r\n                () => {\r\n                    $log.log('discovery enabled. updating search results...')\r\n                    updateProfileSearchResults()\r\n                }\r\n            )\r\n        }\r\n\r\n        $scope.viewDetails = (profile) => {\r\n            $log.log('view details ' + JSON.stringify(profile))\r\n            $state.go('^.search-profile-view', { profile: profile })\r\n        }\r\n\r\n        $scope.accept = () => {\r\n            $log.log('accept button')\r\n            var topProfile = $scope.profiles[$scope.profiles.length - 1]\r\n            AppService.processMatch(topProfile, true)\r\n            topProfile.accepted = true // this triggers the animation out\r\n            $timeout(() => $scope.profiles.pop(), 340)\r\n        }\r\n\r\n        $scope.reject = () => {\r\n            $log.log('reject button')\r\n            var topProfile = $scope.profiles[$scope.profiles.length - 1]\r\n            AppService.processMatch(topProfile, false)\r\n            topProfile.rejected = true // this triggers the animation out\r\n            $timeout(() => $scope.profiles.pop(), 340)\r\n        }\r\n\r\n        // matches are swiped off from the end of the $scope.profiles array (i.e. popped)\r\n\r\n        $scope.cardDestroyed = (index) => $scope.profiles.splice(index, 1)\r\n\r\n        $scope.cardTransitionLeft = (profile) => {\r\n            AppService.processMatch(profile, false)\r\n            if ($scope.profiles.length == 0) {\r\n                // TODO auto-load more?\r\n            }\r\n        }\r\n        $scope.cardTransitionRight = (profile) => {\r\n            AppService.processMatch(profile, true)\r\n            if ($scope.profiles.length == 0) {\r\n                // TODO auto-load more?\r\n            }\r\n        }\r\n    })\r\n\r\n\r\n    .controller('MatchProfileCtrl', function ($scope, $translate, AppService, AppUtil,\r\n        $state, $stateParams, $ionicHistory, $ionicActionSheet, $ionicPopup,\r\n        matchProfile) {\r\n        //$cordovaFacebook.api()\r\n        //{user-id}?fields=context.fields%28mutual_friends%29\r\n\r\n        var translations\r\n        $translate(['REQUEST_FAILED', 'REPORT', 'MATCH_OPTIONS', 'CANCEL', 'WANT_TO_REMOVE_MATCH', 'MATCH_REPORTED']).then(function (translationsResult) {\r\n            translations = translationsResult\r\n        })\r\n\r\n        $scope.matchProfile = matchProfile\r\n\r\n        $scope.profileOptions = () => {\r\n\r\n            $ionicPopup.show({\r\n                title: \"Match Options\",\r\n                subTitle: \"Press send to confirm with your potential co-parent that you have agreed to try for a baby with each other. Don’t worry, it’s not legally binding. This will be the beginning of your journey. From here we will guide you through best practices around having a                         baby. This feature also aims to reduce the chance of what we call the Genghis Kahn effect. The Kahn family is thought to have over 30 million descendants. We encourage you to use this feature to better inform yourself and others. Best to be open and honest, we’re dealing                     with potential family.\",\r\n                cssClass: 'popup-vertical-buttons',\r\n\r\n                buttons: [{\r\n                    text: 'We have agreed to try for a baby',\r\n                    type: 'button-positive',\r\n                    onTap: function (e) {\r\n                        impregnate()\r\n                    }\r\n                },\r\n                {\r\n                    text: 'Cancel',\r\n                    type: 'button-assertive text-color-white',\r\n                    onTap: function (e) {\r\n                        AppUtil.toastSimple(\"No Confirmation Request has been Sent\")\r\n                    }\r\n                }\r\n\r\n\r\n                ]\r\n            });\r\n        }\r\n\r\n        //      $ionicActionSheet.show({\r\n        //          buttons: [\r\n        //              { text: 'We have agreed to try for a baby' }\r\n        //          ],\r\n        //          destructiveText: translations.REPORT,\r\n        //          titleText: translations.MATCH_OPTIONS,\r\n        //          cancelText: translations.CANCEL,\r\n\r\n        //          destructiveButtonClicked: function (index) {\r\n        //              report()\r\n        //              return true\r\n        //          },\r\n        //          buttonClicked: function (index) {\r\n        //              $ionicPopup.confirm({\r\n        //                  title: \"Press send to confirm with your potential co-parent that you have agreed to try for a baby with each other. Don’t worry, it’s not legally binding. This will be the beginning of your journey. From here we will guide you through best practices around having a baby. This feature also aims to reduce the chance of what we call the Genghis Kahn effect. The Kahn family is thought to have over 30 million descendants. We encourage you to use this feature to better inform yourself and others. Best to be open and honest, we’re dealing with potential family.\",\r\n        //                  okText: \"Send\",\r\n        //                  cancelText: translations.CANCEL,\r\n\r\n        //              }).then(function (res) {\r\n        //                  if (res) {\r\n        //                      impregnate()\r\n        //                  } else {\r\n        //                      AppUtil.toastSimple(\"No Confirmation Request has been Sent\")\r\n        //                  }\r\n        //                  return true\r\n        //              })\r\n\r\n        //          }\r\n        //     })\r\n        //  }\r\n\r\n        function impregnate() {\r\n            AppUtil.blockingCall(\r\n                AppService.processPregnancy($scope.matchProfile, true),\r\n                () => {\r\n                    AppUtil.toastSimple(\"Confirmation Request Sent!\")\r\n                }\r\n            )\r\n        }\r\n\r\n\r\n        function report() {\r\n            AppUtil.blockingCall(\r\n                AppService.reportProfile('profile', $scope.matchProfile), // should pass in the match too\r\n                () => {\r\n                    $ionicPopup.confirm({\r\n                        title: translations.MATCH_REPORTED,\r\n                        template: translations.WANT_TO_REMOVE_MATCH,\r\n                        okText: translations.REMOVE,\r\n                        cancelText: translations.CANCEL\r\n                    }).then(function (res) {\r\n                        if (res)\r\n                            unmatch()\r\n                    })\r\n                }\r\n            )\r\n        }\r\n\r\n        function unmatch() {\r\n            AppUtil.blockingCall(\r\n                AppService.removeMatch($stateParams.matchId),\r\n                () => {\r\n                    $ionicHistory.nextViewOptions({\r\n                        historyRoot: true,\r\n                        disableBack: true\r\n                    })\r\n                    $state.go('menu.chats')\r\n                }, 'REMOVE_MATCH_ERROR'\r\n            )\r\n        }\r\n\r\n    });","angular.module('controllers')\r\n\r\n.controller('EmailVerificationCtrl', function($scope, AppService, AppUtil) {\r\n\r\n    // see https://parse.com/docs/js_guide#users-emailverification\r\n    // http://blog.parse.com/2012/04/03/introducing-app-email-settings/\r\n\r\n    $scope.isEmailVerified = () =>\r\n        AppUtil.blockingCall(\r\n            AppService.isEmailVerified(),\r\n            verified => verified ? AppService.goToNextLoginState() : AppUtil.toastSimpleTranslate('EMAIL_NOT_VERIFIED')\r\n        )\r\n\r\n    $scope.cancel = () => AppService.logout()\r\n})\r\n\r\n.controller('ClinicsCtrl', function($scope, AppService, AppUtil, $ionicPopover, $localStorage, $sce) {\r\n    $scope.clinicQuestions = null\r\n    $scope.showcase = \"General\"\r\n\r\n    $scope.$on('$ionicView.beforeEnter', () => $scope.refreshClinics())\r\n\r\n    $scope.$on('clinicsUpdated', () => {\r\n        update()\r\n    })\r\n\r\n    function update() {\r\n        $scope.showcase = $localStorage.clinicSettings\r\n        console.log('ClinicsCtrl update()' + $scope.showcase)\r\n    }\r\n\r\n    $scope.refreshClinics = function() {\r\n        $localStorage.clinicSettings = \"General\"\r\n        AppUtil.blockingCall(\r\n            AppService.getClinicsQuestion(),\r\n            questions => {\r\n                console.log('loaded ' + questions.length + ' questions')\r\n                $scope.clinicQuestions = questions\r\n            })\r\n    }\r\n\r\n    // Show the clinic settings dialog\r\n    $scope.clinicSettings = ($event) => {\r\n        var template = '<ion-popover-view style=\"height: 250px;\"><ion-header-bar><h1 class=\"title\">FAQ Settings</h1></ion-header-bar><ion-content>' +\r\n            '<clinic-settings/>' +\r\n            '</ion-content></ion-popover-view>'\r\n        $scope.popover = $ionicPopover.fromTemplate(template, { scope: $scope })\r\n        $scope.popover.show($event)\r\n        $scope.closePopover = () => $scope.popover.hide()\r\n        $scope.$on('$destroy', () => $scope.popover.remove())\r\n    }\r\n\r\n    $scope.trustSrcurl = function(data) {\r\n        if (data)\r\n            return $sce.trustAsResourceUrl('https://www.youtube.com/embed/' + data)\r\n    }\r\n})\r\n\r\n.directive('clinicSettings', function($localStorage, $rootScope) {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {},\r\n        template: '<ion-list>' +\r\n            '<div class=\"item item-divider\">Show Questions by:</div>' +\r\n            '<ion-radio ng-model=\"settings\" ng-click=\"showItem(\\'General\\')\" ng-value=\"\\'General\\'\">General</ion-radio>' +\r\n            '<ion-radio ng-model=\"settings\" ng-click=\"showItem(\\'Male\\')\" ng-value=\"\\'Male\\'\">Male</ion-radio>' +\r\n            '<ion-radio ng-model=\"settings\" ng-click=\"showItem(\\'Female\\')\" ng-value=\"\\'Female\\'\">Female</ion-radio>' +\r\n            '</ion-list>',\r\n        controller: function($scope) {\r\n            $scope.settings = $localStorage.clinicSettings || \"General\"\r\n            $scope.showItem = (itemShown) => {\r\n                $localStorage.clinicSettings = itemShown // persist the settings\r\n                $rootScope.$broadcast('clinicsUpdated')\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n.controller('AboutCtrl', function($scope, AppService, AppUtil, $sce, $ionicModal) {\r\n    $scope.$on('$ionicView.beforeEnter', () => $scope.refreshAbout())\r\n\r\n    $scope.refreshAbout = function() {\r\n        AppUtil.blockingCall(\r\n            AppService.getAboutJab(),\r\n            about => {\r\n                $scope.about = about\r\n            })\r\n    }\r\n\r\n    $scope.trustSrcurl = function(data) {\r\n        if (data)\r\n            return $sce.trustAsResourceUrl('https://www.youtube.com/embed/' + data)\r\n    }\r\n\r\n\r\n})\r\n\r\n.controller('FindUsCtrl', function($scope, $stateParams, AppService, AppUtil, $ionicModal) {\r\n    $scope.$on('$ionicView.beforeEnter', () => $scope.refreshFindUs())\r\n    $scope.findUsList = null\r\n    $scope.refreshFindUs = function() {\r\n        AppUtil.blockingCall(\r\n            AppService.getFindUs(),\r\n            findUs => {\r\n                $scope.findUsList = []\r\n                console.log('loaded ' + findUs.length + ' find us group')\r\n                findUs.forEach(item => {\r\n                    var findUs = { name: \"\", username: \"\", checked: false }\r\n                    findUs.name = item.name\r\n                    findUs.username = $stateParams.username\r\n                    $scope.findUsList.push(findUs)\r\n                });\r\n            })\r\n    }\r\n    $scope.skip = function() {\r\n        AppService.goToNextLoginState()\r\n    }\r\n    $scope.done = function() {\r\n        $scope.votes = $scope.findUsList.filter(function(item) {\r\n            return item.checked;\r\n        });\r\n        AppUtil.blockingCall(\r\n            AppService.addFindUsReport($scope.votes),\r\n            () => {\r\n                AppUtil.toastSimple(\"Thank You\")\r\n                AppService.goToNextLoginState()\r\n            })\r\n    }\r\n\r\n    $ionicModal.fromTemplateUrl('introWalkthrough.html', {\r\n        scope: $scope,\r\n        animation: 'slide-in-up'\r\n    }).then(function(modal) {\r\n        $scope.modal = modal\r\n        $scope.modal.show()\r\n    })\r\n\r\n    $scope.closeModal = function() {\r\n        $scope.modal.hide();\r\n    };\r\n})\r\n\r\n.controller('WalkThruCtrl', function($scope, AppService, AppUtil) {\r\n    $scope.closeModal = function() {\r\n        AppService.goToNextLoginState()\r\n    }\r\n})\r\n\r\n.controller('ProfileSetupCtrl', function($scope, $state, $ionicHistory, AppService, AppUtil) {\r\n    // The user will be sent here from AppService.goToNextLoginState() if AppService.isProfileValid() returns false\r\n    $scope.$on('$ionicView.beforeEnter', function(event) {\r\n        var profile = AppService.getProfile()\r\n\r\n        if (!profile.name) {\r\n            AppService.logout()\r\n        }\r\n\r\n\r\n        var birthYear = null,\r\n            birthMonth = null,\r\n            birthDay = null\r\n        if (profile.birthdate) {\r\n            birthYear = profile.birthdate.getFullYear()\r\n            birthMonth = profile.birthdate.getMonth()\r\n            birthDay = profile.birthdate.getDay()\r\n        }\r\n\r\n        // pre-populate the values we already have on the profile\r\n        $scope.user = { name: profile.name, birthYear: birthYear, birthMonth: birthMonth, birthDay: birthDay, gender: profile.gender }\r\n    })\r\n\r\n    // Static data\r\n    $scope.months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n    $scope.years = []\r\n        // provide the years for people aged 13 to 100\r\n    var yearsFrom = new Date().getFullYear() - 100\r\n    var yearsTo = new Date().getFullYear() - 13\r\n    for (var i = yearsFrom; i <= yearsTo; i++) {\r\n        $scope.years.push((i))\r\n    }\r\n    $scope.yearFrom = yearsFrom\r\n    $scope.yearTo = yearsTo\r\n\r\n    $scope.saveProfile = function() {\r\n\r\n        if (!$scope.user.name || $scope.user.name.trim().length < 1) {\r\n            AppUtil.toastSimpleTranslate('FIRST_NAME_REQUIRED')\r\n            return\r\n        }\r\n        if (!$scope.user.birthDay) {\r\n            AppUtil.toastSimpleTranslate('BIRTH_DAY_REQUIRED')\r\n            return\r\n        }\r\n        if (!$scope.user.birthMonth) {\r\n            AppUtil.toastSimpleTranslate('BIRTH_MONTH_REQUIRED')\r\n            return\r\n        }\r\n        if (!$scope.user.birthYear) {\r\n            AppUtil.toastSimpleTranslate('BIRTH_YEAR_REQUIRED')\r\n            return\r\n        }\r\n        if (!$scope.user.gender) {\r\n            AppUtil.toastSimpleTranslate('GENDER_REQUIRED')\r\n            return\r\n        }\r\n\r\n        var birthdate = new Date(Date.UTC($scope.user.birthYear, $scope.user.birthMonth, $scope.user.birthDay))\r\n        var changes = { name: $scope.user.name, birthdate: birthdate, gender: $scope.user.gender, enabled: true }\r\n\r\n        AppUtil.blockingCall(AppService.saveProfile(changes),\r\n            () => {\r\n\r\n            }, 'SETTINGS_SAVE_ERROR')\r\n    }\r\n\r\n    $scope.logout = () => AppService.logout()\r\n})\r\n\r\n.controller('LocationSetupCtrl', function($scope, $translate, AppService, AppUtil, $ionicPopup, $log) {\r\n\r\n    var translations\r\n    $translate(['SETTINGS_SAVE_ERROR', 'GPS_ERROR', 'SET_MAP_LOCATION']).then(function(translationsResult) {\r\n        translations = translationsResult\r\n    })\r\n\r\n    // New York\r\n    var latLng = new google.maps.LatLng(-33.865143, 151.209900)\r\n\r\n    var mapOptions = {\r\n        center: latLng,\r\n        zoom: 11,\r\n        zoomControlOptions: {\r\n            position: google.maps.ControlPosition.RIGHT_TOP\r\n        },\r\n        mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n        mapTypeControl: false,\r\n        streetViewControl: false,\r\n        disableDoubleClickZoom: true\r\n    }\r\n\r\n    var map = new google.maps.Map(document.getElementById(\"map\"), mapOptions)\r\n    $scope.map = map\r\n    map.setCenter(latLng)\r\n\r\n    var marker = new google.maps.Marker({\r\n        position: latLng,\r\n        map: map,\r\n        title: \"My Location\",\r\n        draggable: true\r\n    })\r\n\r\n    google.maps.event.addListener(map, 'click', function(event) {\r\n        marker.setPosition(event.latLng)\r\n    })\r\n\r\n    $scope.setLocation = function() {\r\n        var pos = marker.getPosition()\r\n\r\n        AppUtil.blockingCall(\r\n            AppService.saveProfile({ gps: false, location: { latitude: pos.lat(), longitude: pos.lng() } }),\r\n            () => AppService.goToNextLoginState(),\r\n            'SETTINGS_SAVE_ERROR'\r\n        )\r\n    }\r\n\r\n    $scope.cancel = () => AppService.logout()\r\n\r\n    $scope.$on('$ionicView.afterEnter', function(event) {\r\n        // Instruct the user to set their location on the map\r\n        $ionicPopup.alert({\r\n            title: translations.GPS_ERROR,\r\n            template: translations.SET_MAP_LOCATION\r\n        })\r\n    })\r\n\r\n    // On iOS if the user has the location services off, then the initial request to get the location will fail\r\n    // but it will also open the users location settings. If the user then turns on the location services and\r\n    // returns to the app then we should try to get the location again, both when first arrive to this screen\r\n    // i.e. in $ionicView.beforeEnter, and then again on the resume listener\r\n    var checkLocation = function() {\r\n        $log.log('Checking for current position')\r\n        AppService.getCurrentPosition().then(function(location) {\r\n            $log.log('Found location ' + JSON.stringify(location))\r\n            AppUtil.toastSimple('Location found from GPS')\r\n            AppUtil.blockingCall(\r\n                AppService.saveProfile({ gps: false, location: { latitude: location.latitude, longitude: location.longitude } }),\r\n                () => AppService.goToNextLoginState(),\r\n                'SETTINGS_SAVE_ERROR'\r\n            )\r\n        }, function(error) {\r\n            $log.log('Couldn\\'t get location on resume ' + error)\r\n        })\r\n    }\r\n\r\n    $scope.$on('$ionicView.beforeEnter', function(event) {\r\n        checkLocation()\r\n        document.addEventListener('resume', checkLocation)\r\n    })\r\n\r\n    $scope.$on('$ionicView.beforeLeave', function(event) {\r\n        document.removeEventListener('resume', checkLocation)\r\n    })\r\n})\r\n\r\n.controller('TermsOfUseCtrl', function($scope, AppService, AppUtil) {\r\n\r\n    // Required for Apple store submission when there is user generated content.\r\n    // See the Next Steps in the question at http://www.quora.com/Apple-App-Store-rejection-category-14-3-help-needed\r\n\r\n    $scope.agree = () =>\r\n        AppUtil.blockingCall(\r\n            AppService.termsOfUseAgreed(),\r\n            () => AppService.goToNextLoginState()\r\n        )\r\n\r\n    $scope.logout = () => AppService.logout()\r\n})\r\n\r\n.controller('FbAlbumsCtrl', function($scope, $log, $cordovaFacebook) {\r\n    $scope.albums = null\r\n\r\n    // TODO use $iconicLoading instead of the text status\r\n    $cordovaFacebook.api('/me/albums').then(function(result) {\r\n            $scope.albums = result.data\r\n        }, function(error) {\r\n            $log.log('FbAlbumsController error ' + JSON.stringify(error))\r\n        })\r\n        // TODO handle if there are no albums\r\n})\r\n\r\n.controller('FbAlbumCtrl', function($log, $rootScope, $state, $scope, $stateParams, $ionicLoading, $cordovaFacebook) {\r\n\r\n    $cordovaFacebook.api('/' + $stateParams.albumId + '/photos?fields=id,picture,source,height,width,images&limit=500')\r\n        .then(function(result) {\r\n            $scope.photos = result.data\r\n                // TODO handle if there are no photos\r\n        }, function(error) {\r\n            $log.log('FbAlbumController - error getting album photos ' + JSON.stringify(error))\r\n        })\r\n\r\n    $scope.selectPhoto = function(photo) {\r\n        $ionicLoading.show({ templateUrl: 'loading.html' })\r\n        getBase64FromImageUrl(photo.source)\r\n    }\r\n\r\n    function getBase64FromImageUrl(URL) {\r\n        var img = new Image()\r\n        img.crossOrigin = \"anonymous\"\r\n        img.src = URL\r\n        img.onload = function() {\r\n            var canvas = document.createElement(\"canvas\")\r\n            canvas.width = this.width\r\n            canvas.height = this.height\r\n\r\n            var ctx = canvas.getContext(\"2d\")\r\n            ctx.drawImage(this, 0, 0)\r\n\r\n            var dataURL = canvas.toDataURL(\"image/png\")\r\n\r\n            $rootScope.cropPhoto = dataURL\r\n            $ionicLoading.hide()\r\n            $state.go('^.crop')\r\n        }\r\n    }\r\n})\r\n\r\n.controller('PhotoCropCtrl', function($log, $scope, $rootScope, $ionicLoading, $state, $stateParams, $ionicHistory, AppService, AppUtil) {\r\n    $scope.myImage = $rootScope.cropPhoto\r\n        // $scope.myImage = $stateParams.imageData TODO try and use a state param instead of rootScoe\r\n\r\n    $scope.croppedImage = { data: '' }\r\n\r\n    $scope.$on('$ionicView.afterLeave', function(event) {\r\n        $rootScope.cropPhoto = null\r\n    })\r\n\r\n    $scope.cancel = function() {\r\n        $ionicHistory.goBack()\r\n    }\r\n\r\n    $scope.crop = function() {\r\n\r\n        $ionicLoading.show({ templateUrl: 'loading.html' })\r\n        try {\r\n            var dataURI = $scope.croppedImage.data\r\n            var base64\r\n            if (dataURI.split(',')[0].indexOf('base64') >= 0)\r\n                base64 = dataURI.split(',')[1]\r\n            else\r\n                base64 = unescape(dataURI.split(',')[1])\r\n\r\n            AppService.setPhoto(base64).then(function(result) {\r\n                $ionicLoading.hide()\r\n\r\n                var viewHistory = $ionicHistory.viewHistory()\r\n\r\n                if (viewHistory.backView.stateName == 'menu.fb-album') {\r\n                    // pop off the facebook album history items and set the back view to the profile edit page\r\n                    var history = viewHistory.histories[viewHistory.currentView.historyId]\r\n                    history.stack.splice(2, 3)\r\n                    history.cursor = 1\r\n                    viewHistory.backView = history.stack[1]\r\n                    $ionicHistory.goBack()\r\n                } else {\r\n                    // if we came from a camers/gallery photo selection then can just go back\r\n                    $ionicHistory.goBack()\r\n                }\r\n            }, function(error) {\r\n                $ionicLoading.hide()\r\n                $log.error('Error saving cropped image ' + JSON.stringify(error))\r\n                AppUtil.toastSimple('Error saving cropped image')\r\n            })\r\n        } catch (e) {\r\n            // TODO show error\r\n            $ionicLoading.hide()\r\n            $log.error('error getting cropped image data ' + JSON.stringify(e))\r\n            AppUtil.toastSimple('Unable to crop image')\r\n        }\r\n    }\r\n})\r\n\r\n// .controller('DiscoveryCtrl', function ($scope, $state, $ionicHistory, AppService, AppUtil) {\r\n\r\n//     // The Profile fields on the discover page to save\r\n//     var fields = ['enabled', 'guys', 'girls', 'ageFrom', 'ageTo', 'distance']\r\n\r\n//     $scope.$on('$ionicView.beforeEnter', () => {\r\n//         $scope.profile = AppService.getProfile().clone()\r\n//         $scope.showMI = $scope.showKM = true\r\n//     })\r\n\r\n//     $scope.$on('$ionicView.enter', function (event) {\r\n//         $scope.showMI = $scope.profile.distanceType === 'mi' ? true : false\r\n//         $scope.showKM = $scope.profile.distanceType === 'km' ? true : false\r\n//     })\r\n\r\n//     $scope.save = () => AppUtil.blockingCall(\r\n//         AppService.saveProfile(_.pick($scope.profile, fields)),\r\n//         () => {\r\n//             AppService.clearProfileSearchResults()\r\n//             $ionicHistory.nextViewOptions({\r\n//                 historyRoot: true,\r\n//                 disableBack: true\r\n//             })\r\n//             $state.go('menu.home')\r\n//         }, 'SETTINGS_SAVE_ERROR'\r\n//     )\r\n\r\n//     $scope.cancel = () => $scope.profile = AppService.getProfile($scope).clone()\r\n// })\r\n\r\n.controller('SettingsCtrl', function($scope, $state, $ionicModal, $ionicPopup, AppService, AppUtil, $log, $rootScope, $translate, $ionicHistory, $ionicActionSheet, env) {\r\n\r\n    // The Profile fields on the discover page to save\r\n    var fields = ['enabled', 'guys', 'girls', 'ageFrom', 'ageTo', 'distance', 'LFSperm', 'LFEggs', 'LFWomb', 'LFEmbryo', 'LFNot', 'LFHelpM', 'LFHelpO', 'LFSelfId']\r\n    var translations\r\n\r\n    $translate(['SETTINGS_SAVE_ERROR', 'DELETE', 'DELETE_ACCOUNT', 'CANCEL']).then(function(translationsResult) {\r\n        translations = translationsResult\r\n    })\r\n\r\n    $scope.$on('$ionicView.enter', function(event) {\r\n        $scope.showDiscovery = false\r\n    })\r\n\r\n    $scope.profile = AppService.getProfile().clone()\r\n    $scope.showDiscovery = true\r\n    $scope.showMI = $scope.profile.distanceType === 'mi' ? true : false\r\n    $scope.showKM = $scope.profile.distanceType === 'km' ? true : false\r\n    var dType = $scope.profile.distanceType\r\n\r\n    $scope.setLanguage = (key) => {\r\n        $log.log('setting language to ' + key)\r\n        $translate.use(key)\r\n    }\r\n\r\n    $scope.save = () => {\r\n        if (dType != $scope.profile.distanceType && $scope.profile.distanceType == 'mi') {\r\n            $scope.profile.distance *= 0.621371\r\n            $scope.profile.distance = Math.floor($scope.profile.distance)\r\n        } else if (dType != $scope.profile.distanceType && $scope.profile.distanceType == 'km') {\r\n            $scope.profile.distance *= 1.609344\r\n            $scope.profile.distance = Math.ceil($scope.profile.distance)\r\n        }\r\n\r\n        dType = $scope.profile.distanceType\r\n\r\n        AppUtil.blockingCall(\r\n\r\n            AppService.saveSettings($scope.profile),\r\n            () => $scope.profile = AppService.getProfile().clone()\r\n\r\n        )\r\n\r\n        AppUtil.blockingCall(\r\n            AppService.saveProfile(_.pick($scope.profile, fields)),\r\n            () => {\r\n\r\n                AppService.clearProfileSearchResults()\r\n                $ionicHistory.nextViewOptions({\r\n                    historyRoot: true,\r\n                    disableBack: true\r\n                });\r\n                $state.go('menu.home')\r\n\r\n            }, 'SETTINGS_SAVE_ERROR'\r\n        )\r\n\r\n\r\n    }\r\n\r\n    $scope.cancel = function() {\r\n        $scope.profile = AppService.getProfile($scope).clone()\r\n    }\r\n\r\n\r\n    $scope.logout = function() {\r\n        AppService.logout()\r\n    }\r\n\r\n    $scope.inAppPurchasesAvailable = () => typeof store !== 'undefined'\r\n\r\n    $scope.buyPro = () => store.order(\"pro version\")\r\n\r\n    $scope.buySubscription = () => store.order(\"subscription\")\r\n\r\n\r\n    $scope.testPushNotification = () => AppService.testPushNotification().then(\r\n        success => AppUtil.toastSimple('Sent'),\r\n        error => AppUtil.toastSimple(JSON.stringify(error))\r\n    )\r\n\r\n\r\n    $scope.deleteUnmatchedSwipes = () => AppUtil.blockingCall(\r\n        AppService.deleteUnmatched(),\r\n        success => $log.log(success),\r\n        error => $log.error(error)\r\n    )\r\n\r\n\r\n    $scope.deleteAccount = function() {\r\n        $ionicActionSheet.show({\r\n            destructiveText: translations.DELETE,\r\n            titleText: translations.DELETE_ACCOUNT,\r\n            cancelText: translations.CANCEL,\r\n            cancel: function() {},\r\n            destructiveButtonClicked: function(index) {\r\n                doDelete()\r\n                return true\r\n            }\r\n        })\r\n    }\r\n\r\n    $scope.debug = () => {\r\n        console.log('debug...')\r\n        $ionicActionSheet.show({\r\n            destructiveText: 'Send Debug Logs',\r\n            titleText: 'UID: ' + AppService.getProfile().uid + ' Env: ' + env,\r\n            cancelText: translations.CANCEL,\r\n            cancel: function() {},\r\n            destructiveButtonClicked: function(index) {\r\n                $log.error('debug log')\r\n                return true\r\n            }\r\n        })\r\n    }\r\n\r\n    $scope.getProfilesNew = () => {\r\n        console.log('getProfilesNew...')\r\n\r\n        AppUtil.blockingCall(\r\n            AppService.getProfileNew(),\r\n            results => {\r\n                console.log('Results found: ' + results.length)\r\n            })\r\n    }\r\n\r\n    function doDelete() {\r\n        AppUtil.blockingCall(\r\n            AppService.deleteAccount()\r\n        )\r\n    }\r\n\r\n    $ionicModal.fromTemplateUrl('introWalkthrough.html', {\r\n        scope: $scope,\r\n        animation: 'slide-in-up'\r\n    }).then(function(modal) {\r\n        $scope.modal = modal;\r\n    })\r\n\r\n    $scope.openModal = function() {\r\n        $scope.modal.show()\r\n    }\r\n\r\n    $scope.closeModal = function() {\r\n        $scope.modal.hide()\r\n    }\r\n\r\n    $scope.debug = () => {\r\n        console.log('debug...')\r\n        $ionicActionSheet.show({\r\n            destructiveText: 'Send Debug Logs',\r\n            titleText: 'UID: ' + AppService.getProfile().uid + ' Env: ' + env,\r\n            cancelText: translations.CANCEL,\r\n            cancel: function() {},\r\n            destructiveButtonClicked: function(index) {\r\n                $log.error('debug log')\r\n                return true\r\n            }\r\n        })\r\n    }\r\n\r\n    $scope.filterInfoPopup = () => {\r\n        var infoPopup = $ionicPopup.alert({\r\n            title: 'Advanced Filter Options',\r\n            template: '<p class=\"center\">To use this option you need to finalise your profile. This should take around 15 seconds.</p>'\r\n        });\r\n        infoPopup.then(() => $state.go('menu.profile-edit'));\r\n    }\r\n})\r\n\r\n.controller('ContactCtrl', function($scope, AppService, AppUtil, $translate) {\r\n\r\n\r\n    var translations\r\n    $translate(['GIVE_US_FEEDBACK']).then(function(translationsResult) {\r\n        translations = translationsResult\r\n    })\r\n\r\n    $scope.contact = { message: '' }\r\n\r\n    $scope.sendMessage = function() {\r\n        if ($scope.contact.message.length < 10) {\r\n            AppUtil.toastSimple('Write at least a few words!')\r\n            return\r\n        }\r\n\r\n        AppUtil.blockingCall(\r\n            AppService.sendContactMessage($scope.contact.message),\r\n            () => {\r\n                $scope.contact.message = ''\r\n                AppUtil.toastSimple('Message sent')\r\n            }\r\n        )\r\n    }\r\n})\r\n\r\n.controller('LocationCtrl', function($scope, $translate, AppService, AppUtil, $ionicLoading) {\r\n\r\n    // TODO load the google map script async here when required instead of index.html\r\n    var translations\r\n    $translate(['GPS_ERROR']).then(function(translationsResult) {\r\n        translations = translationsResult\r\n    })\r\n\r\n    var profile = AppService.getProfile()\r\n    var location = profile.location\r\n\r\n    $scope.location = { useGPS: profile.gps }\r\n\r\n    var myLatlng = new google.maps.LatLng(location.latitude, location.longitude)\r\n\r\n    var mapOptions = {\r\n        center: myLatlng,\r\n        zoom: 11,\r\n        zoomControlOptions: {\r\n            position: google.maps.ControlPosition.RIGHT_TOP\r\n        },\r\n        mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n        mapTypeControl: false,\r\n        streetViewControl: false,\r\n        disableDoubleClickZoom: true\r\n    }\r\n\r\n    var map = new google.maps.Map(document.getElementById(\"map\"), mapOptions)\r\n    $scope.map = map\r\n    map.setCenter(myLatlng)\r\n\r\n    var marker = new google.maps.Marker({\r\n        position: myLatlng,\r\n        map: map,\r\n        title: \"My Location\",\r\n        draggable: !profile.gps\r\n    })\r\n\r\n    google.maps.event.addListener(map, 'click', function(event) {\r\n        if (!$scope.location.useGPS)\r\n            marker.setPosition(event.latLng)\r\n    })\r\n\r\n    $scope.useGPSchanged = function() {\r\n        marker.setDraggable(!$scope.location.useGPS)\r\n\r\n        if ($scope.location.useGPS) {\r\n            $ionicLoading.show({ templateUrl: 'loading.html' })\r\n            AppService.getCurrentPosition().then(function(gpsLocation) {\r\n                return AppService.saveProfile({ gps: true, location: gpsLocation })\r\n            }).then(\r\n                function(profile) {\r\n                    var gpsLatLng = new google.maps.LatLng(profile.location.latitude, profile.location.longitude)\r\n                    marker.setPosition(gpsLatLng)\r\n                    map.setCenter(gpsLatLng)\r\n                    $ionicLoading.hide()\r\n                }, error => {\r\n                    $ionicLoading.hide()\r\n                    if (error === 'GPS_ERROR')\r\n                        AppUtil.toastSimple(translations.GPS_ERROR)\r\n                    else\r\n                        AppUtil.toastSimple(translations.SETTINGS_SAVE_ERROR)\r\n                    $scope.location.useGPS = false\r\n                    marker.setDraggable(true)\r\n                }\r\n            )\r\n        }\r\n        // else the user needs to click the save button\r\n    }\r\n\r\n    $scope.setLocation = function() {\r\n        var pos = marker.getPosition()\r\n\r\n        AppUtil.blockingCall(\r\n            AppService.saveProfile({ gps: false, location: { latitude: pos.lat(), longitude: pos.lng() } }),\r\n            () => { /* send back to main page? */ },\r\n            'SETTINGS_SAVE_ERROR'\r\n        )\r\n    }\r\n\r\n})\r\n.controller('ShareVidHomeCtrl',function($rootScope, $cordovaCapture, $cordovaCamera, $scope, $state){\r\n\r\n  $scope.recordVideo = function(){\r\n  var options = { limit: 1, duration: 20 };\r\n  $cordovaCapture.captureVideo(options).then(function(videoData) {\r\n        $rootScope.currentVideoPath = videoData[0].fullPath;\r\n        $state.go(\"sharevidupload\");\r\n  }, function(err){\r\n\r\n  });\r\n\r\n}\r\n}).controller('ShareVidUploadCtrl',function($scope, $window, $cordovaSocialSharing, $rootScope, $cordovaCapture, $cordovaCamera, $ionicPopup, $ionicLoading, $cordovaFileTransfer){\r\n\r\n$scope.vid_height = ($window.innerHeight / 2) ;\r\n$scope.vid_width = $window.innerWidth;\r\n\r\n    $scope.recordVideo = function(){\r\n  var options = { limit: 1, duration: 20 };\r\n  $cordovaCapture.captureVideo(options).then(function(videoData) {\r\n        $rootScope.currentVideoPath = videoData[0].fullPath;\r\n         var video = document.getElementById('video_to_upload');\r\n         video.src = videoData[0].fullPath;\r\n         video.play();\r\n\r\n  }, function(err){\r\n\r\n  });\r\n\r\n}\r\n\r\n$scope.share = function(){\r\n\r\n    var filePath = getCorrectFilePath();\r\n    doUploadToYoutube(filePath);\r\n}\r\n\r\nfunction getCorrectFilePath(){\r\n       var fileName  = $rootScope.currentVideoPath;\r\n    if (ionic.Platform.isAndroid()) {\r\n      if(fileName.substring(0, 4) != \"file\"){\r\n       \r\n       fileName = \"file:/\"+fileName;\r\n      }\r\n  } else if (ionic.Platform.isIOS()) {\r\n\r\n}\r\n  \r\n  return fileName;\r\n}\r\n\r\nfunction doUploadToYoutube(videoPath){\r\n      $ionicLoading.show({\r\n              content: 'Processing please wait',\r\n              animation: 'fade-in',\r\n              showBackdrop: true,\r\n              showDelay: 0\r\n          });\r\n\r\n     var options = {\r\n            fileKey: \"video\",\r\n            fileName: \"will_be_provided_by_user\"+\".mp4\",\r\n            chunkedMode: false,\r\n            mimeType: \"video/mp4\"\r\n        };\r\n\r\n    $cordovaFileTransfer.upload(\"http://sandboxserver.co.za/upload_to_youtube.php\", videoPath, options, true)\r\n      .then(function(result) {\r\n        console.log(result.response);\r\n        $ionicLoading.hide();\r\n        var res = JSON.parse(result.response);\r\n        if(typeof res[\"status\"] != \"undefined\" && typeof res[\"status\"] != null){  \r\n        //a service will be called here to add user video link to the server, two new column will be added to the database: \r\n        // 'youtubeVid' this column is a boolean and will i fthe user has a video or not, 'youtubeVidUrl', this column will contain the youtube url   \r\n           $ionicPopup.alert({\r\n        title: \"Successfull\",\r\n        template: \"Video Successfully uploaded. Thanks you for sharing!<br> Link:<b>\"+res[\"video_url\"]\r\n         }).then(function (result) {\r\n       });\r\n        }else{\r\n                $ionicPopup.alert({\r\n        title: \"Error\",\r\n        template: \"Upload failed please try again\"\r\n         }).then(function (result) {\r\n       });\r\n        }\r\n      \r\n\r\n      }, function(err) {\r\n        // Error\r\n         console.log(\"ERROR: \" + JSON.stringify(err));\r\n            $ionicPopup.alert({\r\n        title: \"Error\",\r\n        template: \"Upload failed please try again\"\r\n         }).then(function (result) {\r\n       });\r\n      }, function (progress) {\r\n        // constant progress updates\r\n      });\r\n}\r\n\r\n});","angular.module('controllers')\n\n.controller('ChatsCtrl', function($scope, $log, AppService, $ionicPopover, $localStorage) {\n\n    $scope.$on('$ionicView.beforeEnter', function() {\n        update()\n        AppService.resetBadge()\n    })\n\n    $scope.$on('chatsUpdated', () => {\n        update()\n    })\n\n    function update() {\n        $log.debug('ChatsCtrl update()')\n        var matches = sort(AppService.getMutualMatches())\n        var length = matches.length\n            // Have noticed some duplicate errors in the matches ng-repeat somehow\n        matches = _.uniq(matches, 'id')\n        if (matches.length !== length)\n            $log.error('Found duplicated in matches')\n        $scope.matches = matches\n    }\n\n    function sort(chats) {\n        $scope.settings = $localStorage.chatSettings || { sortBy: 'updated' }\n        var sorted = chats\n        if ($scope.settings.sortBy === 'updated') {\n            // lodash _.sortyByOrder is replace with .orderBy in 4.0\n            //sorted = _.sortByOrder(chats, ['updatedAt'], [false])\n            chats.sort(function(a, b) {\n                if (a.updatedAt.getTime() === b.updatedAt.getTime()) return 0\n                if (typeof a.lastMessageAt !== 'undefined' && typeof b.lastMessageAt !== 'undefined') {\n                    return a.lastMessageAt.getTime() > b.lastMessageAt.getTime() ? -1 : 1\n                } else if (typeof a.lastMessageAt === 'undefined' && typeof b.lastMessageAt !== 'undefined') {\n                    return a.updatedAt.getTime() > b.lastMessageAt.getTime() ? -1 : 1\n                } else if (typeof a.lastMessageAt !== 'undefined' && typeof b.lastMessageAt === 'undefined') {\n                    return a.lastMessageAt.getTime() > b.updatedAt.getTime() ? -1 : 1\n                }\n                return a.updatedAt.getTime() > b.updatedAt.getTime() ? -1 : 1\n            })\n        } else if ($scope.settings.sortBy === 'name') {\n            _.forEach(sorted, chat => chat.name = chat.profile.name ? chat.profile.name.toLowerCase() : 'zzz')\n            sorted = _.sortByOrder(chats, ['name'], [true])\n        }\n        return sorted\n    }\n\n    // Show the chat settings dialog\n    $scope.chatSettings = ($event) => {\n        var template = '<ion-popover-view style=\"height: 200px;\"><ion-header-bar><h1 class=\"title\">Chat Settings</h1></ion-header-bar><ion-content>' +\n            '<chat-settings/>' +\n            '</ion-content></ion-popover-view>'\n        $scope.popover = $ionicPopover.fromTemplate(template, { scope: $scope })\n        $scope.popover.show($event)\n        $scope.closePopover = () => $scope.popover.hide()\n        $scope.$on('$destroy', () => $scope.popover.remove())\n    }\n})\n\n// Chat settings directive. Can be re-used in a standalon settings page too.\n.directive('chatSettings', function($localStorage, $rootScope, $log) {\n    return {\n        restrict: 'E',\n        scope: {},\n        template: '<ion-list>' +\n            '<div class=\"item item-divider\">Sort by:</div>' +\n            '<ion-radio ng-model=\"settings.sortBy\" ng-click=\"sortByUpdated(\\'updated\\')\" ng-value=\"\\'updated\\'\">Recently updated</ion-radio>' +\n            '<ion-radio ng-model=\"settings.sortBy\" ng-click=\"sortByUpdated(\\'name\\')\" ng-value=\"\\'name\\'\">Name</ion-radio>' +\n            '</ion-list>',\n        controller: function($scope) {\n            $scope.settings = $localStorage.chatSettings || { sortBy: 'updated' }\n            $scope.sortByUpdated = (newSort) => {\n                //$scope.settings.sortBy = newSort\n                $log.debug('chatSettings.sortByUpdated ' + $scope.settings.sortBy)\n                $localStorage.chatSettings = $scope.settings // persist the settings\n                $rootScope.$broadcast('chatsUpdated')\n            }\n        }\n    }\n})\n\n.controller('ChatCtrl', function($scope, $log, $timeout, $interval, $translate, $ionicScrollDelegate, $state,\n    $stateParams, $ionicHistory, $ionicNavBarDelegate, $ionicActionSheet, $ionicPopup,\n    $ionicLoading, AppService, AppUtil, $cordovaCamera, $cordovaFile, ImagesUtil, $cordovaClipboard) {\n\n    var translations\n    $translate(['UNMATCHED', 'REMOVE_MATCH', 'REPORT', 'MATCH_OPTIONS', 'CANCEL', 'REMOVE_MATCH_ERROR', 'MATCH_REPORTED', 'WANT_TO_REMOVE_MATCH', 'REMOVE', 'MESSAGE_NOT_SENT', 'REQUEST_FAILED']).then(function(translationsResult) {\n        translations = translationsResult\n    })\n\n    $scope.messages = []\n    $scope.sendingMessages = [] // Messages which have just been sent and waiting for server response\n    $scope.failedMessages = [] // Messages which have failed to send\n    $scope.profile = AppService.getProfile()\n\n    var messageCheckTimer\n\n    var viewScroll = $ionicScrollDelegate.$getByHandle('userMessageScroll')\n    var footerBar // gets set in $ionicView.enter\n    var scroller\n    var txtInput // ^^^\n\n    var loadChatDataPromise\n\n    // This hide the elements with the hide-on-keyboard-open class straight away instead of after a delay\n    // Could potentially cause laggy scrolling on older/slower devices, but maybe ok with native scrolling now\n    // https://github.com/driftyco/ionic/issues/3041#issuecomment-111303479\n    window.addEventListener('native.keyboardshow', function() {\n        document.body.classList.add('keyboard-open')\n    })\n\n    $scope.$on('$ionicView.beforeEnter', function() {\n        // TODO if we've come by $stateParams.profileId then $stateParams.matchId will be null\n        $log.log('$stateParams.matchId ' + $stateParams.matchId)\n        $scope.match = AppService.getMatch($stateParams.matchId)\n        AppService.getProfileByMatchId($stateParams.matchId).then((result) => {\n            $log.log('match profile ' + JSON.stringify(result))\n            $scope.matchProfile = result\n        })\n        loadChatDataPromise = AppService.getActiveChat($stateParams.matchId)\n            .then(activeMessages => {\n                $scope.messages = activeMessages\n                $scope.matchId = $stateParams.matchId\n            })\n    })\n\n    // A chat could have a number of messages while could take sometime to load from the database and create the DOM.\n    // Instead of resolving in the router we will do the main work here so the initial UI tap is responsive and\n    // display the messages when its all ready\n    $scope.$on('$ionicView.enter', function() {\n        if (window.cordova) {\n            cordova.plugins.Keyboard.disableScroll(true)\n            window.addEventListener('native.keyboardshow', keyboardShowHandler)\n            window.addEventListener('native.keyboardhide', keyboardHideHandler)\n        }\n        $ionicLoading.show({ templateUrl: 'loading.html', noBackdrop: true, delay: 400 })\n        loadChatDataPromise\n            .then(() => {\n                    $scope.doneLoading = true\n                    viewScroll.scrollBottom()\n                    $ionicLoading.hide()\n                        // Load what the user has previously typed, if anything\n                    $scope.input = { message: localStorage['userMessage-' + $scope.matchProfile.id] || '' }\n\n                    $timeout(function() {\n                        footerBar = document.body.querySelector('#userMessagesView .bar-footer')\n                        scroller = document.body.querySelector('#userMessagesView .scroll-content')\n                        txtInput = angular.element(footerBar.querySelector('textarea'))\n                    }, 0)\n\n                    messageCheckTimer = $interval(function() {\n                        // here you could check for new messages if your app doesn't use push notifications or user disabled them\n                    }, 20000)\n                },\n                (error) => {\n                    $scope.messages = []\n                    $ionicLoading.hide()\n                    $log.log('error loading chat ' + JSON.stringify(error))\n                    AppUtil.toastSimpleTranslate('REQUEST_FAILED')\n                })\n    })\n\n\n    $scope.$on('$ionicView.afterEnter', function() {\n        AppService.setChatRead($stateParams.matchId, true)\n\n        // this is just used by the report() function at the moment\n        $scope.match = AppService.getMatch($stateParams.matchId)\n    })\n\n\n    // Save what the user has typed when they leave the view\n    $scope.$on('$ionicView.beforeLeave', function() {\n        if (!$scope.input.message || $scope.input.message.trim().length == 0)\n            localStorage.removeItem('userMessage-' + $scope.matchProfile.id)\n        else\n            localStorage['userMessage-' + $scope.matchProfile.id] = $scope.input.message\n    })\n\n    $scope.$on('$ionicView.leave', function() {\n        if (window.cordova) {\n            window.removeEventListener('native.keyboardshow', keyboardShowHandler)\n            window.removeEventListener('native.keyboardhide', keyboardHideHandler)\n            cordova.plugins.Keyboard.disableScroll(false)\n        }\n\n        //$log.log('leaving UserMessages view, destroying interval')\n        // Make sure that the interval is destroyed\n        if (angular.isDefined(messageCheckTimer)) {\n            $interval.cancel(messageCheckTimer)\n            messageCheckTimer = undefined\n        }\n    })\n\n\n    $scope.$on('newMessage', function(event, message) {\n        if (message.match.id == $stateParams.matchId) {\n            $ionicScrollDelegate.scrollBottom(true)\n                // re-set the read flag if we are viewing this chat\n            $timeout(function() {\n                AppService.setChatRead(message.match.id, true)\n            }, 1000)\n        }\n    })\n\n    $scope.$on('chatsUpdated', function(event, matchId) {\n        $log.log('on ChatCtrl chatsUpdated')\n        if (matchId === $stateParams.matchId) {\n            AppUtil.toastSimpleTranslate('UNMATCHED')\n                // TODO if came here direct from a push notification then no back history?\n            $ionicHistory.goBack()\n        }\n    })\n\n    $scope.chatOptions = function() {\n        $ionicActionSheet.show({\n            buttons: [\n                { text: translations.REPORT }\n            ],\n            destructiveText: translations.REMOVE_MATCH,\n            titleText: translations.MATCH_OPTIONS,\n            cancelText: translations.CANCEL,\n            cancel: function() {},\n            destructiveButtonClicked: function(index) {\n                unmatch()\n                return true\n            },\n            buttonClicked: function(index) {\n                report()\n                return true\n            }\n        })\n    }\n\n\n    function report() {\n        AppUtil.blockingCall(\n            AppService.reportProfile('chat', $scope.matchProfile, $scope.match),\n            () => {\n                $ionicPopup.confirm({\n                    title: translations.MATCH_REPORTED,\n                    template: translations.WANT_TO_REMOVE_MATCH,\n                    okText: translations.REMOVE,\n                    cancelText: translations.CANCEL\n                }).then(function(res) {\n                    if (res)\n                        unmatch()\n                })\n            }\n        )\n    }\n\n    function unmatch() {\n        AppUtil.blockingCall(\n            AppService.removeMatch($stateParams.matchId),\n            () => {\n                $ionicHistory.nextViewOptions({\n                    historyRoot: true,\n                    disableBack: true\n                })\n                $state.go('menu.chats')\n            }, 'REMOVE_MATCH_ERROR'\n        )\n    }\n\n    $scope.showKeyboard = () => cordova.plugins.Keyboard.show()\n\n    $scope.sendMessage = function(sendMessageForm) {\n        if (!$scope.input.message.trim().length) return\n            // If you do a web service call this will be needed as well as before the viewScroll calls\n            // you can't see the effect of this in the browser it needs to be used on a real device\n            // for some reason the one time blur event is not firing in the browser but does on devices\n        keepKeyboardOpen()\n\n        var msg = $scope.input.message\n        $scope.input.message = ''\n\n\n        var sendingMessage = {}\n        var sentAt = Date.now()\n        sendingMessage.sentAt = sentAt\n        sendingMessage.text = msg\n        $scope.sendingMessages.push(sendingMessage)\n\n        $timeout(function() {\n            keepKeyboardOpen()\n            viewScroll.scrollBottom(true)\n        }, 0)\n\n        AppService.sendChatMessage($stateParams.matchId, msg).then(\n            sentMessage => {\n                _.remove($scope.sendingMessages, 'sentAt', sentAt)\n            }, error => {\n                _.remove($scope.sendingMessages, 'sentAt', sentAt)\n                $scope.failedMessages.push(sendingMessage)\n                $log.error('error sending message ' + JSON.stringify(error))\n                AppUtil.toastSimple(translations.MESSAGE_NOT_SENT)\n            })\n    }\n\n    $scope.imageFromCamera = () => sendImage(Camera.PictureSourceType.CAMERA)\n\n    $scope.imageFromLibrary = () => sendImage(Camera.PictureSourceType.PHOTOLIBRARY)\n\n    function sendImage(sourceType) {\n\n        if (!ionic.Platform.isWebView())\n            return true\n\n        var options = {\n            quality: 70,\n            destinationType: Camera.DestinationType.DATA_URL,\n            sourceType: sourceType,\n            allowEdit: false,\n            encodingType: Camera.EncodingType.PNG,\n            targetWidth: 600,\n            targetHeight: 600,\n            //popoverOptions: CameraPopoverOptions,\n            saveToPhotoAlbum: false\n        }\n\n        $cordovaCamera.getPicture(options).then(imageData => {\n            var base64 = 'data:image/png;base64,' + imageData\n\n            var sendingMessage = {}\n            var sentAt = Date.now()\n            sendingMessage.sentAt = sentAt\n            sendingMessage.imageBase64 = base64\n            $scope.sendingMessages.push(sendingMessage)\n\n            $timeout(function() {\n                viewScroll.scrollBottom(true)\n            }, 0)\n\n            AppService.sendChatMessage($stateParams.matchId, null, base64).then(\n                sentMessage => {\n                    _.remove($scope.sendingMessages, 'sentAt', sentAt)\n                        // Set the base64 back onto the sent message so the image isn't reloaded from the server\n                        // which would cause it to temporarily disappear\n                    sentMessage.imageBase64 = base64\n                }, error => {\n                    _.remove($scope.sendingMessages, 'sentAt', sentAt)\n                    $scope.failedMessages.push(sendingMessage)\n                    $log.error('error sending message ' + JSON.stringify(error))\n                    AppUtil.toastSimple(translations.MESSAGE_NOT_SENT)\n                })\n\n        }, function(error) {\n            // If the user cancels a selection then this will be called\n            $log.log('$cordovaCamera.getPicture error ' + JSON.stringify(error))\n        })\n    }\n\n\n    var recordPopup\n\n    $scope.recordAudio = () => {\n\n        recordPopup = $ionicPopup.confirm({\n            title: 'Recording...',\n            template: 'Speak now!'\n        })\n        recordPopup.then(function(res) {\n            if (res)\n                saveRecording()\n            else\n                cancelRecording()\n        })\n\n        window.plugins.audioRecorderAPI.record(function(msg) {\n            $log.log('record ok: ' + JSON.stringify(msg))\n\n        }, function(msg) {\n            if (recordPopup)\n                recordPopup.close()\n            $log.log('record err: ' + JSON.stringify(msg))\n        })\n    }\n\n    function cancelRecording() {\n        window.plugins.audioRecorderAPI.stop(function(filePath) {\n            $log.log('audio cancel stop ok: ' + JSON.stringify(filePath))\n\n            var fileName = savedFilePath.split('/')[savedFilePath.split('/').length - 1];\n            $log.log('fileName: ' + fileName)\n            var directory;\n            if (cordova.file.documentsDirectory) {\n                directory = cordova.file.documentsDirectory; // for iOS\n            } else {\n                directory = cordova.file.externalRootDirectory; // for Android\n            }\n\n            $cordovaFile.removeFile(cordova.file.dataDirectory, fileName)\n                .then(function(success) {\n                    $log.log('deleted audio file')\n                }, function(error) {\n                    $log.log('error deleting cancelled audio file ' + JSON.stringify(error))\n                })\n\n        }, function(msg) {\n            $log.log('audio cancel stop err: ' + JSON.stringify(msg))\n        })\n    }\n\n    function saveRecording() {\n        window.plugins.audioRecorderAPI.stop(function(savedFilePath) {\n            $log.log('audio save stop ok: ' + JSON.stringify(savedFilePath))\n\n            var fileName = savedFilePath.split('/')[savedFilePath.split('/').length - 1]\n            $log.log('fileName: ' + fileName)\n\n            var directory = cordova.file.documentsDirectory ?\n                cordova.file.documentsDirectory : // for iOS\n                cordova.file.externalRootDirectory // for Android\n            directory = cordova.file.dataDirectory\n\n            $cordovaFile.readAsDataURL(directory, fileName)\n                .then(function(base64) {\n                    $log.log('readAsDataURL success ' + JSON.stringify(base64))\n\n                    $cordovaFile.removeFile(directory, fileName)\n\n                    var sendingMessage = {}\n                    var sentAt = Date.now()\n                    sendingMessage.sentAt = sentAt\n                    sendingMessage.audioBase64 = base64\n                    $scope.sendingMessages.push(sendingMessage)\n\n                    $timeout(function() {\n                        viewScroll.scrollBottom(true)\n                    }, 0)\n\n                    AppService.sendChatMessage($stateParams.matchId, null, null, base64).then(\n                        sentMessage => {\n                            _.remove($scope.sendingMessages, 'sentAt', sentAt)\n                                // Rename it to match the message primary key\n                            $cordovaFile.moveFile(directory, fileName, directory, sentMessage.id + '.m4a')\n\n                        }, error => {\n                            _.remove($scope.sendingMessages, 'sentAt', sentAt)\n                            $scope.failedMessages.push(sendingMessage)\n                            $log.error('error sending message ' + JSON.stringify(error))\n                            AppUtil.toastSimple(translations.MESSAGE_NOT_SENT)\n                        })\n\n\n\n                }, function(error) {\n                    $log.log('readAsDataURL error ' + JSON.stringify(error))\n                })\n\n\n        }, function(msg) {\n            $log.log('audio save stop err: ' + JSON.stringify(msg))\n        })\n    }\n\n    $scope.playAudio = (url) => {\n        $log.log('playing audio from ' + url)\n        new Audio(url).play()\n            // TODO look at using https://github.com/SidneyS/cordova-plugin-nativeaudio\n            //$analytics.eventTrack('audio-play')\n    }\n\n    /**\n     * Re-send a message that had failed to send\n     * @param message\n     */\n    function resendMessage(message) {\n\n        _.remove($scope.failedMessages, 'sentAt', message.sentAt)\n\n        var sentAt = Date.now()\n        message.sentAt = sentAt\n        $scope.sendingMessages.push(message)\n\n        // TODO handle image/audio messages\n\n        AppService.sendChatMessage($stateParams.matchId, message).then(\n            sentMessage => {\n                _.remove($scope.sendingMessages, 'sentAt', sentAt)\n            }, error => {\n                _.remove($scope.sendingMessages, 'sentAt', sentAt)\n                $scope.failedMessages.push(message)\n                $log.error('error resending message ' + JSON.stringify(error))\n                AppUtil.toastSimple(translations.MESSAGE_NOT_SENT)\n            })\n    }\n\n    // this keeps the keyboard open on a device only after sending a message, it is non obtrusive\n    function keepKeyboardOpen() {\n        //$log.log('keepKeyboardOpen')\n        //txtInput.one('blur', function () {\n        //\t//$log.log('textarea blur, focus back on it')\n        //\ttxtInput[0].focus()\n        //})\n    }\n\n    $scope.onMessageHold = function(e, itemIndex, message) {\n        $log.log('onMessageHold index:' + itemIndex + ' message.id:' + message.id)\n            // Currently only support actions on text and image messages\n        if (!message.text && !message.image)\n            return\n\n        $ionicActionSheet.show({\n            buttons: [\n                { text: $translate.instant(message.image ? 'SAVE_IMAGE' : 'COPY_TEXT') },\n                //{ text: $translate.instant('REPORT_MESSAGE')} TODO\n                //{ text: $translate.instant('DELETE_MESSAGE')}\n            ],\n            buttonClicked: function(index) {\n                switch (index) {\n                    case 0: // Copy Text/Save Image\n                        if (message.image) {\n                            // The <img> elements have id's in the format (message.id)_img\n                            let base64 = ImagesUtil.convertImgIdToBase64(message.id + '_img')\n                            if (cordova.base64ToGallery) {\n                                cordova.base64ToGallery(base64, 'img_',\n                                    // android: /storage/emulated/0/Pictures/img_201627162549.png TODO show toast with nice file path\n                                    msg => $log.log('Saved image to gallery ' + msg),\n                                    error => $log.error('Error saving chat image to gallery', error)\n                                )\n                            } else {\n                                AppUtil.toastSimple('Saving image not supported')\n                            }\n\n                        }\n                        if (message.text) {\n                            if (cordova.plugins.clipboard)\n                                $cordovaClipboard\n                                .copy(message.text)\n                                .then(() => AppUtil.toastSimple('Message copied to clipboard'), () => AppUtil.toastSimple('Unable to copy to clipboard'))\n                            else {\n                                AppUtil.toastSimple('Copy to clipboard not supported')\n                                    // TODO make a fallback to use a javascript based approach and wrap it all in a service\n                                    // http://stackoverflow.com/questions/400212/how-do-i-copy-to-the-clipboard-in-javascript\n                            }\n                        }\n                        break\n\n                        //case 1: // Delete\n                        //\t$scope.messages.splice(itemIndex, 1)\n                        //\t$timeout(function () {\n                        //\t\tviewScroll.resize()\n                        //\t}, 0)\n                        //\n                        //\tbreak\n                }\n\n                return true\n            }\n        })\n    }\n\n    $scope.onFailedMessageHold = function(e, itemIndex, message) {\n        $log.log('onFailedMessageHold: ' + JSON.stringify(message, null, 2))\n        $ionicActionSheet.show({\n            buttons: [\n                { text: $translate.instant('RESEND') },\n                { text: $translate.instant('EDIT') },\n                { text: $translate.instant('DELETE') }\n            ],\n            buttonClicked: function(index) {\n                switch (index) {\n                    case 0: // Resend\n                        resendMessage(message)\n                        break\n                    case 1: // Edit\n                        $scope.input.message = message.text\n                        _.remove($scope.failedMessages, 'sentAt', message.sentAt)\n                        break\n                    case 2: // Delete\n                        _.remove($scope.failedMessages, 'sentAt', message.sentAt)\n                        break\n                }\n                return true\n            }\n        })\n    }\n\n\n    // keyboardHeight and the handlers are required to set the right height on iOS\n    var keyboardHeight = 0\n\n    function keyboardShowHandler(e) {\n        keyboardHeight = e.keyboardHeight\n    }\n\n    function keyboardHideHandler(e) {\n        keyboardHeight = 0\n        $timeout(function() {\n            scroller.style.bottom = footerBar.clientHeight + 'px'\n        }, 0)\n    }\n\n    // Need to resize on entering the view\n    $scope.$on('elastic:resize', function(e, ta) {\n        if (!ta) return\n\n        var taHeight = ta[0].offsetHeight\n\n        if (!footerBar) return\n\n        var newFooterHeight = taHeight + 10\n        newFooterHeight = (newFooterHeight > 44) ? newFooterHeight : 44\n\n        footerBar.style.height = newFooterHeight + 'px'\n\n        if (device && device.platform.toLowerCase() === 'ios') {\n            scroller.style.bottom = newFooterHeight + keyboardHeight + 'px'\n        } else {\n            scroller.style.bottom = newFooterHeight + 'px'\n        }\n    })\n\n\n    function onProfilePicError(ele) {\n        this.ele.src = '' // set a fallback\n    }\n\n\n});","angular.module(\"constants\", [])\n  .constant(\"appName\", \"Just a Baby\")\n  .constant(\"parseAppId\", \"11111111122444\")\n  .constant(\"parseMount\", \"/parse/\")\n  .constant(\"gcpBrowserKey\", \"AIzaSyCUgT951OiYF4TmpR-lcpPd9zJ_NVBpoow\")\n  .constant(\"playStoreUrl\", \"http://goo.gl/6fQnJC\")\n  .constant(\"itunesUrl\", \"https://goo.gl/438VwP\")\n  .constant(\"webStoreUrl\", \"http://justababy.co\")\n  .constant(\"facebookAppId\", \"1219040608124053\")\n  .constant(\"linkedInId\", \"\")\n  .constant(\"linkedInSecret\", \"\")\n  .constant(\"socialShareMessage\", \"With Just-a-Baby, you know you’re meeting people who are ready to help you start your new journey.\")\n  .constant(\"socialShareSubject\", \"Download the App now.\")\n  .constant(\"adMob\", {\"android\":{\"banner\":\"\",\"interstitial\":\"\"},\"ios\":{\"banner\":\"\",\"interstitial\":\"\"}})\n  .constant(\"serverUrl\", \"https://justababy-prod.appspot.com\")\n  .constant(\"env\", \"prod\");\nvar FACEBOOK_APP_ID = \"1219040608124053\";\n"]}